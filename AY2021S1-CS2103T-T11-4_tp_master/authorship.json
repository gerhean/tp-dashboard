[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[![CI Status](https://github.com/AY2021S1-CS2103T-T11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S1-CS2103T-T11-4/tp/actions)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "**NUSave** is a brown-field software engineering team project based on the architecture of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[AddressBook-Level3](https://github.com/se-edu/addressbook-level3) that aims to provide students staying on"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "campus with a centralised platform to budget, track and manage their expenses."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Preview"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![Ui](docs/images/Ui.png)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Useful Links"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* [User Guide](docs/UserGuide.md)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* [Developer Guide](docs/DeveloperGuide.md)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* For the detailed documentation of this project, see the **[NUSave Product Website](https://ay2021s1-cs2103t-t11-4.github.io/tp/)**."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Acknowledgements"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 16,
      "-": 3
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    toolVersion \u003d \u00278.35\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    finalizedBy jacocoTestReport"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    archiveName \u003d \u0027nusave.jar\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "run {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 1,
      "wenhaogoh": 3,
      "-": 72
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "# About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Project team"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### Wen Hao"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cimg src\u003d\"images/wenhaogoh.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[[github](https://github.com/wenhaogoh)]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "[[portfolio](team/johndoe.md)]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Role: Team Lead"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Responsibilities: Database"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "### Yu Ming"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cimg src\u003d\"images/yu-ming-chen.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[[github](http://github.com/yu-ming-chen)]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "[[portfolio](team/johndoe.md)]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "* Responsibilities: Code Quality + Integration"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "### Ek Chin Hui"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cimg src\u003d\"images/ekchinhui.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[[github](http://github.com/EkChinHui)]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "* Responsibilities: Database"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### Chew Song Yu"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cimg src\u003d\"images/sogggy.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "[[github](http://github.com/sogggy)]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "[[portfolio](team/johndoe.md)]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "* Responsibilities: Testing"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### David"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cimg src\u003d\"images/davidliew9.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "[[github](https://github.com/davidliew9)]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "[[portfolio](team/johndoe.md)]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Responsibilities: Documentation"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 2,
      "sogggy": 10,
      "yu-ming-chen": 3,
      "davidliew9": 3,
      "wenhaogoh": 5,
      "-": 31
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- [1. Introduction](#1-introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- [2. Setting Up](#2-setting-up)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- [3. Design](#3-design)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    * [3.1. Architecture](#31-architecture)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    * [3.2. UI Component](#32-ui-component)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    * [3.3. Logic Component](#33-logic-component)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    * [3.4. Model Component](#34-model-component)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    * [3.5. State Component](#35-state-component)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    * [3.6. Storage Component](#36-storage-component)  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- [4. Implementation](#4-implementation)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    * [4.1. Main Page View](#41-main-page-view)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        * [4.1.1 Implementation of Create Budget Command](#411-implementation-of-create-budget-command)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- [5. Documentation](#5-documentation)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- [6. Testing](#6-testing)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- [7. Dev Ops](#7-dev-ops)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "NUSave is a budgeting tool made for **students staying on campus** who want to be able to track and manage their own"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "expenditures with ease. As students, it is common for them to have limited income during their academic years."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Therefore, it is especially necessary for those living independently to plan their finances prudently to ensure that"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "they do not overspend their tight budget."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "A typical student staying on campus has to keep track of: "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* daily expenses"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* club finances"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* project budgets"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* administrative fees"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Rather than having multiple documents and spreadsheets to keep track of their budgets, NUSave allows students to"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "conveniently manage all their expenditures under one centralised platform."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "NUSave implements both **Command Line Interface (CLI)** and **Graphical User Interface (GUI)**."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "In other words, users interact with the application through the command line and the GUI will reflect their actions."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## 2. Setting Up"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide [_Setting up and getting started_](SettingUp.md)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## 3. Design"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### 3.1. Architecture"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The ***Architecture Diagram*** given above explains the high-level design of the application."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Given below is a quick overview of each component:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**`Main`** has two classes called [`Main`] and [`MainApp`]."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "It has two primary responsibilities:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* At launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup methods where necessary."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The rest of the application consists of five components:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. [**`UI`**](#ui-component): Handles the UI of the application."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. [**`Logic`**](#logic-component): Executes the commands."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. [**`Model`**](#model-component): Holds the data of the application in memory."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. [**`State`**](#state-componenet): Remembers the current state of the application."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "For each of the five components:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Its API is defined in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Its functionality is exposed using a concrete `{Component Name} Manager` class which implements the corresponding API"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`interface` mentioned in the previous point."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - For example, the `Logic` component defines its API in the `Logic.java` interface and exposes its functionality"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    using the `LogicManager.java` class which implements the `Logic` interface."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "![Class Diagram of the Logic Component](images/LogicClassDiagram.png)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The ***Class Diagram*** given above shows how the five components interact with each other."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The ***Sequence Diagram*** given above shows how the components interact with each other for the scenario where the user"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "issues the command `delete 1`."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The sections below give more details of each component:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### 3.2. UI Component"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the UI Component](images/UiClassDiagram.png)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**API**: `Ui.java`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the `MainWindow` is specified in `MainWindow.fxml`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The `UI` component:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### 3.3. Logic Component"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Logic Component](images/LogicClassDiagram.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**API**: `Logic.java`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Logic` uses the `PageParser` class to parse the user command. This results in a `Command` object which is"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "executed by the `LogicManager`. The command execution can affect the `Model` (e.g. adding an expenditure). The result of"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`. In addition, the"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteBudgetCommand_sequence_diagram.png)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The ***Sequence Diagram*** given above represents the interactions within the `Logic` component for the"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### 3.4. Model Component"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Model Component](images/ModelClassDiagram.png)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Figure 3.4.1: Structure of the model component."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**API** : `Model.java`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The `Model`:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Stores a `UserPref` object that represents the user’s preferences."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Stores a `Nusave` object that encapsulates `Budget` and `Expenditure` data."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Exposes an unmodifiable `FilteredList\u003cRenderable\u003e` "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "that can be \u0027observed\u0027 e.g. the UI can be bound to this list so"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Does not depend on any of the other three components."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* `FilteredList` was used in favor of `ObservableList` to facilitate the find command implementation."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Now the list can be filtered based on a `Predicate`, allowing for more flexibility for other "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "filtering extensions i.e. filter by number of expenditures."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The `Nusave`:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Implements methods that interface with the `Budget` and `Expenditure` "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "data following the \"Tell, Don\u0027t Ask\" Principle."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Stores an `ObservableList\u003cRenderable\u003e` that is passed up to populate the `FilteredList\u003cRenderable\u003e`."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Stores a `BudgetList` (wrapper class for a `List\u003cBudget\u003e`) as well to access `Expenditures` within a `Budget` since"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "`Expenditures` cannot be accessed through `ObservableList\u003cRenderable\u003e`."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The `Budget`:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Implements the Renderable interface and can thus be stored in the FilteredList."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Contains a `Name`, `Date`, `Optional\u003cThreshold\u003e` and a `List\u003cExpenditure\u003e`."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The `Expenditure`:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Implements the Renderable interface and can thus be stored in the FilteredList."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Contains a `Name`, `Date`, `Price` and `Set\u003cTag\u003e`."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### 3.5. State Component"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": " (Contributed by Song Yu)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": " ***API***: `State.java`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": " The `State` component:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Stores a `BudgetIndex` instance that represents the budget that `NUSave` is currently displaying."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Stores a `Page` enumeration that represents the type of `Page` NUSave is currently on. "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Stores a `BooleanProperty` instance that triggers a callback on change of `boolean` value, updating the page title "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": " of the current page."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": " *  Stores a `String` value which represents the title of the current page."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": " `State` is used by `Model` to track the current state of NUSave. When a command that requires a different budget book"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": " or list of budgets to be displayed is called, `State` will store information of the new page being displayed. This information"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": " will be used when different commands are entered which requires `model` to know the current `state` of NUSave."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sogggy"
        },
        "content": " Using the current `Page` of NUSave, commands are parsed separately by either `BudgetPageParser` or `MainPageParser`. "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sogggy"
        },
        "content": " Thus, commands with similar names but belonging to different parsers will have different implementations and classes."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": " For example, a command like `list` will have different implementations, as a `ListExpenditureCommand` "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sogggy"
        },
        "content": " or `ListBudgetCommand.`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sogggy"
        },
        "content": " ![Structure of the storage component](images/StateClassDiagram.jpg)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sogggy"
        },
        "content": " Figure 3.5.1: Structure of the state component."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### 3.6. Storage Component"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**API** : `Storage.java`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The `Storage` component:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Can save `UserPref` objects in JSON format and read it back."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Can save all NUSave data in JSON format and read it back."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Structure of the storage component](images/StorageClassDiagram.png)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.6.1: Structure of the storage component."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The `Storage` component uses the Jackson API to convert Plain Old Java Objects (POJOs) into JSON files which are then"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "stored locally. It uses the same API to read existing JSON files during the launch of the application to load the stored"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "data into `NUSave`. As seen in Figure 3.6.1, `JsonUserPrefsStorage` is responsible for the reading and writing of"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`UserPref` objects and contains the file path of its JSON file while `JsonNusaveStorage` is responsible for the"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "reading and writing of all NUSave data and contains the file path of its JSON file."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Structure of the data stored by NUSave](images/PojoClassDiagram.png)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.6.2: Structure of the data stored by NUSave."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "In order for them to be recognised by the Jackson API, NUSave data objects (such as `Budget` and `Expenditure`) must be"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "converted into POJOs. Figure 3.6.2 depicts how the respective POJO classes for each of the data objects interact with"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "one another."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### Common Classes"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## 4. Implementation"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "### 4.1 Main page view"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "#### 4.1.1 Implementation of Create Budget Command"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following Sequence Diagram shows the interaction between the `Logic` component and `Model` component of NUSave "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "depicting a scenario when the user wants to create a budget for his Temasek Hall basketball CCA by entering the command"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`create n/Temasek Hall Basketball p/100`."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![CreateBudgetCommand Sequence Diagram](images/CreateBudgetCommand_sequence_diagram.png) "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 4.1.1.1: Sequence diagram  for create budget command in main page view."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. The `LogicManager` uses the `MainPageParser` to parse the given user input."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2. The `MainPageParser` will identify the command given by the user and pass the user input down to the"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`CreateBudgetCommandParser`."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "3. The `CreateBudgetCommandParser` will create a `Budget` with the given parameters **name** and **threshold** from the"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "user input."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "4. The `CreateBudgetCommandParser` will then create a `CreateBudgetCommand` object with the created `Budget` object as"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "the input parameter."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "5. The `CreateBudgetCommandParser` will then return a `CreateBudgetCommand` object."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "6. `LogicManager` will now call the `execute` method in the `CreateBudgetCommand` object."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "7. The `CreateBudgetCommand` will now call the `addBudget` method of the existing `Model` object and add the `Budget`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "object created into NUSave."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "8. The `CreateBudgetCommand` then returns a `CommandResult` indicating the successful addition of the `Budget` object."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "With the above sequence, a budget will be successfully created by the user in his NUSave application, and it will be"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "reflected on the user interface."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "#### 4.1.2 Implementation of Delete Budget Command"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following sequence diagram shows the interactions between the `Logic`, `State` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "depicting a scenario where the user would like to delete the first budget on his list of budgets."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![DeleteBudgetCommand Sequence Diagram](images/DeleteBudgetComman_sequence_diagram.png) "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 4.1.2.1: Sequence diagram  for delete budget command in main page view."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. The `LogicManager` uses the `MainPageParser` to parse the given user input."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2. The `MainPageParser` will identify the command given by the user and pass the user input down to the"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`DeleteBudgetCommandParser`."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "3. The `DeleteBudgetCommandParser` will create a `BudgetIndexManager` with the given parameters **index**  from the"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "user input."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "4. The `DeleteBudgetCommandParser` will then create a `DeleteBudgetCommand` object with the created `BudgetIndexManager`"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "object as the input parameter."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "5. The `DeleteBudgetCommandParser` will then return a `DeleteBudgetCommand` object back to the `LogicManager`."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "6. `LogicManager` will now call the `execute` method in the `DeleteBudgetCommand` object."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "7. The `DeleteBudgetCommand` `execute` method will now call the `deleteBudget` method of the existing `Model` object and "
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "delete the `Budget` object within NUSave."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "8. The `DeleteBudgetCommand` then returns a `CommandResult` indicating the successful deletion of the `Budget` object."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "With the above sequence, a budget will be successfully deleted by the user in his NUSave application, and it will be"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "reflected on the user interface."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## 5. Documentation"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "* [Documentation guide](Documentation.md)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## 6. Testing"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* [Testing guide](Testing.md)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## 7. Dev Ops"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* [Dev Ops guide](DevOps.md)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## Appendix"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**Target User Profile:**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* students staying on campus"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* has a need to manage a significant number of budgets and expenditures"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* prefers using desktop over other platforms"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* types fast and prefers typing to mouse interactions"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* is comfortable using CLI applications"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**Value Proposition:** "
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* manages expenditures faster than a typical mouse/GUI driven application"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* allows users to keep track of their budgets on a centralised platform"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### User Stories"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Priorities: "
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* High (must have) - `* * *` "
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Medium (nice to have) - `* *`"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "| Priority | As a …​                                 | I want to …​                | So that I can…​                                                     |"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | new user                                   | see a list of available commands | refer to instructions when I forget how to use the application       |"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | create a budget                | add a new budget that I need                                           |"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | delete a budget                | remove a budget that I no longer need                                  |"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | open a budget                  | view the expenditures of a budget                                      |"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | close a budget                 | return to the main window                                              |"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | add an expenditure             | add a new expenditure to a budget                                      |"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | delete an expenditure          | remove an expenditure that I no longer need                            |"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* *`    | user                                       | find an expenditure by name    | locate an expenditure easily                                           |"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "### Non-Functional Requirements"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2.  Should be able to hold up to 1000 budgets and expenditures without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks at a fast speed."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "### Glossary"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* **API**: Application Programming Interface"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "* **Mainstream OS**: Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## Appendix: Instructions for manual testing"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Given below are instructions to test the application manually:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### Launch and Shutdown"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. Launching the application"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "   1. Download the jar file and copy into an empty folder."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "   1. Double-click the jar file.\u003cbr\u003e"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "   Expected: Shows the GUI with a set of sample budgets. The window size may not be optimum."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "1. Saving window preferences"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "   1. Re-launch the application by double-clicking the jar file.\u003cbr\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### Deletion"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. Deleting a budget"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "   1. Prerequisites: User is in the main page. Multiple budgets are in the list."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Test case: `delete 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "      Expected: First budget is deleted from the list. Details of the deleted budget is shown in the status message."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "      Timestamp in the status bar is updated."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Test case: `delete 0`\u003cbr\u003e"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "      Expected: No budget is deleted. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "      Expected: Similar to previous."
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 24,
      "sogggy": 24,
      "yu-ming-chen": 29,
      "davidliew9": 157,
      "wenhaogoh": 22,
      "-": 85
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. [Introduction](#1-introduction)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [1.1. Purpose of document](#11-purpose-of-document)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "2. [About the user guide](#2-about-the-user-guide)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [2.1. Symbols](#21-symbols)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [2.2. Format](#22-format)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [2.3. Parameters](#23-parameters)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "3. [Layout](#3-layout)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [3.1. Main page view](#31-main-page-view)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [3.2. Budget page view](#32-budget-page-view)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "4. [Quick start](#4-quick-start)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "5. [Tips](#5-tips)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [5.1. Syntax highlighting](#51-syntax-highlighting)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "6. [Commands](#6-commands)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [6.1. Navigation](#61-navigation)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.1.1. Opening a budget: `open`](#611-opening-a-budget-open)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.1.2. Closing a budget:`close`](#612-closing-a-budget-close)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.1.3. Exit NUSave: `exit`](#613-exit-nusave-exit)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.1.4. View help: `help`](#614-view-help-help)   "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [6.2. Main page commands](#62-main-page-commands)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.2.1. Creating a budget: `create`](#621-creating-a-budget-create)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.2.2. Deleting a budget: `delete`](#622-deleting-a-budget-delete)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.2.3. Editing a budget: `edit`](#623-editing-a-budget-edit)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.2.4. Finding budgets: `find`](#624-finding-budgets-find)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.2.5. Listing budgets: `list`](#625-listing-budgets-list)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.2.6. Sorting budgets: `sort`](#626-sorting-budgets-sort)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.2.7. Clearing budgets: `clear`](#627-clearing-budgets-clear)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [6.3. Budget page commands](#63-budget-page-commands)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.3.1. Adding an expenditure: `add`](#631-adding-an-expenditure-add)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.3.2. Deleting an expenditure: `delete`](#632-deleting-an-expenditure-delete)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.3.3. Editing an expenditure: `edit`](#633-editing-an-expenditure-edit)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.3.4. Finding expenditures: `find`](#634-finding-expenditures-find)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.3.5. Listing expenditures: `list`](#635-listing-expenditures-list)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [6.3.6. Sorting expenditures: `sort`](#636-sorting-expenditures-sort)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "7. [Command summary](#7-command-summary)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [7.1. Navigation](#71-navigation)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [7.2. Main page commands](#72-main-page-commands)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [7.3. Budget page commands](#73-budget-page-commands)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "8. [Glossary](#8-glossary)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "9. [FAQ](#9-faq) "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Are you a **university student who stays on campus** and has difficulty managing your expenses?"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Are you tired of having to look through countless spreadsheets and memos just to figure out how much you have spent this month?"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Do you wish there exists a desktop application that can help you organise, track and manage all of your expenses?"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Look no further because NUSave is just the tool for you!"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Built by 5 university students staying on campus, we understand the difficulties of having to manage multiple budgets,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "be it for your daily expenses, school projects or club activities, amidst your busy schedule. NUSave aims to help alleviate"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "the hassle that comes along with managing multiple budgets by providing a **one-stop solution** to all your problems. It has"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "features that will help streamline the process of organising your **budgets** and **expenditures**, as well as generate"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "statistics that can offer you useful insights regarding your spending habits."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "What\u0027s more, NUSave has:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- a **Command Line Interface (CLI)** catered to those who can type fast and prefer to use a keyboard."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- a **Graphical User Interface (GUI)** to provide you with a visually appealing and aesthetic user experience."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 1.1. Purpose of document"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The purpose of this document is to provide a detailed reference for you to learn how to use NUSave to its fullest potential."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 2. About the user guide"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 2.1. Symbols"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Symbols | Meaning "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "-------| ------------ "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "⚠️ | This sybmol indicates that there is something important for you to take note of."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "📕 | This symbol indicates that there is additional information you may find useful."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ | This symbol indicates that an example is provided."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "❗| This symbol indicates that the parameter is required."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "❕| This symbol indicates that the parameter is optional."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 2.2. Format"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This section shows the format of all the commands in the user guide."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Format | Meaning | Exmaple "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "-------| ------------ | ----"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`lower_case/` | **Prefixes** | `n/` `p/` `t/`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`UPPER_CASE` | **Parameters** | `NAME` `THRESHOLD` `PRICE`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`[UPPER_CASE]` | **Optional parameters** | `[p/THRESHOLD]` in create budget command"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e ⚠️ Prefixes **cannot have spaces**: `n /` will be an invalid prefix."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 📕 Parameters can be in **any order** if they have **prefixes**."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "For example, a create budget command can have `n/NAME` and `p/THRESHOLD`, you can specify them in any order:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " - `create n/Temasek Hall Student Council p/1200`, or"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " - `create p/1200 n/Temasek Hall Student Council`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "However, if a given command has any parameter **without prefix**, that given parameter **must** be the **first parameter**."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "For example, a edit budget command have an `INDEX`, a `n/NAME` and a `p/THRESHOLD`. In this case, `INDEX` **must** be"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "the **first parameter**:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " - `edit 1 n/NUS Computing Club p/1000` is a valid command, however"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " - `edit n/NUS Computing Club p/1000 1` is an invalid command"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 2.3. Parameters"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Parameter | Meaning "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "-------| ------------"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`INDEX` | This is the index to be executed on for any given command."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`NAME` | This can be either **name of budget** or **name of expenditure** or **name to find**."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`PRICE` | This is the price of the expenditure."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`THRESHOLD` | This is the threshold of the budget."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`TAG` | This is the tag for the expenditure."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`TYPE` | This is the sorting types."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 3. Layout"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 3.1. Main page view"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 3.2. Budget page view"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 4. Quick start"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. Ensure that you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "2. Download the latest `NUSave.jar` from [here](https://github.com/AY2021S1-CS2103T-T11-4/tp/releases)."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "3. Copy the file to the folder you want to use as the *home folder* for NUSave."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "4. Double-click the file to start the application. A GUI similar to Figure 3.1 should appear in a few seconds."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of NUSave\u0027s GUI](images/QuickStartScreenShots/4_1_quickStart.png)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 4.1. Example of how NUSave\u0027s GUI looks like."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 📕 If the application does not start after double-clicking the file, you can troubleshoot by doing the following:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e For Windows users:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 1. Launch command prompt and navigate to the path of the home folder for NUSave."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 2. Enter the following command: `java -jar nusave.java`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e ![Example of launching NUSave using command prompt](images/QuickStartScreenShots/4_2_commandPrompt.png)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e Figure 4.2. Example of launching NUSave using command prompt."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e For MacOS users:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 1. Launch terminal and navigate to the path of the home folder for NUSave."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 2. Enter the following command: `java -jar nusave.java`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e ![Example of launching NUSave using terminal](images/QuickStartScreenShots/4_2_terminal.png)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e Figure 4.3. Example of launching NUSave using terminal."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "5. Congratulations, you have successfully launched NUSave!"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 📕 If you are launching the application for the first time, a set of sample data will be created for you."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e Use the [clear command](#627-clearing-budgets-clear) to purge the existing sample data."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "6. Type your desired command in the command box and press enter to execute it. Below is a series of commands that you can try:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - `help`: Shows the list of commands currently available."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - `exit`: Exits the app."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "7. Refer to the [commands](#6-commands) below for details of each command."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 5. Tips"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 5.1. Syntax highlighting"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 6. Commands"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 6.1. Navigation"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.1.1. Opening a budget: `open`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.1.2. Closing a budget: `close`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.1.3. Exit NUSave: `exit`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "You can use this command to **exit from the application**."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "When exiting NUSave, all changes made to the application will be saved."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e📕 You can use this command at any point of time."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "✏️ Example"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`exit`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This will exit the application. When the application is launched again, the change you made will remain."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![Example of exit command](images/CommandScreenShots/6_1_3_1_exit.png)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 6.2.1.1. Example of using the exit command on both the main page and budget page."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.1.4. View help: `help`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "You can use this command to **view a list of available commands**."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The help will be displayed in the results window, and it will contain a list of all available commands and their"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "required syntax."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e📕 You can use this command at any point of time."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This will display the help instructions in the results window."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of help command](images/CommandScreenShots/6_1_4_1_help.png)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 6.1.4.1. Example of help command"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 6.2. Main page commands"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.2.1. Creating a budget: `create`"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "You can use this command to **create a new budget**."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "When a new budget is created it will be stored inside NUSave, and it will be reflected immediately in the list of budget"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "on the main page of NUSave. This command is only available when no budget is open."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " \u003e ⚠️ Upon first launch, **you may notice NUSave main page is empty**. This is because there are no budgets created yet. Go"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " \u003e ahead and create a budget to see NUSave get populated with your entries!"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Format: `create n/NAME [p/THRESHOLD]`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "-------| ------------ | ------------- | ------"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " n/ | NAME | ❗Required | Name of the budget"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " p/ | THRESHOLD | ❕Optional | Target maximum capacity of the budget"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`create n/Temasek Hall Student Council p/1200`"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This will create a new budget called \"Temasek Hall Student Council\" with a threshold value of $1200."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of create budget command](images/CommandScreenShots/6_2_1_1_createBudget.png)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 6.2.1.1. Example of create budget command"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.2.2. Deleting a budget: `delete`"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "You can use this command to **delete an existing budget**."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "When a budget is deleted it will be removed from NUSave, and the "
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deletion will be reflected immediately in the list of budget on the main page of NUSave."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " \u003e ⚠️ **You cannot use this command if main page is empty**. This is because there are no budgets created yet. "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " \u003e You can only delete a budget if there are already existing budgets!"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " ------------ | ------------- | ------"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Index | ❗Required | Index of the budget"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This will delete the budget with the index \"1\"."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![Example of delete budget command](images/CommandScreenShots/6_2_2_1_deleteBudget.png)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 6.2.1.1. Example of delete budget command"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.2.3. Editing a budget: `edit`"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "You can use this command to **edit an existing budget**."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "When a budget is edited the changes will be saved on NUSave, and  will be "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "reflected immediately on the list of budgets."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e⚠️ You can only use this command on existing budgets.  "
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Format: edit INDEX n/NAME p/THRESHOLD"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "-------| ------------ | ------------- | ------"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " \\- | INDEX | ❗Required | Index of the budget displayed on NUSave"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " n/ | NAME | ❕Optional | Name of the budget to be edited to"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " p/ | THRESHOLD | ❕Optional | Threshold of the budget to be edited to"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " "
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " \u003e⚠️ Although both NAME and THRESHOLD fields are optional You must have at least one of the Prefix and "
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " \u003e corresponding Parameters present. "
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Format: `edit 2 n/NUS Computing club`"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This will edit a budget at **index 2** to be **renamed \"NUS Computing Club\"**."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of edit budget command](images/CommandScreenShots/6_2_3_1_editBudget.png)"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 6.2.3.1. Example of edit budget command"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.2.4. Finding budgets: `find`"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.2.5. Listing budgets: `list`"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "You can use this command to **list all budgets** in NUSave."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "This command is usually used to display all budgets after searching for specific budgets using the `find` command."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003e⚠️ If the `find` command has not been used, the `list` command may not have any visible effect. This is because all budgets have already been displayed."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Format: list"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "list"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "This will display all existing budgets in NUSave."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "![Example of list budgets command](images/CommandScreenShots/6_2_5_1_listBudget.png)"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Figure 6.2.5.1. Example of list budgets command"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.2.6. Sorting budgets: `sort`"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "You can use this command to **sort your budgets**."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "You can sort your budgets based on two different type of sorts:"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. Sort by created date (the latest budget created will be at the top of the main page of NUSave)"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "   "
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "   ```📕 Note: If budgets are created on the same date. They will be sorted by name within themselves.```"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "   "
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "2. Sort by name of the budget (budgets will be ordered in alphabetical order from a-z, case-insensitive)"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e⚠️ If there are **no budgets** or there is **only one budget** in NUSave, the sort command may not have any visible effect."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e This is because there needs to be more than one budget for sorting to work. Go ahead and add in more budgets "
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e to see your budgets in NUSave get sorted!"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `sort TYPE`"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " ------------ | ------------- | ------"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " TYPE | ❗Required | Two different type of sorts available: `time` `name`"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`sort name`"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This will sort all the budgets in NUSave by their name in alphabetic order."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of sort budgets command](images/CommandScreenShots/6_2_6_1_sortBudget.png)"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 6.2.6.1. Example of sort budgets command"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.2.7. Clearing budgets: `clear`"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You can use this command to **delete all existing budgets** in NUSave."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This command is usually used to purge the sample data that is created when you launch the application for the first time."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e ⚠️ Exercise caution when using the clear command as it is **irreversible**! \u003cbr\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e ⚠️ If there are **no budgets** in NUSave, the clear command will not have any visible effect."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`clear`"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will delete all existing budgets in NUSave."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of clear budgets command](images/CommandScreenShots/6_2_7_1_clearBudget.png)"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 6.2.7.1. Example of clear budgets command"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 6.3. Budget page commands"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.3.1. Adding an expenditure: `add`"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.3.2. Deleting an expenditure: `delete`"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "You can use this command to **delete an existing expenditure**."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "When an expenditure is deleted it will be removed from NUSave, and the "
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deletion will be reflected immediately in the list of expenditures on the budget page of NUSave."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " \u003e ⚠️ **You cannot use this command if budget page is empty**. This is because there are no expenditures created yet. "
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " \u003e You can only delete an expenditure if there are already existing budgets!"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " ------------ | ------------- | ------"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Index | ❗Required | Index of the expenditure"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This will delete the expenditure with the index \"2\"."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![Example of delete expenditure command](images/CommandScreenShots/6_3_2_1_deleteExpenditure.png)"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 6.3.2.1. Example of delete expenditure command"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.3.3. Editing an expenditure: `edit`"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "You can use this command to **edit an existing expenditure**."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "When an expenditure is edited the changes will be saved on NUSave, and  will be "
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "reflected immediately on the list of expenditures."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " \u003e ⚠️ **You can only use this command on existing expenditures**.  "
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Format: `edit INDEX n/NAME p/PRICE`"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "-------| ------------ | ------------- | ------"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\\- | INDEX | ❗Required | Index of the expenditure displayed on NUSave"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " n/ | NAME | ❕Optional | Name of the expenditure to be edited to"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " p/ | PRICE | ❕Optional | Price of the expenditure to be edited to"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " "
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " \u003e ⚠️ Although both NAME and PRICE fields are optional **You must have at least one of the Prefix and "
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " \u003e  corresponding Parameters present**. "
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Format: `edit 1 n/Long-Sleeve p/20`"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This will edit an expenditure at **index 1** to be **renamed** \"Long-Sleeve\" with an edited **price** of $20."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![Example of edit expenditure command](images/CommandScreenShots/6_3_3_1_editExpenditure.png)"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 6.3.3.1. Example of edit expenditure command"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.3.4. Finding expenditures: `find`"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "You can use this command to **filter expenditures by name**."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "   ```📕 Note: Expenditures will be filtered as long as they contain the search term. The filter is case-insensitive, using upper-case or lower-case will not make a difference in the search result.```"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003e ⚠️ **You can only use this command if there are existing expenditures**."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003e ⚠️ **If no expenditures are displayed, it means that none of the expenditures matched your search term. You can use the `list` command to display all expenditures again**."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Format: `find NAME`"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "-------| ------------ | ------------- | ------"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\\- | NAME | ❗Required | Name of the expenditure to be searched"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "find sock"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "This will display all existing expenditures with names that contain \u0027sock\u0027 in the current budget."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "![Example of find expenditures command](images/CommandScreenShots/6_3_4_1_findExpenditure.png)"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Figure 6.3.5.1. Example of find expenditures command"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.3.5. Listing expenditures: `list`"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "You can use this command to **list all expenditures** in the current budget."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "This command is usually used to display all expenditures after searching for specific expenditures using the `find` command."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003e⚠️ If the `find` command has not been used, the `list` command may not have any visible effect. This is because all expenditures have already been displayed."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Format: list"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "list"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "This will display all existing expenditures in the current budget."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "![Example of list expenditures command](images/CommandScreenShots/6_3_5_1_listExpenditure.png)"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Figure 6.3.5.1. Example of list expenditures command"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 6.3.6. Sorting expenditures: `sort`"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "You can use this command to **sort your expenditures** within a budget."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "You can sort your expenditures within a budget based on two different type of sorts:"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. Sort by added date (the latest expenditure added will be at the top of that budget page in NUSave)"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "   "
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "   ```📕 Note: If expenditures are created on the same date. They will be sorted by name within themselves.```"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "   "
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "2. Sort by name of the expenditure (expenditures will be ordered in alphabetical order from a-z, case-insensitive)"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e⚠️ If there are **no expenditures** or there is **only one expenditure** in that budget, the sort command may not "
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e show any effect. This is because there needs to be more than one expenditure for sorting to work. "
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e Go ahead and add in more expenditures to see your expenditures in that budget get sorted!"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `sort TYPE`"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " ------------ | ------------- | ------"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " TYPE | ❗Required | Two different type of sorts available: `time` `name`"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example:"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`sort time`"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This will sort all the expenditures in that budget by their added date with the latest expenditure added at the top."
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of sort expenditures command](images/CommandScreenShots/6_3_6_1_sortExpenditure.png)"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 6.3.6.1. Example of sort expenditures command"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 7. Command summary"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 7.1. Navigation"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "| **Action** | **Format, Examples** |"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|--------|--------------------------|"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|Open (Budget)       |`open INDEX`\u003cbr\u003ee.g. `open 1`|"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|Close (Budget)      |`close`|"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|Help                |`help`|"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|Exit                |`exit`|"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 7.2. Main page commands"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "| **Action** | **Format, Examples** |"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|--------|--------------------------|"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|Create (Budget)     |`create n/NAME`, `create n/NAME p/THRESHOLD` \u003cbr\u003ee.g. `create n/Daily Expenses`, `create n/Project Work p/100`|"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|Delete (Budget)     |`delete INDEX`\u003cbr\u003ee.g. `delete 1`|"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|List                |`list`|"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|Find                |`find KEYWORD`\u003cbr\u003ee.g. `find Breakfast`|"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 7.3. Budget page commands"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "| **Action** | **Format, Examples** |"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|--------|--------------------------|"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|Add (Expenditure)   |`add n/NAME p/PRICE` \u003cbr\u003ee.g. `add n/Breakfast p/10`|"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|Delete (Expenditure)|`delete INDEX`\u003cbr\u003ee.g. `delete 1`|"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|List                |`list`|"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "|Find                |`find KEYWORD`\u003cbr\u003ee.g. `find Breakfast`|"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 8. Glossary"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 9. FAQ"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: How do I transfer my data to another computer?"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: Install the application on another computer and overwrite the empty data file it creates with the .json file that contains the data of your previous NUSave folder."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: Where is my save data stored?"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: They are stored in the `data` folder where the NUSave application is found."
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: How do I make backups of my data in NUSave?"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: You can copy and paste the `data` folder located in the NUSave home folder to somewhere safe and easy to remember. To restore the backup, copy the entire folder back into the same home folder and overwrite the existing folder."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: How do I delete all my data in NUSave?"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: You can delete the `data` folder in the NUSave home folder."
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: Will my data be compromised?"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: Don\u0027t worry! All data in NUSave is stored on your local device and will not be transferred over the web."
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: Does this application require an internet connection to run?"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: NUSave does not access any web services and can be run completely offline."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 72,
      "yu-ming-chen": 177,
      "davidliew9": 77,
      "wenhaogoh": 163,
      "-": 69
    }
  },
  {
    "path": "src/main/java/seedu/address/MainApp.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Config;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Version;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.ConfigUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.LogicManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.storage.JsonNusaveStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.storage.NusaveStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.UserPrefsStorage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.UiManager;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Version VERSION \u003d new Version(0, 6, 0, true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Model model;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config config;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ NUSave ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d AppParameters.parse(getParameters());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        config \u003d initConfig(appParameters.getConfigPath());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        NusaveStorage nusaveStorage \u003d new JsonNusaveStorage(userPrefs.getNusaveFilePath());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        storage \u003d new StorageManager(nusaveStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        initLogging(config);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d initModelManager(storage, userPrefs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new UiManager(logic);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s NUSave and {@code userPrefs}. \u003cbr\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * The data from the sample NUSave will be used instead if {@code storage}\u0027s NUSave is not found,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * or an empty NUSave will be used instead if errors occur when reading {@code storage}\u0027s NUSave."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) throws CommandException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Optional\u003cReadOnlyNusave\u003e nusaveOptional;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        ReadOnlyNusave initialData;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            nusaveOptional \u003d storage.readNusave();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            if (nusaveOptional.isEmpty()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                logger.info(\"Data file not found. Will be starting with a sample NUSave.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            initialData \u003d nusaveOptional.orElseGet(SampleDataUtil::getSampleNusave);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            logger.warning(\"Data file not in the correct format. Will be starting with an empty NUSave\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            initialData \u003d new Nusave();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty NUSave\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            initialData \u003d new Nusave();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ModelManager(initialData, userPrefs);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initLogging(Config config) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        LogsCenter.init(config);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code configFilePath} is null."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        Config initializedConfig;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePathUsed;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configFilePath !\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Custom Config file specified \" + configFilePath);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            configFilePathUsed \u003d configFilePath;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using config file : \" + configFilePathUsed);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d configOptional.orElse(new Config());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"Using default config properties\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d new Config();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update config file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedConfig;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * or a new {@code UserPrefs} with default configuration if errors occur when"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     * reading from the file."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    protected UserPrefs initPrefs(UserPrefsStorage storage) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d storage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using prefs file : \" + prefsFilePath);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs initializedPrefs;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"Using default user prefs\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty NUSave\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update prefs file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(initializedPrefs);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedPrefs;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        logger.info(\"Starting NUSave \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping NUSave ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(model.getUserPrefs());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "yu-ming-chen": 2,
      "wenhaogoh": 22,
      "-": 159
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/GuiSettings.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A Serializable class that contains the GUI settings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiSettings implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final double DEFAULT_HEIGHT \u003d 600;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final double DEFAULT_WIDTH \u003d 450;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowWidth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowHeight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Point windowCoordinates;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code GuiSettings} with the default height, width and position."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        windowWidth \u003d DEFAULT_WIDTH;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        windowHeight \u003d DEFAULT_HEIGHT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d null; // null represent no coordinates"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code GuiSettings} with the specified height, width and position."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d new Point(xPosition, yPosition);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowWidth() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowHeight() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowHeight;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public Point getWindowCoordinates() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof GuiSettings)) { //this handles null as well."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings o \u003d (GuiSettings) other;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth \u003d\u003d o.windowWidth"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Width : \" + windowWidth + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Height : \" + windowHeight + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Position : \" + windowCoordinates);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 1,
      "-": 78
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/LogsCenter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Configures and manages loggers and handlers, including their logging level"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Named {@link Logger}s can be obtained from this class\u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * These loggers have been configured to output messages to the console and a {@code .log} file by default,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogsCenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_COUNT \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String LOG_FILE \u003d \"nusave.log\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Level currentLogLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler fileHandler;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler consoleHandler;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes with a custom log level (specified in the {@code config} object)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logging levels for existing loggers will only be updated if the logger with the same name"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * is requested again from the LogsCenter."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void init(Config config) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        currentLogLevel \u003d config.getLogLevel();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"currentLogLevel: \" + currentLogLevel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a logger with the given name."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Logger getLogger(String name) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        Logger logger \u003d Logger.getLogger(name);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        removeHandlers(logger);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        addConsoleHandler(logger);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        addFileHandler(logger);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return Logger.getLogger(name);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Logger for the given class name."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        if (clazz \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return Logger.getLogger(\"\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return getLogger(clazz.getSimpleName());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the {@code consoleHandler} if it is null."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addConsoleHandler(Logger logger) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (consoleHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            consoleHandler \u003d createConsoleHandler();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.addHandler(consoleHandler);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Remove all the handlers from {@code logger}."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void removeHandlers(Logger logger) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        Arrays.stream(logger.getHandlers())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(logger::removeHandler);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates {@code fileHandler} if it is null."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addFileHandler(Logger logger) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                fileHandler \u003d createFileHandler();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error adding file handler for logger.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code FileHandler} for the log file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there are problems opening the file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler createFileHandler() throws IOException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileHandler;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler createConsoleHandler() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        consoleHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return consoleHandler;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 1,
      "-": 111
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command! \\n%1$s\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"The index provided is out of bounds.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String EXPENDITURE_MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"The expenditure does not exist!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String BUDGET_MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"The budget does not exist!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String MESSAGE_NO_ENTRIES_FOUND \u003d \"No entries matched the search term.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "sogggy": 1,
      "davidliew9": 1,
      "wenhaogoh": 2,
      "-": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/Logic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Logic component"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Logic {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandText The command as entered by the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the result of the command execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException If an error occurs during parsing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /** Returns an unmodifiable view of the filtered list of budgets */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    ObservableList\u003cRenderable\u003e getFilteredRenderableList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Path getNusaveFilePath();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    BooleanProperty getIsBudgetPageProp();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    StringProperty getTotalExpenditureStringProp();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getPageTitle();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getTotalExpenditureValue();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Optional\u003cThreshold\u003e getThreshold();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean isBudgetPage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * Set the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 3,
      "sogggy": 14,
      "wenhaogoh": 3,
      "-": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/LogicManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.PageParser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.budgetpageparser.BudgetPageParser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.mainpageparser.MainPageParser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String UNKNOWN_PAGE_ERROR_MESSAGE \u003d \"Could not identify current page.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final PageParser mainPageParser;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final PageParser budgetPageParser;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public LogicManager(Model model, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.mainPageParser \u003d new MainPageParser();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetPageParser \u003d new BudgetPageParser();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        //Logging, safe to ignore"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Page currentPage \u003d this.model.getPage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        switch (currentPage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case MAIN:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            command \u003d mainPageParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case BUDGET:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            command \u003d budgetPageParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new CommandException(UNKNOWN_PAGE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            storage.saveNusave(model.getNusave());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ObservableList\u003cRenderable\u003e getFilteredRenderableList() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return model.getFilteredRenderableList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return model.getNusaveFilePath();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getGuiSettings();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BooleanProperty getIsBudgetPageProp() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return model.getBudgetPageProp();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StringProperty getTotalExpenditureStringProp() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return model.getTotalExpenditureStringProp();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getPageTitle() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.model.getPageTitle();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTotalExpenditureValue() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.model.getTotalExpenditureValue();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cThreshold\u003e getThreshold() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.model.getThreshold();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isBudgetPage() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this.model.isBudgetPage();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "sogggy": 47,
      "davidliew9": 2,
      "wenhaogoh": 7,
      "-": 68
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/BudgetPageCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Class that represents general commands that occur in a budget page."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public abstract class BudgetPageCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes a command that occurs in the budget page."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the result executing the command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public abstract CommandResult execute(Model model) throws CommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 8,
      "davidliew9": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CommandResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Help information should be shown to the user. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean showHelp;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /** The application should exit. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.showHelp \u003d showHelp;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this(feedbackToUser, false, false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns a boolean indicating whether the command is an help command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return a boolean"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowHelp() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return showHelp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns a boolean indicating whether the command is an exit command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return a boolean"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof CommandResult)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult otherCommandResult \u003d (CommandResult) other;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(feedbackToUser, showHelp, exit);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 8,
      "-": 71
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting NUSave as requested ...\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the termination of the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 1,
      "davidliew9": 5,
      "-": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/MainPageCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Class that represents general commands that occur in the Main page."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public abstract class MainPageCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes a command that occurs in the budget page."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the result executing the command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public abstract CommandResult execute(Model model) throws CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 9,
      "davidliew9": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/AddExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Adds an expenditure to a specific Budget."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class AddExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Adds a new expenditure to the budget.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + PREFIX_NAME + \"NAME \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + PREFIX_PRICE + \"PRICE \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"(\" + PREFIX_TAG + \"TAG)\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: \" + PREFIX_NAME + \"NAME\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_PRICE + \"PRICE\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_TAG + \"TAG \" + \"(Optional)\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"White Collared Shirt \" + PREFIX_PRICE + \"25\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                     \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"Navy Blue Tie \" + PREFIX_PRICE + \"15 \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + PREFIX_TAG + \"Apparel \" + PREFIX_TAG + \"Blue\" + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Added a new expenditure: %1$s\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Expenditure toAdd;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Creates an AddExpenditureCommand to add the specified {@code expenditure}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toAdd the expenditure to be added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public AddExpenditureCommand(Expenditure toAdd) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.toAdd \u003d toAdd;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the add expenditure command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the result of the command with the success message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.addExpenditure(toAdd);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                || (other instanceof AddExpenditureCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 toAdd.equals(((AddExpenditureCommand) other).toAdd));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 14,
      "sogggy": 32,
      "davidliew9": 10,
      "wenhaogoh": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/CloseBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.BudgetPageCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Closes a particular budget so the user can return to the main screen."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class CloseBudgetCommand extends BudgetPageCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"close\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Closes the current budget.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Closed budget.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the close budget command and sets the current page to be the Main Page."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the result of the command with the success message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.closeBudget();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "sogggy": 16,
      "davidliew9": 9,
      "wenhaogoh": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/DeleteExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Deletes an expenditure from a specific Budget."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class DeleteExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" INDEX\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Deletes an expenditure by index.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: \" + \"INDEX\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_DELETE_EXPENDITURE_SUCCESS \u003d \"Deleted expenditure.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private final ExpenditureIndex toDelete;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Creates a DeleteExpenditureCommand to delete the specified {@code expenditure}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param expenditure the expenditure to be deleted"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public DeleteExpenditureCommand(ExpenditureIndex expenditure) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(expenditure);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.toDelete \u003d expenditure;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the delete expenditure command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the result of the command with the success message"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!model.isWithinRange(toDelete)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new CommandException(Messages.EXPENDITURE_MESSAGE_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        model.deleteExpenditure(toDelete);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DELETE_EXPENDITURE_SUCCESS));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7,
      "davidliew9": 40,
      "wenhaogoh": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/EditExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INDEX_OUT_OF_BOUNDS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class EditExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" INDEX \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"(\" + PREFIX_NAME + \"NAME) \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"(\" + PREFIX_PRICE + \"PRICE) \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"(\" + PREFIX_TAG + \"TAG)\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Edits an expenditure.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: INDEX\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_NAME + \"NAME (Optional)\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_PRICE + \"PRICE (Optional)\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_TAG + \"TAG (Optional)\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_NAME + \"White Collared Shirt \" + PREFIX_PRICE + \"25\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                     \" + COMMAND_WORD + \" 2 \" + PREFIX_PRICE + \"15 \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + PREFIX_TAG + \"Apparel \" + PREFIX_TAG + \"Blue\" + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Edited expenditure information.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private final ExpenditureIndex expenditureIndex;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private final EditExpenditureDescriptor editExpenditureDescriptor;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Create an EditExpenditureCommand to edit the specified expenditure at {code: index}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param editExpenditureDescriptor"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureCommand(ExpenditureIndex index, EditExpenditureDescriptor editExpenditureDescriptor) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(editExpenditureDescriptor);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.expenditureIndex \u003d index;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.editExpenditureDescriptor \u003d editExpenditureDescriptor;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ObservableList\u003cRenderable\u003e currentList \u003d model.getFilteredRenderableList();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (expenditureIndex.getExpenditureIndex().get() \u003e\u003d currentList.size()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new CommandException(MESSAGE_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Expenditure toEdit \u003d (Expenditure) currentList.get(expenditureIndex.getExpenditureIndex().get());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Expenditure editedExpenditure \u003d createEditedExpenditure(toEdit, editExpenditureDescriptor);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        model.editExpenditure(toEdit, editedExpenditure);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private static Expenditure createEditedExpenditure(Expenditure expenditureToEdit,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                                                       EditExpenditureDescriptor editExpenditureDescriptor) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Name name \u003d editExpenditureDescriptor.getName().orElse(expenditureToEdit.getName());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Price price \u003d editExpenditureDescriptor.getPrice().orElse(expenditureToEdit.getPrice());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Date date \u003d editExpenditureDescriptor.getDate().orElse(expenditureToEdit.getCreatedOn());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Set\u003cTag\u003e tags \u003d editExpenditureDescriptor.getTags().orElse(expenditureToEdit.getTags());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new Expenditure(name, price, date, tags);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static class EditExpenditureDescriptor {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        private Name name;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        private Price price;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        private Date date;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public EditExpenditureDescriptor() {}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Boolean isAnyFieldNull() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return CollectionUtil.isAnyNonNull(name, price, date, tags);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public void setName(Name name) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public void setPrice(Price price) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            this.price \u003d price;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Optional\u003cPrice\u003e getPrice() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return Optional.ofNullable(price);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public void setDate(Date date) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            this.date \u003d date;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Optional\u003cDate\u003e getDate() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return Optional.ofNullable(date);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * Sets {@code tags} to this object\u0027s {@code tags}."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public void setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * if modification is attempted."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * Returns {@code Optional#empty()} if {@code tags} is null."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 16,
      "davidliew9": 126,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/FindExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Filters a budget book to find specific expenditures matching a search term."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class FindExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" NAME\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Finds expenditures by name.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: \" + \"NAME\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" Shirt\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Updated list of expenditures to show entries that contain \\\u0027%1$s\\\u0027.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Creates a FindExpenditureCommand to to find expenditures matching"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * the specified {@code name}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param name the name of the expenditure to be searched."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public FindExpenditureCommand(Name name) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Executes the find expenditure command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the result of the command with the success message."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String searchTerm \u003d name.value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Predicate\u003cRenderable\u003e predicate \u003d renderable -\u003e renderable.contains(searchTerm);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.updateFilteredRenderableList(predicate);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, name));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                || (other instanceof FindExpenditureCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                \u0026\u0026 name.equals(((FindExpenditureCommand) other).name));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 55,
      "wenhaogoh": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/HelpExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.main.HelpBudgetCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Format full help instructions for every command for display."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class HelpExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Shows a list of commands that is currently available.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String HELP_MESSAGE \u003d AddExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + CloseBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + DeleteExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + EditExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + FindExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + HelpBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + ListExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + SortExpenditureCommand.MESSAGE_USAGE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Executes the help command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new CommandResult(HELP_MESSAGE, false, false);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 15,
      "yu-ming-chen": 23
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/ListExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RENDERABLES;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class ListExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Lists all expenditures.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Updated list of expenditures to show all entries.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // sets predicate to always return true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model.updateFilteredRenderableList(PREDICATE_SHOW_ALL_RENDERABLES);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 25,
      "wenhaogoh": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/SortExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.BudgetPageCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Creates a new SortExpenditureCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortExpenditureCommand extends BudgetPageCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"sort\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Sorts expenditure by name or time.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Usage: \" + SYNTAX + \" SORT TYPE\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Parameters: TIME or NAME\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" time\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Sorted expenditures.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final SortType sortType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Creates a SortBudegetCommand to to sort budgets by {@code sortType}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param sortType the type of sort."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public SortExpenditureCommand(SortType sortType) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.sortType \u003d sortType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Executes the sort expenditure command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        switch (sortType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case TIME: {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            model.sortExpenditureByCreatedDate();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case NAME: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            model.sortExpendituresByName();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 2,
      "yu-ming-chen": 52,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/exceptions/CommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an error which occurs during execution of a {@link Command}."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Constructs a new {@code CommandException} with the specified detail {@code message}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param cause"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 7,
      "-": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/ClearBudgetsCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class ClearBudgetsCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Deletes all budgets.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_DELETE_BUDGET_SUCCESS \u003d \"Cleared all budgets.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.deleteAllBudgets();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(MESSAGE_DELETE_BUDGET_SUCCESS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7,
      "wenhaogoh": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/CreateBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.MainPageCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Creates a new Budget."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class CreateBudgetCommand extends MainPageCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"create\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" \" + PREFIX_NAME + \"NAME \" + \"(\" + PREFIX_PRICE + \"THRESHOLD)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Creates a budget.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Parameters: \" + PREFIX_NAME + \"NAME\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"                            \" + PREFIX_PRICE + \"THRESHOLD \" + \"(Optional)\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"Daily Expenses \" + PREFIX_PRICE + \"200\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                     \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"Daily Expenses\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Created a new budget: %1$s\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Budget toCreate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Creates a new CreateBudgetCommand to create the spcified {@code budget}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toCreate the budget to be created"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public CreateBudgetCommand(Budget toCreate) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.toCreate \u003d toCreate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the create budget command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.addBudget(toCreate);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, toCreate));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "yu-ming-chen": 19,
      "davidliew9": 11,
      "wenhaogoh": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/DeleteBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class DeleteBudgetCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" INDEX\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Deletes a budget by index.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            + \"Parameters: INDEX\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_DELETE_BUDGET_SUCCESS \u003d \"Deleted budget.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private final BudgetIndex toDelete;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Creates a DeleteBudgetCommand to delete the specified {@code budget}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param budget the budget to be deleted"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public DeleteBudgetCommand(BudgetIndex budget) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(budget);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.toDelete \u003d budget;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the delete budget command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!model.isWithinRange(toDelete)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new CommandException(Messages.BUDGET_MESSAGE_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        model.deleteBudget(toDelete);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new CommandResult(MESSAGE_DELETE_BUDGET_SUCCESS);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 6,
      "davidliew9": 39,
      "wenhaogoh": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/EditBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INDEX_OUT_OF_BOUNDS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class EditBudgetCommand extends Command {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" INDEX \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + PREFIX_NAME + \"NAME \" + \"(\" + PREFIX_PRICE + \"THRESHOLD)\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Edits a budget.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: INDEX\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_NAME + \"NAME \" + \"(Optional)\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_PRICE + \"THRESHOLD \" + \"(Optional)\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"1 \" + PREFIX_NAME + \"Books \" + PREFIX_PRICE + \"120\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Edited budget.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final BudgetIndex budgetIndex;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final EditBudgetDescriptor editBudgetDescriptor;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Creates a EditBudgetCommand to edit the specified {@code budget}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param index the budget index of the budget to be edited"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public EditBudgetCommand(BudgetIndex index, EditBudgetDescriptor editBudgetDescriptor) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.budgetIndex \u003d index;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.editBudgetDescriptor \u003d editBudgetDescriptor;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Executes the edit budget command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the result of the command with the success message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ObservableList\u003cRenderable\u003e currentList \u003d model.getFilteredRenderableList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (budgetIndex.getBudgetIndex().get() \u003e\u003d currentList.size()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new CommandException(MESSAGE_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget toEdit \u003d (Budget) currentList.get(budgetIndex.getBudgetIndex().get());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget editedBudget \u003d createEditedBudget(toEdit, editBudgetDescriptor);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        model.editBudget(toEdit, editedBudget);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Create an edited budget with the given input by the user"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param budgetToEdit the original budget to be edited"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param editBudgetDescriptor holds all the edit input from the user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the edited budget after the edit."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private static Budget createEditedBudget(Budget budgetToEdit, EditBudgetDescriptor editBudgetDescriptor) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Name name \u003d editBudgetDescriptor.getName().orElse(budgetToEdit.getName());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Date createdOn \u003d editBudgetDescriptor.getCreatedOn().orElse(budgetToEdit.getCreatedOn());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Optional\u003cThreshold\u003e threshold \u003d editBudgetDescriptor.getThreshold().orElse(budgetToEdit.getThreshold());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        List\u003cExpenditure\u003e expenditures \u003d budgetToEdit.getExpenditures();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new Budget(name, createdOn, threshold, expenditures);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static class EditBudgetDescriptor {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        private Name name;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        private Date createdOn;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        private Optional\u003cThreshold\u003e threshold;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        private List\u003cExpenditure\u003e expenditures;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public EditBudgetDescriptor() {}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setName(Name name) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setThreshold(Optional\u003cThreshold\u003e threshold) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            this.threshold \u003d threshold;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Optional\u003cOptional\u003cThreshold\u003e\u003e getThreshold() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return Optional.ofNullable(threshold);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setCreatedOn(Date createdOn) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            this.createdOn \u003d createdOn;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Optional\u003cDate\u003e getCreatedOn() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return Optional.ofNullable(createdOn);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Boolean isAnyFieldNull() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return CollectionUtil.isAnyNonNull(name, threshold, expenditures);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 10,
      "yu-ming-chen": 114,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/FindBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class FindBudgetCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" NAME\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Finds budgets by name.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: NAME\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" Temasek\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Updated list of budgets to show entries that contain \\\u0027%1$s\\\u0027.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Creates a FindExpenditureCommand to to find expenditures matching"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * the specified {@code name}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param name the name of the expenditure to be searched."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public FindBudgetCommand(Name name) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Executes the find expenditure command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return the result of the command with the success message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String searchTerm \u003d name.value;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Predicate\u003cRenderable\u003e predicate \u003d renderable -\u003e renderable.contains(searchTerm);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.updateFilteredRenderableList(predicate);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, name));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                || (other instanceof FindBudgetCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 name.equals(((FindBudgetCommand) other).name));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7,
      "sogggy": 44,
      "wenhaogoh": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/HelpBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Format full help instructions for every command for display."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class HelpBudgetCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Shows a list of commands that is currently available.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String HELP_MESSAGE \u003d ClearBudgetsCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + CreateBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + DeleteBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + EditBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + FindBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + HelpBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + ListBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + OpenBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + SortBudgetCommand.MESSAGE_USAGE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Executes the help command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(HELP_MESSAGE, false, false);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 14,
      "yu-ming-chen": 23,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/ListBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RENDERABLES;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class ListBudgetCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Lists all budgets.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Updated list of budgets to show all entries.\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // sets predicate to always return true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        model.updateFilteredRenderableList(PREDICATE_SHOW_ALL_RENDERABLES);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7,
      "sogggy": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/OpenBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.MainPageCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Opens a budget to view and modify expenditures contained within the budget."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class OpenBudgetCommand extends MainPageCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"open\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" INDEX\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Opens a budget.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: \" + \"INDEX\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Opened budget.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final BudgetIndex toOpen;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Creates an OpenBudgetCommand to open the specified {@code budget}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toOpen the Index of the specific budget"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public OpenBudgetCommand(BudgetIndex toOpen) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.toOpen \u003d toOpen;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the open budget command, sets the current page to the budget page."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!model.isWithinRange(toOpen)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.openBudget(toOpen);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 8,
      "sogggy": 19,
      "davidliew9": 13,
      "wenhaogoh": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/SortBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.MainPageCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Creates a new SortBudgetCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortBudgetCommand extends MainPageCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"sort\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Sorts budget by name or time.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Usage: \" + SYNTAX + \" SORT TYPE\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Parameters: TIME or NAME\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" time\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Sorted budgets.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final SortType sortType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Creates a SortBudegetCommand to to sort budgets by {@code sortType}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param sortType the type of sort."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public SortBudgetCommand(SortType sortType) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.sortType \u003d sortType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Executes the create budget command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        switch (sortType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case TIME: {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            model.sortBudgetsByCreatedDate();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case NAME: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            model.sortBudgetsByName();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 2,
      "yu-ming-chen": 52,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains Command Line Interface (CLI) syntax definitions common to multiple commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CliSyntax {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Prefix definitions */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"p/\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "-": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/PageParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Represents an interface through which other Parsers will implement."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public interface PageParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Command parseCommand(String commandText) throws ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 8,
      "davidliew9": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ParserUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.SortBudgetCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.mainpageparser.SortBudgetCommandParser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndexManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods used for parsing strings in the various *Parser classes."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserUtil {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d \"Index has to be an integer greater than 0!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * trimmed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index parseIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return Index.fromOneBased(Integer.parseInt(trimmedIndex));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses {@code oneBasedIndex} into a {@code ExpenditureIndex} and returns it."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static ExpenditureIndex parseExpenditureIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new ExpenditureIndexManager(Integer.parseInt(trimmedIndex) - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Parses {@code args} into a {@code SortTypr} and returns it."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @throws ParseException if the specified Sort Type is invalid (unsupported sort types)."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static SortType parseSortType(String args) throws ParseException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String trimmedStringType \u003d args.trim().toLowerCase();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        switch (trimmedStringType) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case \"name\": {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return SortType.NAME;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case \"time\": {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return SortType.TIME;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(SortBudgetCommandParser.MESSAGE_INVALID_SORT_TYPE + \"\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    + SortBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Parses {@code oneBasedIndex} into a {@code BudgetIndex} and returns it."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static BudgetIndex parseBudgetIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new BudgetIndexManager(Integer.parseInt(trimmedIndex) - 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses a {@code String expenditureName} into a {@code Name}."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code name} is invalid."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static seedu.address.model.expenditure.Name parseExpenditureName(String expenditureName)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(expenditureName);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String trimmedName \u003d expenditureName.trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!seedu.address.model.expenditure.Name.isValidName(trimmedName)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(seedu.address.model.expenditure.Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new seedu.address.model.expenditure.Name(trimmedName);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses a {@code String price} into a {@code Price}."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws ParseException if the given {@code Price} is invalid."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static Price parsePrice(String price) throws ParseException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(price);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String trimmedPrice \u003d price.trim();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!Price.isValid(trimmedPrice)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(Price.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new Price(trimmedPrice);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses a {@code String budgetName} into a {@code Name}."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws ParseException if the given {@code budgetName} is invalid."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static seedu.address.model.budget.Name parseBudgetName(String budgetName) throws ParseException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireNonNull(budgetName);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String trimmedName \u003d budgetName.trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!seedu.address.model.budget.Name.isValid(trimmedName)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(seedu.address.model.budget.Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new seedu.address.model.budget.Name(trimmedName);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Parses a {@code String budgetThreshold} into a {@code Threshold}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws ParseException if the given {@code budgetThreshold} is invalid."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Optional\u003cThreshold\u003e parseBudgetThreshold(String budgetThreshold) throws ParseException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(budgetThreshold);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String trimmedThreshold \u003d budgetThreshold.trim();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!Threshold.isValid(trimmedThreshold)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new ParseException(Threshold.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Threshold(trimmedThreshold).toOptional();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String tag} into a {@code Tag}."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code tag} is invalid."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Tag parseTag(String tag) throws ParseException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tag);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedTag \u003d tag.trim();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!Tag.isValid(trimmedTag)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Tag(trimmedTag);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tags);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String tagName : tags) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            tagSet.add(parseTag(tagName));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        return tagSet;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 13,
      "sogggy": 20,
      "yu-ming-chen": 27,
      "davidliew9": 19,
      "wenhaogoh": 14,
      "-": 85
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/AddExpenditureCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.budget.AddExpenditureCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Represents a Parser that is able to parse user inputs regarding adding expenditures."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class AddExpenditureCommandParser implements Parser\u003cAddExpenditureCommand\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the AddBudgetCommand"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * and returns an AddBudgetCommand object for execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public AddExpenditureCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE, PREFIX_TAG);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PRICE)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                                AddExpenditureCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Name name \u003d ParserUtil.parseExpenditureName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Price price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Date date \u003d new Date(LocalDate.now().toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Set\u003cTag\u003e tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Expenditure expenditure \u003d new Expenditure(name, price, date, tags);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new AddExpenditureCommand(expenditure);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "sogggy": 53,
      "davidliew9": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/BudgetPageParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.budget.AddExpenditureCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.budget.CloseBudgetCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.DeleteExpenditureCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.EditExpenditureCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.budget.FindExpenditureCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.budget.HelpExpenditureCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.budget.ListExpenditureCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.budget.SortExpenditureCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.PageParser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Represents a Parser that is able to parse inputs occuring in the Budget Page."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class BudgetPageParser implements PageParser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /** Used for initial separation of command word and args. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Parses a user input occurring in the Budget Page into a command for execution."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    HelpExpenditureCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case CloseBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            return new CloseBudgetCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        case DeleteExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return new DeleteExpenditureCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case AddExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return new AddExpenditureCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        case FindExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            return new FindExpenditureCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        case EditExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return new EditExpenditureCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        case ListExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            return new ListExpenditureCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case SortExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new SortExpenditureCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case HelpExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new HelpExpenditureCommand();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case ExitCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_UNKNOWN_COMMAND, HelpExpenditureCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 9,
      "sogggy": 44,
      "yu-ming-chen": 15,
      "davidliew9": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/DeleteExpenditureCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.DeleteExpenditureCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Represents a Parser that is able to parse user inputs regarding deleting expenditures."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class DeleteExpenditureCommandParser implements Parser\u003cDeleteExpenditureCommand\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the DeleteBudgetCommand"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * and returns a DeleteBudgetCommand object for execution."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public DeleteExpenditureCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ExpenditureIndex expenditureIndex \u003d ParserUtil.parseExpenditureIndex(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new DeleteExpenditureCommand(expenditureIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/EditExpenditureCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.EditExpenditureCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.EditExpenditureCommand.EditExpenditureDescriptor;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class EditExpenditureCommandParser implements Parser\u003cEditExpenditureCommand\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_PRICE)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                    EditExpenditureCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ExpenditureIndex index;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            index \u003d ParserUtil.parseExpenditureIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new ParseException("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditExpenditureCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        EditExpenditureDescriptor editExpenditureDescriptor \u003d new EditExpenditureDescriptor();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            editExpenditureDescriptor.setName("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                    ParserUtil.parseExpenditureName(argMultimap.getValue(PREFIX_NAME).get()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            editExpenditureDescriptor.setPrice("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                    ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new EditExpenditureCommand(index, editExpenditureDescriptor);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 62
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/FindExpenditureCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.budget.FindExpenditureCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Represents a Parser that is able to parse user inputs regarding finding expenditures."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class FindExpenditureCommandParser implements Parser\u003cFindExpenditureCommand\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the FindExpenditureCommand"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * and returns a FindExpenditureCommand object for execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public FindExpenditureCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Name name \u003d ParserUtil.parseExpenditureName(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new FindExpenditureCommand(name);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/SortExpenditureCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.budget.SortExpenditureCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.SortBudgetCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortExpenditureCommandParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_INVALID_SORT_TYPE \u003d \"Sort type is not supported.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the OpenBudgetCommand"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * and returns an OpenBudgetCommand object for execution."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public SortExpenditureCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (args.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(SortBudgetCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        SortType sortType \u003d ParserUtil.parseSortType(args);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new SortExpenditureCommand(sortType);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/exceptions/ParseException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a parse error encountered by a parser."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParseException extends IllegalValueException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Constructs a new {@code ParseException} with the specified detail {@code message}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParseException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Constructs a new {@code ParseException} with the specified detail {@code message} and {@code cause}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param cause"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParseException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 9,
      "-": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/CreateBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.CreateBudgetCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class CreateBudgetCommandParser implements Parser\u003cCreateBudgetCommand\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the OpenBudgetCommand"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * and returns an OpenBudgetCommand object for execution."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CreateBudgetCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Name name \u003d ParserUtil.parseBudgetName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Date date \u003d new Date(LocalDate.now().toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Optional\u003cThreshold\u003e threshold \u003d ParserUtil.parseBudgetThreshold(argMultimap.getValue(PREFIX_PRICE)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .orElse(\"\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget budget \u003d new Budget(name, date, threshold, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new CreateBudgetCommand(budget);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 2,
      "yu-ming-chen": 47,
      "wenhaogoh": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/DeleteBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.main.DeleteBudgetCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class DeleteBudgetCommandParser implements Parser\u003cDeleteBudgetCommand\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public DeleteBudgetCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d ParserUtil.parseBudgetIndex(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new DeleteBudgetCommand(budgetIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/EditBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.EditBudgetCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.EditBudgetCommand.EditBudgetDescriptor;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class EditBudgetCommandParser implements Parser\u003cEditBudgetCommand\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public EditBudgetCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireNonNull(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_PRICE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_PRICE)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    EditBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        BudgetIndex budgetIndex;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            budgetIndex \u003d ParserUtil.parseBudgetIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        EditBudgetDescriptor editBudgetDescriptor \u003d new EditBudgetDescriptor();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            editBudgetDescriptor.setName(ParserUtil.parseBudgetName((argMultimap.getValue(PREFIX_NAME).get())));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            editBudgetDescriptor.setThreshold(ParserUtil"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    .parseBudgetThreshold(argMultimap.getValue(PREFIX_PRICE).get()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new EditBudgetCommand(budgetIndex, editBudgetDescriptor);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 66
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/FindBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.main.FindBudgetCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Represents a Parser that is able to parse user inputs regarding finding expenditures."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class FindBudgetCommandParser implements Parser\u003cFindBudgetCommand\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the FindExpenditureCommand"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * and returns a FindExpenditureCommand object for execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public FindBudgetCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (userInput.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new ParseException(FindBudgetCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Name name \u003d ParserUtil.parseBudgetName(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new FindBudgetCommand(name);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 24,
      "wenhaogoh": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/MainPageParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.ClearBudgetsCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.CreateBudgetCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.DeleteBudgetCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.EditBudgetCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.FindBudgetCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.HelpBudgetCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.ListBudgetCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.OpenBudgetCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.SortBudgetCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.PageParser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class MainPageParser implements PageParser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case OpenBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return new OpenBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case ClearBudgetsCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new ClearBudgetsCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        case DeleteBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return new DeleteBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case CreateBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new CreateBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case EditBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new EditBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case FindBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return new FindBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case ListBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return new ListBudgetCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case SortBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new SortBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case HelpBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new HelpBudgetCommand();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case ExitCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_UNKNOWN_COMMAND, HelpBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 49,
      "yu-ming-chen": 27,
      "davidliew9": 3,
      "wenhaogoh": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/OpenBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.main.OpenBudgetCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class OpenBudgetCommandParser implements Parser\u003cOpenBudgetCommand\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the OpenBudgetCommand"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * and returns an OpenBudgetCommand object for execution."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public OpenBudgetCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        BudgetIndex budgetIndex \u003d ParserUtil.parseBudgetIndex(args);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new OpenBudgetCommand(budgetIndex);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 4,
      "sogggy": 29
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/SortBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.SortBudgetCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortBudgetCommandParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_INVALID_SORT_TYPE \u003d \"Sort type is not supported.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the OpenBudgetCommand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * and returns an OpenBudgetCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public SortBudgetCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (args.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(SortBudgetCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        SortType sortType \u003d ParserUtil.parseSortType(args);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new SortBudgetCommand(sortType);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Model.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /** {@code Predicate} that always evaluate to true */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Predicate\u003cRenderable\u003e PREDICATE_SHOW_ALL_RENDERABLES \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Path getNusaveFilePath();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void setNusavePath(Path nusaveFilePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces address book data with the data in {@code addressBook}."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void setNusave(ReadOnlyNusave nusave);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    ReadOnlyNusave getNusave();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void openBudget(BudgetIndex budgetIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void closeBudget();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void addBudget(Budget budget);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void editBudget(Budget oldBudget, Budget editedBudget);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void deleteBudget(BudgetIndex budget) throws CommandException;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void deleteAllBudgets();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void sortBudgetsByName();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void sortBudgetsByCreatedDate() throws CommandException;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void deleteExpenditure(ExpenditureIndex expenditure) throws CommandException;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void addExpenditure(Expenditure expenditure) throws CommandException;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void sortExpendituresByName();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String calculateExpenditureValue(BudgetIndex budgetIndex);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void sortExpenditureByCreatedDate();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Page getPage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getPageName(BudgetIndex index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getPageTitle();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getTotalExpenditureValue();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Optional\u003cThreshold\u003e getThreshold();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean isBudgetPage();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    BooleanProperty getBudgetPageProp();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    StringProperty getTotalExpenditureStringProp();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setPage(Page page);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setTotalExpenditure(String expenditure);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setBudgetIndex(BudgetIndex index);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setPageName(String page);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    boolean isMain();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    boolean isBudget();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean isWithinRange(BudgetIndex budgetIndex);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean isWithinRange(ExpenditureIndex expenditureIndex);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /** Returns an unmodifiable view of the filtered renderable list */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    ObservableList\u003cRenderable\u003e getFilteredRenderableList();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void updateFilteredRenderableList(Predicate\u003cRenderable\u003e predicate);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void repopulateObservableList() throws CommandException;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 10,
      "sogggy": 35,
      "yu-ming-chen": 6,
      "davidliew9": 5,
      "wenhaogoh": 20,
      "-": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.PageTitle;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.StateManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.EmptyBudgetIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the in-memory model of the address book data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Nusave nusave;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private final FilteredList\u003cRenderable\u003e filteredRenderables;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final StateManager stateManager;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes a ModelManager with the given addressBook and userPrefs."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ModelManager(ReadOnlyNusave nusave, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(nusave, userPrefs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        logger.fine(\"Initializing with NUSave: \" + nusave + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.nusave \u003d new Nusave(nusave);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.filteredRenderables \u003d new FilteredList\u003c\u003e(this.nusave.getInternalList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.stateManager \u003d new StateManager(new EmptyBudgetIndex(), Page.MAIN, PageTitle.MAIN_PAGE_TITLE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        sortBudgetsByCreatedDate();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Initializes a new ModelManager."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this(new Nusave(), new UserPrefs());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setNusavePath(Path nusaveFilePath) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Nusave \u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setNusave(ReadOnlyNusave nusave) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ReadOnlyNusave getNusave() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusave;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Budgets \u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void openBudget(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(budgetIndex);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        BudgetIndex actualBudgetIndex \u003d getActualBudgetIndex(budgetIndex);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setBudgetIndex(actualBudgetIndex);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setPageName(getPageName(actualBudgetIndex));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setPage(Page.BUDGET);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String newExpenditureValue \u003d calculateExpenditureValue(actualBudgetIndex);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setTotalExpenditure(newExpenditureValue);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        updateFilteredRenderableList(PREDICATE_SHOW_ALL_RENDERABLES);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void closeBudget() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setBudgetIndex(new EmptyBudgetIndex());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setPageName(PageTitle.MAIN_PAGE_TITLE);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setPage(Page.MAIN);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setTotalExpenditure(StateManager.defaultValueTotalExpenditure());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        updateFilteredRenderableList(PREDICATE_SHOW_ALL_RENDERABLES);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private BudgetIndex getActualBudgetIndex(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndex.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int indexInFilteredList \u003d budgetIndex.getBudgetIndex().get();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert indexInFilteredList \u003e\u003d 0 \u0026\u0026 indexInFilteredList \u003c filteredRenderables.size();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget budget \u003d (Budget) filteredRenderables.get(indexInFilteredList);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int indexInBudgetList \u003d nusave.getIndexOfBudget(budget);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new BudgetIndexManager(indexInBudgetList);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void addBudget(Budget budget) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(budget);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nusave.addBudget(budget);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteBudget(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(budgetIndex);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndex.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d budgetIndex.getBudgetIndex().get();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert index \u003c filteredRenderables.size();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Budget budget \u003d (Budget) filteredRenderables.get(index);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        nusave.deleteBudget(budget);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        updateFilteredRenderableList(PREDICATE_SHOW_ALL_RENDERABLES);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Edit a budget from NUSave."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param oldBudget the budget to be edited"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param editedBudget edited budget to replace the old budget"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void editBudget(Budget oldBudget, Budget editedBudget) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireAllNonNull(oldBudget, editedBudget);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        nusave.editBudget(oldBudget, editedBudget);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        updateFilteredRenderableList(PREDICATE_SHOW_ALL_RENDERABLES);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteAllBudgets() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nusave.deleteAllBudgets();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void sortBudgetsByName() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        nusave.sortBudgetListByName();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void sortBudgetsByCreatedDate() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        nusave.sortBudgetListByCreatedDate();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Expenditures \u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteExpenditure(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(expenditureIndex);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert expenditureIndex.getExpenditureIndex().isPresent();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d expenditureIndex.getExpenditureIndex().get();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert index \u003c filteredRenderables.size();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Expenditure expenditure \u003d (Expenditure) filteredRenderables.get(index);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Optional\u003cInteger\u003e budgetIndex \u003d stateManager.getBudgetIndex();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nusave.deleteExpenditure(expenditure, budgetIndex);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setTotalExpenditure(nusave.getTotalExpenditureValue(budgetIndex));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        updateFilteredRenderableList(PREDICATE_SHOW_ALL_RENDERABLES);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Adds an expenditure to the specified budget and updates the list"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param expenditure"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void addExpenditure(Expenditure expenditure) throws CommandException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(expenditure);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cInteger\u003e budgetIndex \u003d this.stateManager.getBudgetIndex();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        nusave.addExpenditure(expenditure, this.stateManager.getBudgetIndex());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setTotalExpenditure(nusave.getTotalExpenditureValue(budgetIndex));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        updateFilteredRenderableList(PREDICATE_SHOW_ALL_RENDERABLES);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireAllNonNull(oldExpenditure, editedExpenditure);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cInteger\u003e budgetIndex \u003d this.stateManager.getBudgetIndex();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        nusave.editExpenditure(oldExpenditure, editedExpenditure, budgetIndex);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setTotalExpenditure(nusave.getTotalExpenditureValue(budgetIndex));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        updateFilteredRenderableList(PREDICATE_SHOW_ALL_RENDERABLES);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void sortExpendituresByName() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nusave.sortExpendituresByName(stateManager);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void sortExpenditureByCreatedDate() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        nusave.sortExpendituresByCreateDate(stateManager);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String calculateExpenditureValue(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cInteger\u003e indexOpt \u003d budgetIndex.getBudgetIndex();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return nusave.getTotalExpenditureValue(indexOpt);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ObservableList \u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void repopulateObservableList() {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        nusave.repopulateObservableList(stateManager);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StateManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean isMain() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.stateManager.isMain();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean isBudget() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.stateManager.isBudget();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isWithinRange(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndex.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d budgetIndex.getBudgetIndex().get();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return index \u003c filteredRenderables.size();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isWithinRange(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert expenditureIndex.getExpenditureIndex().isPresent();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d expenditureIndex.getExpenditureIndex().get();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return index \u003c filteredRenderables.size();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Page getPage() {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.stateManager.getPage();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BooleanProperty getBudgetPageProp() {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this.stateManager.getIsBudgetPageProp();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StringProperty getTotalExpenditureStringProp() {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return stateManager.getMainPageInfoBoxSecondRowProp();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getPageName(BudgetIndex index) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.nusave.getPageName(index);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getPageTitle() {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.stateManager.getPageTitle();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTotalExpenditureValue() {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cInteger\u003e budgetIndex \u003d stateManager.getBudgetIndex();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert budgetIndex.isPresent();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return nusave.getTotalExpenditureValue(budgetIndex);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cThreshold\u003e getThreshold() {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cInteger\u003e budgetIndex \u003d stateManager.getBudgetIndex();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return nusave.getThreshold(budgetIndex);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isBudgetPage() {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this.stateManager.isBudgetPage();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setBudgetIndex(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.stateManager.setBudgetIndex(budgetIndex);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setPage(Page page) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.stateManager.setPage(page);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setTotalExpenditure(String expenditure) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.stateManager.setTotalExpenditure(expenditure);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setPageName(String page) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.stateManager.setPageName(page);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Renderable List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ObservableList\u003cRenderable\u003e getFilteredRenderableList() {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return filteredRenderables;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void updateFilteredRenderableList(Predicate\u003cRenderable\u003e predicate) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        filteredRenderables.setPredicate(predicate);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 20,
      "sogggy": 91,
      "yu-ming-chen": 30,
      "davidliew9": 11,
      "wenhaogoh": 96,
      "-": 101
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Nusave.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.BudgetList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortExpenditureByCreateDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortExpendituresByName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.State;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Nusave implements ReadOnlyNusave {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final BudgetList budgetList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private final ObservableList\u003cRenderable\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private final ObservableList\u003cRenderable\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetList \u003d new BudgetList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Nusave() { }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toBeCopied"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Nusave(ReadOnlyNusave toBeCopied) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getPageName(BudgetIndex index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.budgetList.getBudgetName(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void resetData(ReadOnlyNusave newData) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setBudgets(newData.getBudgetList());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Budget \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Adds a budget to the NUSave."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void addBudget(Budget budget) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetList.add(budget);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.internalList.add(0, budget);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Deletes a budget from NUSave."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteBudget(Budget toRemove) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.budgetList.remove(toRemove);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.internalList.remove(toRemove);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Edit a budget from NUSave."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param oldBudget the budget to be edited"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param editedBudget edited budget to replace the old budget"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void editBudget(Budget oldBudget, Budget editedBudget) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        int index \u003d budgetList.getIndexOfBudget(oldBudget);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.budgetList.editBudget(oldBudget, editedBudget);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.internalList.set(index, editedBudget);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void setBudgets(List\u003cBudget\u003e budgets) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.budgetList.setBudgets(budgets);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.internalList.setAll(budgets);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cThreshold\u003e getThreshold(Optional\u003cInteger\u003e budgetIndexOpt) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert budgetIndexOpt.isPresent();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int budgetIndex \u003d budgetIndexOpt.get();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.budgetList.getBudgetThreshold(budgetIndex);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteAllBudgets() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setBudgets(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public int getIndexOfBudget(Budget budget) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return budgetList.getIndexOfBudget(budget);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Expenditure \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Adds a expenditure to the NUSave budget according to its index."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void addExpenditure(Expenditure expenditure, Optional\u003cInteger\u003e budgetIndexOpt) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndexOpt.isPresent();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int budgetIndex \u003d budgetIndexOpt.get();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.internalList.add(0, expenditure);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.budgetList.addExpenditure(expenditure, budgetIndex);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Edits an expenditure to the NUSave budget according to its index."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param oldExpenditure"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param editedExpenditure"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param budgetIndexOpt"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                                Optional\u003cInteger\u003e budgetIndexOpt) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndexOpt.isPresent();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int budgetIndex \u003d budgetIndexOpt.get();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        int expenditureIndex \u003d this.internalList.indexOf(oldExpenditure);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.internalList.set(expenditureIndex, editedExpenditure);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.budgetList.editExpenditure(oldExpenditure, editedExpenditure, budgetIndex);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Deletes an expenditure from the NUSave budget according to its index."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteExpenditure(Expenditure expenditure, Optional\u003cInteger\u003e budgetIndexOpt) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndexOpt.isPresent();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int budgetIndex \u003d budgetIndexOpt.get();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        List\u003cExpenditure\u003e expenditureList \u003d budgetList.getExpenditure(budgetIndex);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditureList.remove(expenditure);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.internalList.remove(expenditure);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTotalExpenditureValue(Optional\u003cInteger\u003e budgetIndexOpt) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert budgetIndexOpt.isPresent();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int budgetIndex \u003d budgetIndexOpt.get();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.budgetList.getTotalExpenditureValue(budgetIndex);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ObservableList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Sets the observable list displayed in UI based on the"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * current state."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param state State containing the current page and"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     *              budget index."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void repopulateObservableList(State state) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (state.isBudget()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            // repopulate observable list with Expenditures"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert state.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            int index \u003d state.getBudgetIndex().get();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert index \u003c budgetList.getSize();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            this.internalList.setAll(budgetList.getExpenditure(index));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } else if (state.isMain()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            // repopulate observable list with Budgets"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            this.internalList.setAll(budgetList.getBudgets());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ObservableList\u003cBudget\u003e getBudgetList() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return budgetList.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ObservableList\u003cRenderable\u003e getInternalList() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void sortBudgetListByName() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        budgetList.sortBudgetListByName();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void sortBudgetListByCreatedDate() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.budgetList.sortBudgetListByCreateDate();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * sort current ExpenditureList by Name"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param state current state"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void sortExpendituresByName(State state) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert state.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d state.getBudgetIndex().get();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        budgetList.getExpenditure(index).sort(new SortExpendituresByName());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * sort current ExpenditureList by CreateDate"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param state current state"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void sortExpendituresByCreateDate(State state) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assert state.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        int index \u003d state.getBudgetIndex().get();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        budgetList.getExpenditure(index).sort(new SortExpenditureByCreateDate());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 22,
      "sogggy": 40,
      "yu-ming-chen": 40,
      "davidliew9": 14,
      "wenhaogoh": 88
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ReadOnlyNusave.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public interface ReadOnlyNusave {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    ObservableList\u003cBudget\u003e getBudgetList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ReadOnlyUserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Unmodifiable view of user prefs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public interface ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Path getNusaveFilePath();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 1,
      "-": 15
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Renderable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public interface Renderable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    boolean contains(String str);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/model/UserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents User\u0027s preferences."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefs implements ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private GuiSettings guiSettings \u003d new GuiSettings();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Path nusaveFilePath \u003d Paths.get(\"data\", \"nusave.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with default values."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public UserPrefs() {}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public UserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        resetData(userPrefs);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyUserPrefs newUserPrefs) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(newUserPrefs);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        setGuiSettings(newUserPrefs.getGuiSettings());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setNusaveFilePath(newUserPrefs.getNusaveFilePath());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        this.guiSettings \u003d guiSettings;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setNusaveFilePath(Path nusaveFilePath) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(nusaveFilePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.nusaveFilePath \u003d nusaveFilePath;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusaveFilePath;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof UserPrefs)) { //this handles null as well."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs o \u003d (UserPrefs) other;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings.equals(o.guiSettings)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 nusaveFilePath.equals(o.nusaveFilePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return Objects.hash(guiSettings, nusaveFilePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Gui Settings : \" + guiSettings);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        sb.append(\"\\nLocal data file location : \" + nusaveFilePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 10,
      "-": 76
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/Budget.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Budget implements Renderable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final Date createdOn;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Optional\u003cThreshold\u003e threshold;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final List\u003cExpenditure\u003e expenditures;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param expenditures"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Budget(Name name, Date date, List\u003cExpenditure\u003e expenditures) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireAllNonNull(name, expenditures);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.createdOn \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.expenditures \u003d expenditures;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.threshold \u003d Optional.empty();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param threshold"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param expenditures"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Budget(Name name, Date date, Optional\u003cThreshold\u003e threshold, List\u003cExpenditure\u003e expenditures) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(name, expenditures, threshold);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.createdOn \u003d date;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.threshold \u003d threshold;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.expenditures \u003d expenditures;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Date getCreatedOn() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return createdOn;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cThreshold\u003e getThreshold() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return threshold;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public List\u003cExpenditure\u003e getExpenditures() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return expenditures;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public int getExpenditureSize() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return expenditures.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTotalExpenditure() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        float resultFloat \u003d 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        for (Expenditure e : expenditures) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Price price \u003d e.getPrice();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String value \u003d price.value;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            resultFloat +\u003d Float.parseFloat(value);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return String.format(\"%.2f\", Float.valueOf(resultFloat));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void addExpenditure(Expenditure expenditure) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        expenditures.add(0, expenditure);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Edits an expenditure within the expenditures by replacing the {code: oldExpenditure}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * with a {code: newExpenditure}."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param oldExpenditure"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param editedExpenditure"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        int index \u003d expenditures.indexOf(oldExpenditure);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        expenditures.set(index, editedExpenditure);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return name.toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!(other instanceof Budget)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget otherBudget \u003d (Budget) other;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return otherBudget.getName().equals(getName())"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 otherBudget.getThreshold().equals(getThreshold())"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 otherBudget.getExpenditures().equals(getExpenditures());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if {@code Name} contains the given {@code string}."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean contains(String string) { //Todo: Change method name to be more descriptive."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String nameLowerCase \u003d name.value.toLowerCase(); //Todo: Tell, don\u0027t ask."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nameLowerCase.contains(string.toLowerCase());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7,
      "sogggy": 33,
      "yu-ming-chen": 10,
      "davidliew9": 12,
      "wenhaogoh": 56
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/BudgetList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortBudgetByCreateDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortBudgetByName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * A list of persons that enforces uniqueness between its elements and does not allow nulls."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * as to ensure that the person with exactly the same fields will be removed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": " *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class BudgetList implements Iterable\u003cBudget\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private final List\u003cBudget\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Adds a budget to the list of budgets."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void add(Budget toAdd) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        budgets.add(0, toAdd);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Adds an expenditure to a the budget at index index in budgets."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param toAdd the Expenditure object to be added."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param index the index of the budget which the expenditure will be added into."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void addExpenditure(Expenditure toAdd, int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Budget budget \u003d budgets.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        budget.addExpenditure(toAdd);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Edits an expenditure to a budget at {code: index} in budgets."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param oldExpenditure"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param newExpenditure"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void editExpenditure(Expenditure oldExpenditure, Expenditure newExpenditure, int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Budget budget \u003d budgets.get(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        budget.editExpenditure(oldExpenditure, newExpenditure);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Removes the equivalent budget from the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * The budget must exist in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void remove(Budget toRemove) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        budgets.remove(toRemove);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public List\u003cExpenditure\u003e getExpenditure(int index) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Budget budget \u003d budgets.get(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return budget.getExpenditures();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public List\u003cBudget\u003e getBudgets() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return budgets;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getBudgetName(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(budgetIndex);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndex.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d budgetIndex.getBudgetIndex().get();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this.budgets.get(index).getName().value;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cThreshold\u003e getBudgetThreshold(int index) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cThreshold\u003e threshold \u003d this.budgets.get(index).getThreshold();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return threshold;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return budgets.size();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTotalExpenditureValue(int index) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Budget budget \u003d budgets.get(index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return budget.getTotalExpenditure();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Replaces the contents of this list with {@code budgets}."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setBudgets(List\u003cBudget\u003e budgets) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireAllNonNull(budgets);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.budgets.clear();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.budgets.addAll(budgets);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int getIndexOfBudget(Budget budget) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return this.budgets.indexOf(budget);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Edit a budget from NUSave."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param oldBudget the budget to be edited"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param editedBudget edited budget to replace the old budget"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void editBudget(Budget oldBudget, Budget editedBudget) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        int index \u003d this.budgets.indexOf(oldBudget);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.budgets.set(index, editedBudget);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public ObservableList\u003cBudget\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        ObservableList\u003cBudget\u003e internalBudgetList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        internalBudgetList.setAll(budgets);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        ObservableList\u003cBudget\u003e internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(internalBudgetList);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void sortBudgetListByName() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        budgets.sort(new SortBudgetByName());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void sortBudgetListByCreateDate() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.budgets.sort(new SortBudgetByCreateDate());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Iterator\u003cBudget\u003e iterator() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return budgets.iterator();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                || (other instanceof BudgetList // instanceof handles nulls"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                \u0026\u0026 budgets.equals(((BudgetList) other).budgets));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return budgets.hashCode();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 36,
      "sogggy": 79,
      "yu-ming-chen": 25,
      "davidliew9": 14,
      "wenhaogoh": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/Date.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class Date implements Comparable\u003cDate\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be able to be parsed by LocalDate.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Constructs a {@code Date}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param value A valid date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Date(String value) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireNonNull(value);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Returns true if a given string is a valid date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            LocalDate.parse(test);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                || (other instanceof Date // instanceof handles nulls"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 value.equals(((Date) other).value)); // state check"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compareTo(Date date) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return LocalDate.parse(value).compareTo(LocalDate.parse(date.value));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 60
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/Name.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Name {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Names should only contain alphanumeric characters and spaces, and it should not be blank.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * The first character of the name must not be a whitespace,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructs a {@code Name}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param value A valid title."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Name(String value) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(value);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if a given string is a valid name."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                || (other instanceof Name // instanceof handles nulls"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 value.equals(((Name) other).value)); // state check"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 5,
      "wenhaogoh": 48
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/Threshold.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Threshold {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Thresholds can be empty or contain only numbers, and it can have at most 2 decimal places.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"^$|[0-9]+(\\\\.[0-9]?[0-9])?$\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String NO_THRESHOLD_MESSAGE \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code Threshold}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Threshold(String threshold) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(threshold);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        checkArgument(isValid(threshold), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        value \u003d threshold;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if a given string is a valid threshold."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts {@code Threshold} into an {@code Optional\u003cThreshold\u003e}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cThreshold\u003e toOptional() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (value.isBlank()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return Optional.of(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                || (other instanceof Threshold // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 value.equals(((Threshold) other).value)); // state check"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "wenhaogoh": 57
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/exceptions/BudgetNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.model.budget.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Signals that the operation is unable to find the specified person."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class BudgetNotFoundException extends RuntimeException {}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/model/expenditure/Date.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.expenditure;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class Date implements Comparable\u003cDate\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be able to be parsed by LocalDate.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code Date}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param value A valid date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Date(String value) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(value);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if a given string is a valid date."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            LocalDate.parse(test);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public java.util.Date getFormattedCreatedOn() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return java.sql.Date.valueOf(LocalDate.parse(value));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                || (other instanceof Date // instanceof handles nulls"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 value.equals(((Date) other).value)); // state check"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compareTo(Date date) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return LocalDate.parse(value).compareTo(LocalDate.parse(date.value));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 6,
      "yu-ming-chen": 6,
      "wenhaogoh": 50
    }
  },
  {
    "path": "src/main/java/seedu/address/model/expenditure/Expenditure.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.model.expenditure;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Expenditure implements Renderable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Price price;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final Date createdOn;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param price"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param createdOn"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param tags"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Expenditure(Name name, Price price, Date createdOn, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireAllNonNull(name, price, createdOn, tags);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.price \u003d price;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.createdOn \u003d createdOn;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.tags.addAll(tags);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Price getPrice() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return price;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Date getCreatedOn() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return createdOn;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public java.util.Date getFormattedCreatedOn() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return createdOn.getFormattedCreatedOn();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!(other instanceof Expenditure)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Expenditure otherExpenditure \u003d (Expenditure) other;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return otherExpenditure.getName().equals(getName())"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 otherExpenditure.getPrice().equals(getPrice())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 otherExpenditure.getCreatedOn().equals(getCreatedOn())"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 otherExpenditure.getTags().equals(getTags());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return name.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public boolean contains(String str) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String nameLowerCase \u003d name.value.toLowerCase();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return nameLowerCase.contains(str.toLowerCase());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 8,
      "sogggy": 52,
      "wenhaogoh": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/model/expenditure/Name.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.expenditure;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Name {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Names should only contain alphanumeric characters and spaces, and it should not be blank.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * The first character of the name must not be a whitespace,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code Name}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param value A valid name."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Name(String value) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(value);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        checkArgument(isValidName(value), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a given string is a valid name."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidName(String test) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof Name // instanceof handles nulls"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 value.equals(((Name) other).value)); // state check"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 2,
      "wenhaogoh": 10,
      "-": 41
    }
  },
  {
    "path": "src/main/java/seedu/address/model/expenditure/Price.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.expenditure;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Price {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Prices should only contain numbers, and it can have at most 2 decimal places.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[0-9]+(\\\\.[0-9]?[0-9])?$\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code Price}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param price A valid price."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Price(String price) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(price);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        checkArgument(isValid(price), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        value \u003d price;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if a given string is a valid price."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                || (other instanceof Price // instanceof handles nulls"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 value.equals(((Price) other).value)); // state check"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "sogggy": 2,
      "wenhaogoh": 43
    }
  },
  {
    "path": "src/main/java/seedu/address/model/sort/SortBudgetByCreateDate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortBudgetByCreateDate implements Comparator\u003cBudget\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compare(Budget a, Budget b) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return b.getCreatedOn().compareTo(a.getCreatedOn());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/model/sort/SortBudgetByName.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortBudgetByName implements Comparator\u003cBudget\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compare(Budget a, Budget b) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return a.getName().value.toLowerCase().compareTo(b.getName().value.toLowerCase());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/model/sort/SortExpenditureByCreateDate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortExpenditureByCreateDate implements Comparator\u003cExpenditure\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compare(Expenditure a, Expenditure b) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return b.getCreatedOn().compareTo(a.getCreatedOn());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/model/sort/SortExpendituresByName.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortExpendituresByName implements Comparator\u003cExpenditure\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compare(Expenditure a, Expenditure b) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return a.getName().value.toLowerCase().compareTo(b.getName().value.toLowerCase());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/model/sort/SortType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public enum SortType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    TIME,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    NAME"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tag/Tag.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.tag;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Tag in the address book."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Guarantees: immutable; name is valid as declared in {@link #isValid(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String tagName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code Tag}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tagName A valid tag name."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public Tag(String tagName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tagName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        checkArgument(isValid(tagName), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a given string is a valid tag name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof Tag // instanceof handles nulls"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return tagName.hashCode();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Format state as text for viewing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027[\u0027 + tagName + \u0027]\u0027;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 3,
      "-": 51
    }
  },
  {
    "path": "src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods for populating {@code AddressBook} with sample data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class SampleDataUtil {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Budget[] getSampleBudgets() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Budget[] {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"Temasek Hall Basketball\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-10\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"500\").toOptional(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures()))),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"Temasek Hall Marketing\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-11\"),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"1000\").toOptional(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures()))),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"October Budget\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-10\"),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"300\").toOptional(),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures()))),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"Monthly Bills\"),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-12\"),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"200\").toOptional(),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures()))),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"NUS Hackers Monthly Budget\"),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-18\"),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"600\").toOptional(),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures()))),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"NUS Fintech Society Monthly Budget\"),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-15\"),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"900\").toOptional(),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures()))),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"Tembusu College Annual DnD Fund\"),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-11\"),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"400\").toOptional(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures()))),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"Personal Expenditure\"),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-01\"),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"200\").toOptional(),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures())))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure[] getSampleExpenditures() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Expenditure[]{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Shirt\"),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"85.50\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"White\")),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Pants\"),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"100.50\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Black\")),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Belt\"),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"50.90\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Brown\")),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Shoes\"),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"89.90\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Black\")),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Gloves\"),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"10.90\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Black\")),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Watch\"),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"369.90\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Black\")),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Socks\"),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"3.00\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Black\")),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        };"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static ReadOnlyNusave getSampleNusave() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Nusave sampleNusave \u003d new Nusave();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (Budget budget : getSampleBudgets()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            sampleNusave.addBudget(budget);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return sampleNusave;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a tag set containing the list of strings given."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Set\u003cTag\u003e getTagSet(String... strings) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(strings)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(Tag::new)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toSet());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 40,
      "yu-ming-chen": 8,
      "wenhaogoh": 19,
      "-": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/state/Page.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public enum Page {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    MAIN,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    BUDGET"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/state/PageTitle.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class PageTitle {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String MAIN_PAGE_TITLE \u003d \"NUSave\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/state/State.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public interface State {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Optional\u003cInteger\u003e getBudgetIndex();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Page getPage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    BooleanProperty getIsBudgetPageProp();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    StringProperty getMainPageInfoBoxSecondRowProp();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean isBudgetPage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getPageTitle();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    boolean isMain();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    boolean isBudget();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void setIsBudgetPage(boolean isExpenditure);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setPage(Page page);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setTotalExpenditure(String expenditure);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setBudgetIndex(BudgetIndex index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setPageName(String pageTitle);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 33,
      "wenhaogoh": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/state/StateManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.SimpleBooleanProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.SimpleStringProperty;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class StateManager implements State {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private BudgetIndex budgetIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Page currentPage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private BooleanProperty isBudgetPageProp \u003d new SimpleBooleanProperty(false);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StringProperty mainPageInfoBoxSecondRowProp \u003d new SimpleStringProperty(defaultValueTotalExpenditure());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String pageTitle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructs a {@code StateManager} with the given {@code BudgetIndex} and {@code Page}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param budgetIndex current budget index NUSave is accessed in."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param currentPage current page NUSave is accessed in."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param pageTitle Title of the current page."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StateManager(BudgetIndex budgetIndex, Page currentPage, String pageTitle) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetIndex \u003d budgetIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.currentPage \u003d currentPage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.pageTitle \u003d pageTitle;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //Clock timing on Budgets Page"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String defaultValueTotalExpenditure() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new SimpleDateFormat(\"hh:mm a\").format(Calendar.getInstance().getTime());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cInteger\u003e getBudgetIndex() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.budgetIndex.getBudgetIndex();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Page getPage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.currentPage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BooleanProperty getIsBudgetPageProp() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this.isBudgetPageProp;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StringProperty getMainPageInfoBoxSecondRowProp() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return mainPageInfoBoxSecondRowProp;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isBudgetPage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this.isBudgetPageProp.getValue();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getPageTitle() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.pageTitle;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean isMain() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return this.currentPage \u003d\u003d Page.MAIN;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean isBudget() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return this.currentPage \u003d\u003d Page.BUDGET;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setIsBudgetPage(boolean isBudgetPage) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.isBudgetPageProp.setValue(isBudgetPage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setPage(Page page) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.currentPage \u003d page;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (page \u003d\u003d Page.BUDGET) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            setIsBudgetPage(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            setIsBudgetPage(false);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setTotalExpenditure(String expenditure) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.mainPageInfoBoxSecondRowProp.setValue(expenditure);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setBudgetIndex(BudgetIndex index) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetIndex \u003d index;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setPageName(String pageTitle) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.pageTitle \u003d pageTitle;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 2,
      "sogggy": 93,
      "wenhaogoh": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/state/budgetindex/BudgetIndex.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state.budgetindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public interface BudgetIndex {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Optional\u003cInteger\u003e getBudgetIndex();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setIndex(int index);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/state/budgetindex/BudgetIndexManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state.budgetindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class BudgetIndexManager implements BudgetIndex {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private int budgetIndex;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public BudgetIndexManager(int budgetIndex) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetIndex \u003d budgetIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setIndex(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetIndex \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cInteger\u003e getBudgetIndex() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Optional.of(this.budgetIndex);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/state/budgetindex/EmptyBudgetIndex.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state.budgetindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class EmptyBudgetIndex implements BudgetIndex {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setIndex(int index) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cInteger\u003e getBudgetIndex() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/state/expenditureindex/ExpenditureIndex.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.state.expenditureindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public interface ExpenditureIndex {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    Optional\u003cInteger\u003e getExpenditureIndex();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void setIndex(int index);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/state/expenditureindex/ExpenditureIndexManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.state.expenditureindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class ExpenditureIndexManager implements ExpenditureIndex {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private int expenditureIndex;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public ExpenditureIndexManager(int budgetIndex) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.expenditureIndex \u003d budgetIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public Optional\u003cInteger\u003e getExpenditureIndex() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return Optional.of(this.expenditureIndex);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void setIndex(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.expenditureIndex \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedBudget.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Jackson-friendly version of {@link Budget}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class JsonAdaptedBudget {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Budget\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final String threshold;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final String createdOn;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final List\u003cJsonAdaptedExpenditure\u003e expenditures \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code JsonSerializableBudget} with the given expenditures."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public JsonAdaptedBudget(@JsonProperty(\"name\") String name, @JsonProperty(\"createdOn\") String createdOn,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                             @JsonProperty(\"threshold\") String threshold,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                             @JsonProperty(\"expenditures\") List\u003cJsonAdaptedExpenditure\u003e expenditures) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.threshold \u003d threshold;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.createdOn \u003d createdOn;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.expenditures.addAll(expenditures);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts a given {@code Budget} into this class for Jackson use."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonAdaptedBudget(Budget source) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name \u003d source.getName().value;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        threshold \u003d source.getThreshold().orElse(new Threshold(\"\")).value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        createdOn \u003d source.getCreatedOn().value;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditures.addAll(source.getExpenditures().stream()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .map(JsonAdaptedExpenditure::new)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Converts this Jackson-friendly adapted budget object into the model\u0027s {@code Budget} object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the Budget object converted from Json format."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Budget toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!Name.isValid(name)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        final Name budgetName \u003d new Name(name);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (threshold \u003d\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    Threshold.class.getSimpleName()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!Threshold.isValid(threshold)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(Threshold.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final Optional\u003cThreshold\u003e budgetThreshold \u003d new Threshold(threshold).toOptional();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (createdOn \u003d\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (!Date.isValid(createdOn)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        final Date date \u003d new Date(createdOn);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget budget \u003d new Budget(budgetName, date, budgetThreshold, new ArrayList\u003cExpenditure\u003e());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // converts each jsonAdaptedExpenditure into an Expenditure and adds them into the budget"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (JsonAdaptedExpenditure jsonAdaptedExpenditure : expenditures) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Expenditure expenditure \u003d jsonAdaptedExpenditure.toModelType();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            budget.addExpenditure(expenditure);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return budget;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 16,
      "sogggy": 2,
      "yu-ming-chen": 17,
      "wenhaogoh": 65
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedExpenditure.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Jackson-friendly version of {@link Expenditure}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class JsonAdaptedExpenditure {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Expenditure\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final String price;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final String createdOn;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code JsonAdaptedExpenditure} with the given expenditure details."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonAdaptedExpenditure(@JsonProperty(\"name\") String name, @JsonProperty(\"price\") String price,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                             @JsonProperty(\"createdOn\") String createdOn,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tags) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.price \u003d price;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.createdOn \u003d createdOn;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (tags !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            this.tags.addAll(tags);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts a given {@code Expenditure} into this class for Jackson use."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonAdaptedExpenditure(Expenditure expenditure) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        name \u003d expenditure.getName().value;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        price \u003d expenditure.getPrice().value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        createdOn \u003d expenditure.getCreatedOn().toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        tags.addAll(expenditure.getTags().stream()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .map(JsonAdaptedTag::new)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts this Jackson-friendly adapted expenditure object into the model\u0027s {@code Expenditure} object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the Expenditure object converted from Json format."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted expenditure."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Expenditure toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        final List\u003cTag\u003e expenditureTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (JsonAdaptedTag tag : tags) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            expenditureTags.add(tag.toModelType());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (price \u003d\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!Price.isValid(price)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        final Price modelPrice \u003d new Price(price);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (createdOn \u003d\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!Date.isValid(createdOn)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        final Date modelCreatedOn \u003d new Date(createdOn);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(expenditureTags);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new Expenditure(modelName, modelPrice, modelCreatedOn, modelTags);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 4,
      "sogggy": 10,
      "wenhaogoh": 82
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedTag.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Jackson-friendly version of {@link Tag}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "class JsonAdaptedTag {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String tagName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonAdaptedTag(String tagName) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given {@code Tag} into this class for Jackson use."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonAdaptedTag(Tag source) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        tagName \u003d source.tagName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonValue"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getTagName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return tagName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the Tag object converted from Json format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted tag."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public Tag toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!Tag.isValid(tagName)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Tag(tagName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "sogggy": 1,
      "-": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonNusaveStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * A class to access Nusave stored in the hard disk as a json file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class JsonNusaveStorage implements NusaveStorage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonNusaveStorage.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Constructs a {@code JsonNusaveStorage} with the given {@code filePath}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param filePath {@code Path} containing the Nusave data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonNusaveStorage(Path filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cReadOnlyNusave\u003e readNusave() throws DataConversionException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return readNusave(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cReadOnlyNusave\u003e readNusave(Path filePath) throws DataConversionException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Optional\u003cJsonSerializableNusave\u003e jsonNusave \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                filePath, JsonSerializableNusave.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!jsonNusave.isPresent()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return Optional.of(jsonNusave.get().toModelType());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveNusave(ReadOnlyNusave nusave) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        saveNusave(nusave, filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveNusave(ReadOnlyNusave nusave, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(nusave);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        JsonUtil.saveJsonFile(new JsonSerializableNusave(nusave), filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7,
      "wenhaogoh": 68
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonSerializableNusave.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Jackson-friendly version of {@link Nusave}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class JsonSerializableNusave {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final List\u003cJsonAdaptedBudget\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Constructs a {@code JsonSerializableNusave} with the given budgets."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonSerializableNusave(@JsonProperty(\"budgets\") List\u003cJsonAdaptedBudget\u003e budgets) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.budgets.addAll(budgets);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts a given {@code ReadOnlyNusave} into this class for Jackson use."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param source future changes to this will not affect the created {@code JsonSerializableNusave}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonSerializableNusave(ReadOnlyNusave source) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        budgets.addAll(source.getBudgetList().stream().map(JsonAdaptedBudget::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts this Nusave into the model\u0027s {@code Nusave} object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the Nusave object converted from Json format."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Nusave toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Nusave nusave \u003d new Nusave();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (JsonAdaptedBudget jsonAdaptedBudget : budgets) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Budget budget \u003d jsonAdaptedBudget.toModelType();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            nusave.addBudget(budget);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusave;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "sogggy": 1,
      "wenhaogoh": 44
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/NusaveStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Represents a storage for {@link seedu.address.model.Nusave}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public interface NusaveStorage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Returns the file path of the {@link seedu.address.model.Nusave} data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the {@code Path} containing the Nusave data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Path getNusaveFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Returns the Nusave data from storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return {@code Optional.empty()} if the storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws IOException if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Optional\u003cReadOnlyNusave\u003e readNusave() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Returns the Nusave data from storage at the specified file path."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param filePath the {@code Path} containing the Nusave data file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return {@code Optional.empty()} if the storage file is not found."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws IOException if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Optional\u003cReadOnlyNusave\u003e readNusave(Path filePath) throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Saves the given {@link ReadOnlyNusave} to the storage."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param nusave cannot be null."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveNusave(ReadOnlyNusave nusave) throws IOException;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Saves the given {@link ReadOnlyNusave} to the storage specified by the filePath."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param nusave cannot be null."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param filePath the {@code Path} containing the Nusave data file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveNusave(ReadOnlyNusave nusave, Path filePath) throws IOException;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 24,
      "wenhaogoh": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Storage component"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public interface Storage extends UserPrefsStorage, NusaveStorage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 1,
      "-": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/StorageManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Manages storage of NUSave data in local storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManager implements Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private NusaveStorage nusaveStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private UserPrefsStorage userPrefsStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public StorageManager(NusaveStorage nusaveStorage, UserPrefsStorage userPrefsStorage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.nusaveStorage \u003d nusaveStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefsStorage \u003d userPrefsStorage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.readUserPrefs();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefsStorage.saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Nusave methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusaveStorage.getNusaveFilePath();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cReadOnlyNusave\u003e readNusave() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return readNusave(nusaveStorage.getNusaveFilePath());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cReadOnlyNusave\u003e readNusave(Path filePath) throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusaveStorage.readNusave(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveNusave(ReadOnlyNusave nusave) throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        saveNusave(nusave, nusaveStorage.getNusaveFilePath());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveNusave(ReadOnlyNusave nusave, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nusaveStorage.saveNusave(nusave, filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "wenhaogoh": 15,
      "-": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/UserPrefsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a storage for {@link seedu.address.model.UserPrefs}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public interface UserPrefsStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the file path of the UserPrefs data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the {@code Path} containing the UserPrefs data file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getUserPrefsFilePath();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns UserPrefs data from storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     *   Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userPrefs cannot be null."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "-": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/BudgetCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class BudgetCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static final String FXML \u003d \"BudgetListCard.fxml\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public final Budget budget;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Label expenditureSize;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code BudgetCard} with the given {@code Budget} and index to display."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public BudgetCard(Budget budget, int displayedIndex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budget \u003d budget;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name.setText(budget.getName().value);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String strExpenditureSize \u003d String.valueOf(budget.getExpenditureSize());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expenditureSize.setText(strExpenditureSize + \" expenditures\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (!(other instanceof BudgetCard)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetCard card \u003d (BudgetCard) other;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 budget.equals(card.budget);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "sogggy": 53,
      "wenhaogoh": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ExpenditureCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class ExpenditureCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static final String FXML \u003d \"ExpenditureListCard.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public final Expenditure expenditure;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Label createdOn;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Label price;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private FlowPane tags;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Creates a {@code Expenditure} with the given {@code Expenditure} and index to display."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ExpenditureCard(Expenditure expenditure, int displayedIndex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.expenditure \u003d expenditure;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        name.setText(expenditure.getName().value);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        createdOn.setText(getFormattedCreatedOn());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        price.setText(\"$\" + formatPrice(expenditure.getPrice().value));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expenditure.getTags().stream()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                .sorted(Comparator.comparing(tag -\u003e tag.tagName))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String getFormattedCreatedOn() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new SimpleDateFormat(\"EEE, dd MMM\").format(expenditure.getFormattedCreatedOn());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String formatPrice(String string) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return String.format(\"%.2f\", Double.valueOf(string));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (!(other instanceof ExpenditureCard)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        seedu.address.ui.ExpenditureCard card \u003d (ExpenditureCard) other;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                \u0026\u0026 expenditure.equals(card.expenditure);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 18,
      "sogggy": 8,
      "yu-ming-chen": 4,
      "-": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/HelpWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.Clipboard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.ClipboardContent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for a help page"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String USERGUIDE_URL \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            \"https://github.com/AY2021S1-CS2103T-T11-4/tp/blob/master/docs/UserGuide.md\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"HelpWindow.fxml\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button copyButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label helpMessage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root Stage to use as the root of the HelpWindow."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow(Stage root) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        helpMessage.setText(HELP_MESSAGE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows the help window."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called on the primary stage."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Showing help page about the application.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * Copies the URL to the user guide to the clipboard."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    private void copyUrl() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        final ClipboardContent url \u003d new ClipboardContent();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        url.putString(USERGUIDE_URL);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        clipboard.setContent(url);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 2,
      "-": 101
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainPageInfoBox.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class MainPageInfoBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static final String FXML \u003d \"MainPageInfoBox.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StackPane datePane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StackPane timePane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StackPane greetingPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Text firstRowText;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Text secondRowText;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Text thirdRowText;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private String greeting;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Creates a new MainPageInfoBox."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public MainPageInfoBox() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setMainPageInfoBoxText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void setMainPageInfoBoxText() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        firstRowText.setText(getDefaultFirstRowText());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setMainPageSecondRowText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        thirdRowText.setText(getDefaultThirdRowText());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String getDefaultFirstRowText() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new SimpleDateFormat(\"EEE, dd MMM\").format(Calendar.getInstance().getTime());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setMainPageSecondRowText() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Thread clock \u003d new Thread() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                for (;;) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    secondRowText.setText(new SimpleDateFormat(\"hh:mm a\").format(cal.getTime()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        sleep(1000);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    } catch (InterruptedException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        //..."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        clock.start();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String getDefaultThirdRowText() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int hour \u003d cal.get(Calendar.HOUR_OF_DAY);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String greeting \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (hour \u003c 12) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            greeting \u003d \"Good Morning!\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else if (hour \u003c 17) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            greeting \u003d \"Good Afternoon!\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            greeting \u003d \"Good Evening!\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return greeting;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Text getFirstRowText() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return firstRowText;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Text getSecondRowText() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return secondRowText;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Text getThirdRowText() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return thirdRowText;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 75,
      "yu-ming-chen": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.model.budget.Threshold.NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.binding.Bindings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private RenderableListPanel renderableListPanel;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private MainPageInfoBox mainPageInfoBox;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Title title;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private HelpWindow helpWindow;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private StackPane renderableListPanelPlaceholder;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StackPane mainPageInfoBoxPlaceholder;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StackPane titlePlaceholder;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        renderableListPanel \u003d new RenderableListPanel(logic.getFilteredRenderableList());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        renderableListPanelPlaceholder.getChildren().add(renderableListPanel.getRoot());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        mainPageInfoBox \u003d new MainPageInfoBox();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindMainPageInfoBoxToState();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        mainPageInfoBoxPlaceholder.getChildren().add(mainPageInfoBox.getRoot());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        title \u003d new Title();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindTitleToState();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        titlePlaceholder.getChildren().add(title.getRoot());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandBox commandBox \u003d new CommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void bindTitleToState() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        title.getTitle().textProperty().bind(Bindings.createStringBinding(() -\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            logic.isBudgetPage(); //this expression must be called to always trigger change in title"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return logic.getPageTitle();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }, logic.getIsBudgetPageProp()));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void bindMainPageInfoBoxToState() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindMainPageInfoBoxToPageState();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindMainPageInfoBoxToExpenditureState();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void bindMainPageInfoBoxToPageState() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindFirstRowTextToPageState();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindThirdRowTextToPageState();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void bindMainPageInfoBoxToExpenditureState() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindSecondRowTextToTotalExpenditure();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void bindFirstRowTextToPageState() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        mainPageInfoBox.getFirstRowText().textProperty().bind(Bindings.createStringBinding(() -\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                setFirstRowText(), logic.getIsBudgetPageProp()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String setFirstRowText() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (logic.isBudgetPage()) { //this expression must be called to always trigger change in title"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            mainPageInfoBox.getFirstRowText().setTextAlignment(TextAlignment.LEFT);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return \"Total:\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            mainPageInfoBox.getFirstRowText().setTextAlignment(TextAlignment.CENTER);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return MainPageInfoBox.getDefaultFirstRowText();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void bindSecondRowTextToTotalExpenditure() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        mainPageInfoBox.getSecondRowText().textProperty().bind(Bindings.createStringBinding(() -\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String newValue \u003d logic.getTotalExpenditureStringProp().getValue();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (logic.isBudgetPage()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                return parseExpenditureText(newValue);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            setClockColor();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return newValue;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }, logic.getTotalExpenditureStringProp()));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String parseExpenditureText(String value) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cThreshold\u003e threshold \u003d logic.getThreshold();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert isFloat(value);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String outputValue \u003d \"$ \" + value;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (threshold.isPresent()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Text secondRowText \u003d mainPageInfoBox.getSecondRowText();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            setExpenditureColor(secondRowText, threshold, outputValue, value);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return outputValue;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void setExpenditureColor(Text text, Optional\u003cThreshold\u003e threshold, String outputValue, String newValue) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert threshold.isPresent();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String thresholdValue \u003d threshold.get().value;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert isFloat(newValue);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert isFloat(thresholdValue);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Float newValueFloat \u003d Float.parseFloat(newValue);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Float thresholdValueFloat \u003d Float.parseFloat(thresholdValue);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (newValueFloat \u003e thresholdValueFloat) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            mainPageInfoBox.getSecondRowText().setFill(Color.TOMATO);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            mainPageInfoBox.getSecondRowText().setFill(Color.LIME);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void setClockColor() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        mainPageInfoBox.getSecondRowText().setFill(Color.rgb(0, 0, 0));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private boolean isFloat(String value) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Float.parseFloat(value);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void bindThirdRowTextToPageState() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        mainPageInfoBox.getThirdRowText().textProperty().bind(Bindings.createStringBinding(() -\u003e {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (logic.isBudgetPage()) { //this expression must be called to always trigger change in title"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                mainPageInfoBox.getThirdRowText().setTextAlignment(TextAlignment.RIGHT);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                Optional\u003cThreshold\u003e thresholdOptional \u003d logic.getThreshold();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                if (thresholdOptional.isPresent()) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    return \"/\" + thresholdOptional.get();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                return NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                mainPageInfoBox.getThirdRowText().setTextAlignment(TextAlignment.CENTER);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                return MainPageInfoBox.getDefaultThirdRowText();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }, logic.getIsBudgetPageProp()));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "     * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.show();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.focus();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public RenderableListPanel getRenderableListPanel() {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return renderableListPanel;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult commandResult \u003d logic.execute(commandText);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Result: \" + commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isShowHelp()) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "                handleHelp();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isExit()) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                handleExit();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            return commandResult;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Invalid command: \" + commandText);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 122,
      "wenhaogoh": 8,
      "-": 146
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/RenderableListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Panel containing the list of persons."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class RenderableListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String FXML \u003d \"RenderableListPanel.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(RenderableListPanel.class);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private ListView\u003cRenderable\u003e renderableListView;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code RenderableListPanel} with the given {@code ObservableList}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public RenderableListPanel(ObservableList\u003cRenderable\u003e renderableList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        renderableListView.setItems(renderableList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        renderableListView.setCellFactory(listView -\u003e new RenderableListViewCell());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    class RenderableListViewCell extends ListCell\u003cRenderable\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        protected void updateItem(Renderable renderable, boolean empty) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            super.updateItem(renderable, empty);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            if (empty || renderable \u003d\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else if (renderable instanceof Budget) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                setGraphic(new BudgetCard((Budget) renderable, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else if (renderable instanceof Expenditure) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                setGraphic(new ExpenditureCard((Expenditure) renderable, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 18,
      "sogggy": 23,
      "wenhaogoh": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/Title.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Title extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static final String FXML \u003d \"Title.fxml\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Label title;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Title() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Label getTitle() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 22
    }
  },
  {
    "path": "src/main/resources/view/BudgetListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cHBox id\u003d\"budget-card\" styleClass\u003d\"card\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "  \u003cGridPane id\u003d\"budget-card-box\" styleClass\u003d\"card-box\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"65.0\" prefHeight\u003d\"65.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \u003cHBox spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "          \u003cminWidth\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "          \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003cVBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "          \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          \u003cLabel fx:id\u003d\"expenditureSize\" styleClass\u003d\"expenditure-size\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "sogggy": 28,
      "wenhaogoh": 5
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "  \u003cTextField id\u003d\"command-text-field\" fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 1,
      "-": 8
    }
  },
  {
    "path": "src/main/resources/view/DarkTheme.css",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    src: url(\"/fonts/Lato-Light.ttf\");"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    src: url(\"/fonts/Lato-Regular.ttf\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    src: url(\"/fonts/Roboto-Medium.ttf\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    src: url(\"/fonts/DoppioOne-Regular.ttf\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ".root {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: linear-gradient(from 25% 25% to 70% 70% , #918fdb, #D6A3DC);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#command-text-field {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato-Light\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-text-fill: #636363;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-radius: 20px;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#result-display-text-area {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato-Light\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-background-radius: 20px;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-border-radius: 20px;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.25), 10, 0, 2, 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-wrap-text: true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#result-display-text-area .scroll-pane .content {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#result-display-text-area .scroll-pane .viewport {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#result-display-text-area .scroll-bar, #result-display-text-area .scroll-bar .thumb {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".info-box {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: #B3AADC;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-opacity: 60%;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-radius: 20;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".main-info {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato Regular\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-font-size: 20px;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#time {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Doppio One Regular\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-font-size: 30px;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#title {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 30px;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-wrap-text: true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-text-alignment: right;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ".list-view {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-padding: 0em 0.583em 0.8em 0em;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": ".list-cell:selected .created-on{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ".list-cell:selected .expenditure-size{"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: #E7E7E7;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-radius: 10px;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .thumb {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: #561179;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-radius: 10px;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-button, .scroll-bar .decrement-button {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-shape: \" \";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-padding: 1 4 1 4;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 8 1 8 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".card-box {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-radius: 20px;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: white;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.25), 10, 0, 2, 2);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".card .cell_big_label {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato Regular\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".card #price {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 24px;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-text-fill: #6F47C2;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".created-on {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato-Light\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ".expenditure-size {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-font-family: \"Lato-Light\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "#tags {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-hgap: 5;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-vgap: 3;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "#tags .label {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato-Light\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-background-color: #AF8FF1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-padding: 2 4 2 4;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-background-radius: 30px;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 10;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 8,
      "sogggy": 9,
      "wenhaogoh": 59,
      "-": 80
    }
  },
  {
    "path": "src/main/resources/view/ExpenditureListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cHBox id\u003d\"expenditure-card\" fx:id\u003d\"cardPane\" styleClass\u003d\"card\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    \u003cGridPane id\u003d\"expenditure-card-box\" styleClass\u003d\"card-box\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"65.0\" prefHeight\u003d\"65.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u003cHBox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        \u003cminWidth\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    \u003cVBox\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        \u003cHBox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                            \u003cLabel fx:id\u003d\"createdOn\" styleClass\u003d\"created-on\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                \u003cpadding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                    \u003cInsets bottom\u003d\"0\" left\u003d\"0\" right\u003d\"7\" top\u003d\"0\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                \u003c/padding\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                \u003cminWidth\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                    \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                            \u003c/Label\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                            \u003cFlowPane fx:id\u003d\"tags\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u003cRegion prefWidth\u003d\"0.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u003cLabel id\u003d\"price\" fx:id\u003d\"price\" styleClass\u003d\"cell_big_label\" text\u003d\"price\" \u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 34,
      "sogggy": 20,
      "wenhaogoh": 5
    }
  },
  {
    "path": "src/main/resources/view/MainPageInfoBox.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cVBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" opacity\u003d\"0.66\" prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cStackPane prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"main-info\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cText id\u003d\"date\" fx:id\u003d\"firstRowText\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Date\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"160.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cStackPane prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"main-info\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cText id\u003d\"time\" fx:id\u003d\"secondRowText\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Time\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"160.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cStackPane prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"main-info\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cText id\u003d\"greeting\" fx:id\u003d\"thirdRowText\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Good Evening\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"160.0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                  \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003c/StackPane.margin\u003e\u003c/Text\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "sogggy": 31,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"NUSave\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cicons\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c!--    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e--\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/icons\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"30\" right\u003d\"30\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minHeight\u003d\"100\" prefHeight\u003d\"150\" VBox.vgrow\u003d\"SOMETIMES\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"30\" right\u003d\"30\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        \u003cStackPane fx:id\u003d\"infoBoxPlaceholder\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"30\" right\u003d\"30\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "          \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "             \u003cchildren\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003cStackPane fx:id\u003d\"mainPageInfoBoxPlaceholder\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" opacity\u003d\"0.77\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"info-box\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003cStackPane fx:id\u003d\"titlePlaceholder\" id\u003d\"title-placeholder\" styleClass\u003d\"pane-with-border\" alignment\u003d\"BOTTOM_RIGHT\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "             \u003c/children\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "          \u003c/HBox\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        \u003cVBox fx:id\u003d\"renderableList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"30\" right\u003d\"30\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "          \u003cStackPane fx:id\u003d\"renderableListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "sogggy": 20,
      "wenhaogoh": 1,
      "-": 39
    }
  },
  {
    "path": "src/main/resources/view/RenderableListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "  \u003cListView fx:id\u003d\"renderableListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "sogggy": 7,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/resources/view/ResultDisplay.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" text\u003d\"Welcome to NUSave!\" id\u003d\"result-display-text-area\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "wenhaogoh": 1,
      "-": 6
    }
  },
  {
    "path": "src/main/resources/view/Title.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "      \u003cLabel id\u003d\"title\" fx:id\u003d\"title\" StackPane.alignment\u003d\"BOTTOM_RIGHT\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "sogggy": 6,
      "wenhaogoh": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/LogicManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.testutil.TypicalPersons.AMY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.model.Model;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.storage.JsonAddressBookStorage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//public class LogicManagerTest {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @TempDir"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public Path temporaryFolder;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private Logic logic;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @BeforeEach"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void setUp() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        JsonAddressBookStorage addressBookStorage \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void execute_invalidCommandFormat_throwsParseException() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String invalidCommand \u003d \"uicfhmowqewca\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void execute_commandExecutionError_throwsCommandException() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String deleteCommand \u003d \"delete 9\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void execute_validCommand_success() throws Exception {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String listCommand \u003d ListCommand.COMMAND_WORD;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void execute_storageThrowsIoException_throwsCommandException() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        JsonAddressBookStorage addressBookStorage \u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        JsonUserPrefsStorage userPrefsStorage \u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        // Execute add command"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//                + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        ModelManager expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        expectedModel.addPerson(expectedPerson);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * Executes the command and confirms that"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - no exceptions are thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private void assertCommandSuccess(String inputCommand, String expectedMessage,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//            Model expectedModel) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        CommandResult result \u003d logic.execute(inputCommand);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertEquals(expectedMessage, result.getFeedbackToUser());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * Executes the command, confirms that a ParseException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private void assertParseException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * Executes the command, confirms that a CommandException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private void assertCommandException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * Executes the command, confirms that the exception is thrown and that the result message is correct."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//            String expectedMessage) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * Executes the command and confirms that"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - the {@code expectedException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * @see #assertCommandSuccess(String, String, Model)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//            String expectedMessage, Model expectedModel) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * A stub class to throw an {@code IOException} when the save method is called."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//            super(filePath);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        @Override"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//            throw DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 162
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ExitCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public ExitCommandTest() throws CommandException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //@Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //public void execute_exit_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //    CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //    assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 5,
      "yu-ming-chen": 3,
      "-": 11
    }
  },
  {
    "path": "src/test/java/seedu/address/model/ModelManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManagerTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    private ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void constructor() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(new UserPrefs(), modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(new GuiSettings(), modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        modelManager.setUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(userPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        // Modifying userPrefs should not modify modelManager\u0027s userPrefs"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(oldUserPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void setGuiSettings_validGuiSettings_setsGuiSettings() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        modelManager.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(guiSettings, modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        Path path \u003d Paths.get(\"address/book/file/path\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        modelManager.setAddressBookFilePath(path);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(path, modelManager.getAddressBookFilePath());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void hasPerson_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void hasPerson_personNotInAddressBook_returnsFalse() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertFalse(modelManager.hasPerson(ALICE));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void hasPerson_personInAddressBook_returnsTrue() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        modelManager.addPerson(ALICE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertTrue(modelManager.hasPerson(ALICE));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void equals() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        AddressBook differentAddressBook \u003d new AddressBook();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        // same values -\u003e returns true"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        modelManager \u003d new ModelManager(addressBook, userPrefs);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertTrue(modelManager.equals(modelManagerCopy));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        // same object -\u003e returns true"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertTrue(modelManager.equals(modelManager));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        // null -\u003e returns false"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertFalse(modelManager.equals(null));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        // different types -\u003e returns false"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertFalse(modelManager.equals(5));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        // different addressBook -\u003e returns false"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        // different filteredList -\u003e returns false"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        // resets modelManager to initial state for upcoming tests"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        // different userPrefs -\u003e returns false"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        UserPrefs differentUserPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "wenhaogoh": 109,
      "-": 4
    }
  },
  {
    "path": "src/test/java/seedu/address/model/tag/TagTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.tag;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class TagTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Tag(null));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_invalidTagName_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidTagName \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isValidTagName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // null tag name"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e Tag.isValid(null));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "-": 25
    }
  },
  {
    "path": "src/test/java/seedu/address/state/StateManager.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class StateManager {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 4
    }
  },
  {
    "path": "src/test/java/seedu/address/state/budgetindex/BudgetIndexManager.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state.budgetindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class BudgetIndexManager {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 4
    }
  },
  {
    "path": "src/test/java/seedu/address/state/expenditureindex/ExpenditureIndexManager.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state.expenditureindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class ExpenditureIndexManager {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 4
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedBudgetTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "//import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalBudgets.MC_DONALDS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "//import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class JsonAdaptedBudgetTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_NAME_BLANK \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_NAME_NON_ALPHANUMERIC \u003d \"@Household Expenses\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String INVALID_THRESHOLD_MORE_THAN_TWO_DECIMAL_PLACES \u003d \"2.500\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String INVALID_THRESHOLD_NON_NUMERIC \u003d \"abc\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String VALID_NAME \u003d MC_DONALDS.getName().toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String VALID_THRESHOLD \u003d MC_DONALDS.getThreshold().get().toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final List\u003cJsonAdaptedExpenditure\u003e VALID_EXPENDITURES \u003d MC_DONALDS.getExpenditures().stream()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .map(JsonAdaptedExpenditure::new).collect(Collectors.toList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    public void toModelType_validBudgetDetails_returnsBudget() throws IllegalValueException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(MC_DONALDS);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        assertEquals(MC_DONALDS, budget.toModelType());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    void toModelType_nullName_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(null, VALID_THRESHOLD, VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    void toModelType_invalidNameBlank_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(INVALID_NAME_BLANK, VALID_THRESHOLD, VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    void toModelType_invalidNameNonAlphaNumeric_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(INVALID_NAME_NON_ALPHANUMERIC, VALID_THRESHOLD,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //                VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    void toModelType_nullThreshold_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(VALID_NAME, null, VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    void toModelType_invalidThresholdMoreThanTwoDecimalPlaces_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(VALID_NAME,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        INVALID_THRESHOLD_MORE_THAN_TWO_DECIMAL_PLACES,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //                VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    void toModelType_invalidThresholdNonNumeric_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(VALID_NAME,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        INVALID_THRESHOLD_NON_NUMERIC, VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 8,
      "yu-ming-chen": 48,
      "wenhaogoh": 14
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedExpenditureTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditures.MC_MUFFIN;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class JsonAdaptedExpenditureTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String INVALID_NAME_BLANK \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String INVALID_NAME_NON_ALPHANUMERIC \u003d \"@pple Pie\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String INVALID_PRICE_BLANK \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String INVALID_PRICE_MORE_THAN_TWO_DECIMAL_PLACES \u003d \"2.000\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String INVALID_PRICE_NON_NUMERIC \u003d \"abc\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String INVALID_DATE_BLANK \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String INVALID_DATE_WRONG_FORMAT \u003d \"08-10-2020\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String INVALID_TAG \u003d \"#Snacks\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String VALID_NAME \u003d MC_MUFFIN.getName().value;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String VALID_PRICE \u003d MC_MUFFIN.getPrice().value;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String VALID_DATE \u003d MC_MUFFIN.getCreatedOn().value;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d MC_MUFFIN.getTags().stream().map(JsonAdaptedTag::new)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Todo:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - toModelType_validExpenditureDetails_returnsExpenditure()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - toModelType_invalidTags_throwsIllegalValueException()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void toModelType_validExpenditureDetails_returnsExpenditure() throws IllegalValueException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(MC_MUFFIN);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(MC_MUFFIN, expenditure.toModelType());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void toModelType_nullName_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(null,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_PRICE, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void toModelType_invalidNameBlank_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(INVALID_NAME_BLANK,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_PRICE, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void toModelType_invalidNameNonNumeric_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(INVALID_NAME_NON_ALPHANUMERIC,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                VALID_PRICE, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_nullPrice_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                null, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void toModelType_invalidPriceBlank_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                INVALID_PRICE_BLANK, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void toModelType_invalidPriceMoreThanTwoDecimalPlaces_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                INVALID_PRICE_MORE_THAN_TWO_DECIMAL_PLACES, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void toModelType_invalidPriceNonNumeric_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                INVALID_PRICE_NON_NUMERIC, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_nullDate_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_PRICE, null, VALID_TAGS);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void toModelType_invalidDateBlank_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                VALID_PRICE, INVALID_DATE_BLANK, VALID_TAGS);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void toModelType_invalidDateWrongFormat_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                VALID_PRICE, INVALID_DATE_WRONG_FORMAT, VALID_TAGS);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void toModelType_invalidTags_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                VALID_PRICE, VALID_DATE, invalidTags);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 55,
      "wenhaogoh": 66
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedTagTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class JsonAdaptedTagTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String VALID_TAG \u003d \"entertainment\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_TAG \u003d \"#household\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void getTagName() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedTag tag \u003d new JsonAdaptedTag(VALID_TAG);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(tag.getTagName(), VALID_TAG);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidTag_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedTag tag \u003d new JsonAdaptedTag(INVALID_TAG);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, tag::toModelType);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 26
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/StorageManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManagerTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @TempDir"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public Path testFolder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    private StorageManager storageManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @BeforeEach"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void setUp() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void prefsReadSave() throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        /*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//         * Note: This is an integration test that verifies the StorageManager is properly wired to the"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//         * {@link JsonUserPrefsStorage} class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//         */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        UserPrefs original \u003d new UserPrefs();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        storageManager.saveUserPrefs(original);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(original, retrieved);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void addressBookReadSave() throws Exception {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        /*"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//         * Note: This is an integration test that verifies the StorageManager is properly wired to the"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//         * {@link JsonAddressBookStorage} class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//         */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        AddressBook original \u003d getTypicalAddressBook();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        storageManager.saveAddressBook(original);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(original, new AddressBook(retrieved));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void getAddressBookFilePath() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertNotNull(storageManager.getAddressBookFilePath());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 48,
      "-": 5
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/BudgetBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class BudgetBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"BREAKFAST\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String DEFAULT_CREATED_ON \u003d \"2020-10-10\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Optional\u003cThreshold\u003e DEFAULT_THRESHOLD \u003d Optional.of(new Threshold(\"100\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final List\u003cExpenditure\u003e DEFAULT_EXPENDITURES \u003d TypicalExpenditures.getTypicalExpenditures();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Date createdOn;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Optional\u003cThreshold\u003e threshold;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private List\u003cExpenditure\u003e expenditures;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code BudgetBuilder} with a threshold using the default details."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetBuilder() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        createdOn \u003d new Date(DEFAULT_CREATED_ON);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        threshold \u003d DEFAULT_THRESHOLD;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditures \u003d DEFAULT_EXPENDITURES;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code BudgetBuilder} with the data of {@code budgetToCopy}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetBuilder(Budget budgetToCopy) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name \u003d budgetToCopy.getName();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        createdOn \u003d budgetToCopy.getCreatedOn();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        threshold \u003d budgetToCopy.getThreshold();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditures \u003d budgetToCopy.getExpenditures();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code BudgetBuilder} without a threshold using the default details."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static BudgetBuilder withoutThreshold() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new BudgetBuilder().withThreshold(Optional.empty());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code name} of the {@code Budget} that we are building."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetBuilder withName(String name) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Sets the {@code createdOn} of the {@code Budget} that we are building."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public BudgetBuilder withCreatedOn(String createdOn) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.createdOn \u003d new Date(createdOn);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code threshold} of the {@code Budget} that we are building."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetBuilder withThreshold(Optional\u003cThreshold\u003e threshold) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.threshold \u003d threshold;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code expenditures} of the {@code Budget} that we are building."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetBuilder withExpenditures(List\u003cExpenditure\u003e expenditures) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.expenditures \u003d expenditures;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Budget build() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new Budget(name, createdOn, threshold, expenditures);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 14,
      "wenhaogoh": 71
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/ExpenditureBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * A utility class to help with building Expenditure objects."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class ExpenditureBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"BREAKFAST\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DEFAULT_PRICE \u003d \"12.50\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DEFAULT_CREATED_ON \u003d \"2020-10-10\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Price price;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Date createdOn;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code ExpenditureBuilder} with the default details."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        price \u003d new Price(DEFAULT_PRICE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        createdOn \u003d new Date(DEFAULT_CREATED_ON);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code ExpenditureBuilder} with the data of {@code expenditureToCopy}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder(Expenditure expenditureToCopy) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name \u003d expenditureToCopy.getName();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        price \u003d expenditureToCopy.getPrice();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        createdOn \u003d expenditureToCopy.getCreatedOn();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e(expenditureToCopy.getTags());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code name} of the {@code Expenditure} that we are building."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder withName(String name) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code price} of the {@code Expenditure} that we are building."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder withPrice(String price) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.price \u003d new Price(price);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code createdOn} of the {@code Expenditure} that we are building."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder withCreatedOn(String createdOn) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.createdOn \u003d new Date(createdOn);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code tags} of the {@code Expenditure} that we are building."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder withTags(String ... tags) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.tags \u003d SampleDataUtil.getTagSet(tags);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Expenditure build() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Expenditure(name, price, createdOn, tags);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 81
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalBudgets.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class TypicalBudgets {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final Budget MC_DONALDS \u003d new BudgetBuilder().withName(\"McDonalds\").withCreatedOn(\"2020-10-10\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withExpenditures(TypicalExpenditures.getTypicalExpenditures()).build();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private TypicalBudgets() {} // prevents instantiation"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Nusave getTypicalNusave() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Nusave nusave \u003d new Nusave();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nusave.addBudget(MC_DONALDS);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusave;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 1,
      "wenhaogoh": 16
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalExpenditures.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class TypicalExpenditures {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure MC_MUFFIN \u003d new ExpenditureBuilder().withName(\"McMuffin\").withPrice(\"4.50\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withCreatedOn(\"2020-10-10\").build();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure MC_SPICY \u003d new ExpenditureBuilder().withName(\"McSpicy\").withPrice(\"7.00\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withCreatedOn(\"2020-10-11\").build();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure MC_NUGGETS \u003d new ExpenditureBuilder().withName(\"McNuggets\").withPrice(\"4.00\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withCreatedOn(\"2020-10-12\").build();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private TypicalExpenditures() {} // prevents instantiation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static List\u003cExpenditure\u003e getTypicalExpenditures() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(MC_MUFFIN, MC_NUGGETS, MC_SPICY));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 22
    }
  }
]
