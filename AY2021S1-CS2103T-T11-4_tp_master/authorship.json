[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[![CI Status](https://github.com/AY2021S1-CS2103T-T11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S1-CS2103T-T11-4/tp/actions)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "**NUSave** is a brown-field software engineering team project based on the architecture of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[AddressBook-Level3](https://github.com/se-edu/addressbook-level3) that aims to provide students staying on"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "campus with a centralised platform to budget, track and manage their expenses."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Preview"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![Ui](docs/images/Ui.png)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Useful Links"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* [User Guide](docs/UserGuide.md)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* [Developer Guide](docs/DeveloperGuide.md)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* For the detailed documentation of this project, see the **[NUSave Product Website](https://ay2021s1-cs2103t-t11-4.github.io/tp/)**."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Acknowledgements"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 16,
      "-": 3
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    toolVersion \u003d \u00278.35\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    finalizedBy jacocoTestReport"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    archiveName \u003d \u0027nusave.jar\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "run {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 1,
      "wenhaogoh": 3,
      "-": 72
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: About Us"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Project team"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### Wen Hao"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cimg src\u003d\"images/wenhaogoh.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[[github](https://github.com/wenhaogoh)]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[[portfolio](team/wenhaogoh.md)]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Role: Team Lead"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Responsibilities: Database + UI"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "### Yu Ming"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cimg src\u003d\"images/yu-ming-chen.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[[github](http://github.com/yu-ming-chen)]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[[portfolio](team/yu-ming-chen.md)]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "* Responsibilities: Code Quality + Integration"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "### Ek Chin Hui"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cimg src\u003d\"images/ekchinhui.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[[github](http://github.com/EkChinHui)]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[[portfolio](team/ekchinhui.md)]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "* Responsibilities: Database"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### Chew Song Yu"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cimg src\u003d\"images/sogggy.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "[[github](http://github.com/sogggy)]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[[portfolio](team/sogggy.md)]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "* Responsibilities: Testing"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### David"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cimg src\u003d\"images/davidliew9.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "[[github](https://github.com/davidliew9)]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "[[portfolio](team/davidliew9.md)]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Responsibilities: Documentation"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 3,
      "sogggy": 10,
      "yu-ming-chen": 4,
      "davidliew9": 4,
      "wenhaogoh": 6,
      "-": 31
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: Developer Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- [1. Introduction](#1-introduction)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- [2. Setting Up](#2-setting-up)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- [3. Design](#3-design)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    * [3.1. Architecture](#31-architecture)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    * [3.2. Components](#32-components)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [3.2.1 UI Component](#321-ui-component)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [3.2.2 Logic Component](#322-logic-component)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [3.2.3 Model Component](#323-model-component)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [3.2.4 State Component](#324-state-component)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [3.2.5 Storage Component](#325-storage-component)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    * [3.3. Commons Classes](#33-commons-classes)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- [4. Implementation](#4-implementation)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    * [4.1. State](#41-state)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    * [4.2. Parsers](#42-parsers)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [4.2.1. Page Parsers](#421-page-parsers)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [4.2.2. Command Parsers](#422-command-parsers)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [4.2.3. Interaction Between Parsers](#423-interaction-between-parsers)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    * [4.3. Commands](#43-commands)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        * [4.3.1. Add Commands](#431-add-commands)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            * [4.3.1.1. Create Budget](#4311-create-budget)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            * [4.3.1.2. Add Expenditure](#4312-add-expenditure)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        * [4.3.2. Delete Commands](#432-delete-commands)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            * [4.3.2.1. Delete Budget](#4321-delete-budget)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            * [4.3.2.2. Delete Expenditure](#4322-delete-expenditure)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        * [4.3.3. Edit Commands](#433-edit-commands)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            * [4.3.3.1. Edit Budget](#4331-edit-budget)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            * [4.3.3.2. Edit Expenditure](#4332-edit-expenditure)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        * [4.3.4. Sort Commands](#434-sort-commands)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        * [4.3.5. Find \u0026 List Commands](#435-find--list-commands)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [4.3.6. Undo \u0026 Redo Commands](#436-undo--redo-commands)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [4.3.7. Universal Commands](#437-universal-commands)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            * [4.3.7.1 Help](#4371-help)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    * [4.4. UI](#44-ui)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [4.4.1. List View Rendering](#441-list-view-rendering)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [4.4.2. Dynamic Updating](#442-dynamic-updating)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            * [4.4.2.1. Description](#4421-description)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            * [4.4.2.2. Implementation](#4422-implementation)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    * [5. Guides](#5-guides)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [5.1. Documentation](#51-documentation)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [5.2. Testing](#52-testing)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [5.3. Logging](#53-logging)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [5.4. Configuration](#54-configuration)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        * [5.5. DevOps](#55-devops)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    * [Appendix](#appendix)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [Product Scope](#product-scope)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [User Stories](#user-stories)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [Use Cases](#use-cases)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [Non-Functional Requirements](#non-functional-requirements)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [Glossary](#glossary)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [Instructions for Manual Testing](#instructions-for-manual-testing)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [Effort](#effort)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### Overview"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "NUSave is a budgeting tool made for **university students staying on campus** who want to be able to track and manage "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "their own expenditures with ease. As students, it is common for them to have limited income during their academic years."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Therefore, it is especially necessary for those living independently to plan their finances prudently to ensure that"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "they do not overspend their tight budget."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "A typical student staying on campus has to keep track of: "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* daily expenses"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* club finances"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* project budgets"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* administrative fees"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Rather than having multiple documents and spreadsheets to keep track of their budgets, NUSave allows students to"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "conveniently manage all their expenditures under one centralised platform."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "NUSave implements both **Command Line Interface (CLI)** and **Graphical User Interface (GUI)**."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "In other words, users interact with the application through the command line and the GUI will reflect their actions."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### Purpose"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This document acts as a guide for developers, testers, and designers describing both the architecture and design "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "of NUSave."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## 2. Setting Up"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide [_Setting up and getting started_](SettingUp.md)."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## 3. Design"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This section elaborates on the higher-level components that work together within NUSave. "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "### 3.1. Architecture"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This section explains the high-level design of the application."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "![Architecture Diagram](images/ArchitectureDiagram.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 3.1.1. Figure of Architecture Diagram"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Figure 3.1.1. shows how each high-level component in NUSave is related to each other."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Given below is a quick overview of each component:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**`Main`** has two classes called [`Main`] and [`MainApp`]."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "It has two primary responsibilities:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* At launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup methods where necessary."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The rest of the application consists of five components:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. [**`UI`**](#321-ui-component): Handles the UI of the application."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. [**`Logic`**](#322-logic-component): Executes the commands."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. [**`Model`**](#323-model-component): Holds the data of the application in memory."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. [**`Storage`**](#324-storage-component): Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. [**`State`**](#325-state-componenet): Remembers the current state of the application."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "For each of the five components:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Its API is defined in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Its functionality is exposed using a concrete `{Component Name} Manager` class which implements the corresponding API"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`interface` mentioned in the previous point."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - For example, the `Logic` component (see the class diagram below) defines its API in the `Logic.java` interface and exposes its functionality"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    using the `LogicManager.java` class which implements the `Logic` interface."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "![Architecture Sequence Diagram](images/ArchitectureSequenceDiagram.png)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 3.1.2. Figure of Architecture Sequence Diagram"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 3.1.2. shows how the components interact with each other for the scenario where the user"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "issues the command `delete 1` in a budget page."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### 3.2. Components"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This section elaborates on the different high-level components in NUSave."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#### 3.2.1. UI Component"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the UI Component](images/UiClassDiagram.png)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**API**: `Ui.java`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the `MainWindow` is specified in `MainWindow.fxml`."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "In order to dynamically render data to be displayed to the user, when `setUpGuiComponents()` in `MainWindow` is called, "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": "the method `setStateBinders()` sets Observer objects to observe changes in `State`. For a complete explanation,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "refer to [4.4.2. Dynamic Updating](#442-dynamic-updating)."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "In summary, the `UI` component:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": "* Listens for changes to `Model` and `State` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#### 3.2.2. Logic Component"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Logic Component](images/LogicClassDiagram.png)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**API**: `Logic.java`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Logic` uses the `MainPageParser` and `BudgetPageParser` class to parse commands from the user. This results in a"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`Command` object which is executed by the `LogicManager`. The command execution can affect the `Model`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(e.g. adding an expenditure). The result of the command execution is encapsulated as a `CommandResult` object"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "which is passed back to the `Ui`. In addition, the `CommandResult` object can also instruct the `Ui` to perform"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`MainPageParser`:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- Parse all the commands that is inputted by the user when the state of the NUSave is on `MAIN`."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- This includes commands such as `CreateBudgetCommand` and `OpenBudgetCommand` that are unique to execute at the MainPage."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`BudgetPageParser`:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- Parse all the commands that is inputted by the user when the state of the NUSave is on `BUDGET`."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- This includes commands such as `AddExpendtureCommand` and `CloseBudgetCommand` that are unique to execute at the BudgetPage."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`Commands`:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "-  The `Logic` component includes all commands that is executable on both the Main Page and Budget Page. For a complete"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "elaboration on what each command does, refer to [4.3. Commands](#43-commands)."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Interactions Inside the Logic Component for the `delete 1` Command](diagrams/commandsPlantUML/diagram/DeleteBudgetCommand.png)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 3.2.2.1. Figure of Sequence Diagram for `delete 1`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 3.2.2.1. above represents the interactions within the `Logic` component for the"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sogggy"
        },
        "content": "`execute(\"delete 1\")` call to remove a budget in NUSave."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#### 3.2.3. Model Component"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Model Component](images/ModelClassDiagram.png)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Figure 3.4.1: Structure of the model component."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**API** : `Model.java`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The `Model`:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Stores a `UserPref` object that represents the user’s preferences."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Stores a `Nusave` object that encapsulates `Budget` and `Expenditure` data."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Exposes an unmodifiable `FilteredList\u003cRenderable\u003e` "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "that can be \u0027observed\u0027 e.g. the UI can be bound to this list so"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Does not depend on any of the other three components."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* `FilteredList` was used in favor of `ObservableList` to facilitate the find command implementation."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Now the list can be filtered based on a `Predicate`, allowing for more flexibility for other "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "filtering extensions i.e. filter by number of expenditures."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The `Nusave`:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Implements methods that interface with the `Budget` and `Expenditure` "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "data following the \"Tell, Don\u0027t Ask\" Principle."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Stores an `ObservableList\u003cRenderable\u003e` that is passed up to populate the `FilteredList\u003cRenderable\u003e`."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Stores a `BudgetList` (wrapper class for a `List\u003cBudget\u003e`) as well to access `Expenditures` within a `Budget` since"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "`Expenditures` cannot be accessed through `ObservableList\u003cRenderable\u003e`."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The `Budget`:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Implements the Renderable interface and can thus be stored in the FilteredList."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Contains a `Name`, `Date`, `Optional\u003cThreshold\u003e` and a `List\u003cExpenditure\u003e`."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The `Expenditure`:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Implements the Renderable interface and can thus be stored in the FilteredList."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Contains a `Name`, `Date`, `Price` and `Set\u003cTag\u003e`."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#### 3.2.4. State Component"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sogggy"
        },
        "content": " (Contributed by Song Yu)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sogggy"
        },
        "content": " **API**: `State.java`"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sogggy"
        },
        "content": "  ![Structure of the storage component](images/StateClassDiagram.png)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sogggy"
        },
        "content": "  "
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sogggy"
        },
        "content": "  Figure 3.5.1: Structure of the state component."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sogggy"
        },
        "content": "  "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sogggy"
        },
        "content": " The `State` component:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Represents the current page view NUSave is currently on. Specifically, it represents whether the user is looking at "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sogggy"
        },
        "content": " the main page view or budget page view. The current view is represented by an attribute in `StateManager`, `currentPage`."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Stores data related to the current state of NUSave. This refers to data such as the current page NUSave is currently on,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "sogggy"
        },
        "content": " or the current budget that it is accessing."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sogggy"
        },
        "content": " `State`  lives inside `Model`, where `Model` will use `State` to store stateful data, where these data will be used to "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "sogggy"
        },
        "content": " update information displayed on the GUI, such as the current expenditure of the accessed budget, or list of expenditures "
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sogggy"
        },
        "content": " belonging to the accessed budget."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#### 3.2.5. Storage Component"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**API** : `Storage.java`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The `Storage` component:"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Can save `UserPref` objects in JSON format and read it back."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Can save all NUSave data in JSON format and read it back."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Structure of the storage component](diagrams/StorageClassDiagram.png)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.6.1: Structure of the storage component."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The `Storage` component uses the Jackson API to convert Plain Old Java Objects (POJOs) into JSON files which are then"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "stored locally. It uses the same API to read existing JSON files during the launch of the application to load the stored"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "data into `NUSave`. As seen in Figure 3.6.1, `JsonUserPrefsStorage` is responsible for the reading and writing of"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`UserPref` objects and contains the file path of its JSON file while `JsonNusaveStorage` is responsible for the"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "reading and writing of all NUSave data and contains the file path of its JSON file."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Structure of the data stored by NUSave](diagrams/PojoClassDiagram.png)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.6.2: Structure of the data stored by NUSave."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "In order for them to be recognised by the Jackson API, NUSave data objects (such as `Budget` and `Expenditure`) must be"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "converted into POJOs. Figure 3.6.2 depicts how the respective POJO classes for each of the data objects interact with"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "one another."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### 3.3. Commons Classes"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package, these include exceptions"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ", error messages as well as classes with static methods that can be used by all components without instantiation."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## 4. Implementation"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This section elaborates on the implementations of various commands and components in NUSave."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### 4.1. State"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This section provides context on how `State` affects how commands are parsed by parsers in NUSave."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "sogggy"
        },
        "content": "`State` stores what page NUSave is currently on. If NUSave is on the main page view, `State` stores an attribute of"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "sogggy"
        },
        "content": "`Page.MAIN`, and stores an attribute of `Page.BUDGET` if NUSave is on a budget page view."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "sogggy"
        },
        "content": "The `Logic` component in NUSave relies on this data stored in `State` to decide which parser in NUSave will take"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "sogggy"
        },
        "content": "control of the execution of commands."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "sogggy"
        },
        "content": "![Delete Command Activity Diagram](images/DeleteCommandActivityDiagram.png)"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 4.1.1. Delete Command Activity Diagram"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "sogggy"
        },
        "content": "To elaborate further, using Figure 4.1.1. as a reference, when the user executes a delete command, `delete 1`,"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "sogggy"
        },
        "content": "while on the main page:"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. `Logic` executes the command, checking whether the current page is a budget page or main page, depending on the "
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "sogggy"
        },
        "content": "current page (represented by `currentPage` attribute in `StateManager`) of NUSave."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. Since NUSave is currently on `Page.MAIN`, `MainPageParser` takes control of the execution, parsing the command input by the user."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "sogggy"
        },
        "content": "3. If the command syntax is valid, the delete command is parsed."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    3a. If the syntax is invalid, a `ParseException` is thrown."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "sogggy"
        },
        "content": "4. NUSave deletes the budget based on the index specified by the user, i.e. the 1st budget displayed."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### 4.2. Parsers"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This section describes the details surrounding the parsers which are responsible for converting user inputs into `Command` objects."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "All user inputs are parsed by two types of parsers:"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. Page Parsers"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "2. Command Parsers"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "These parsers are part of the `Logic` component as seen from the class diagram in Figure 4.2.1 below:"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Parser Class Diagram](diagrams/ParserClassDiagram.png)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 4.2.1. Class diagram of parsers"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "**Design Considerations**"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Option A: Use a single parser to parse both main and budget page commands"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "   * Pros: Less code to write"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "   * Cons: Parser class will messy as it needs to differentiate between main and budget page commands that use the same command word."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* **Option B (Chosen):** Use page parsers to parse commands that are available on a page"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "   * Pros: Code is more organised and readable"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "   * Cons: More code to write"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#### 4.2.1. Page Parsers"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Page parsers are responsible for determining the type of `Command` object that will be generated from a user input."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "They enable NUSave to only recognise a set of commands specific to a certain `Page` when the user is on that `Page`."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "They implement the `PageParser` interface."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "All user inputs are first parsed by a page parser."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "It identifies the first word to be the command word and uses it to determine the type of `Command` object that will be generated."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The remaining words are then passed as arguments to the respective command parsers."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "A `ParseException` is thrown if the command word is not recognised by the page parser."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "There are two types of page parsers:"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. `MainPageParser`"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "2. `BudgetPageParser`"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "User inputs are parsed by the `MainPageParser` if they are entered while NUSave is on the main page."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "User inputs are parsed by the `BudgetPageParser` if they are entered while NUSave is on a budget page."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "More information regarding what page the user is on can be found [here](#41-state)."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#### 4.2.2. Command Parsers"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Command parsers are responsible for generating the different types of `Command` object."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "They implement the `Parser\u003cT\u003e` interface."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Arguments in user inputs are parsed by a command parser to generate the respective `Command` object."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The type of `Command` object generated by a command parser follows the generic type of the `Parser\u003cT\u003e` it implements."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "For example, `AddExpenditureCommandParser` implements the `Parser\u003cAddExpenditureCommand\u003e` interface. Hence, it will only generate `AddExpenditureCommand` objects."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "A `ParseException` is thrown if the necessary arguments to generate the respective `Command` object are invalid or missing."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#### 4.2.3. Interaction Between Parsers"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The interaction between the parsers is illustrated by the example usage seen in Figure 4.2.3.1 below:"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Parser Sequence Diagram](diagrams/ParserSequenceDiagram.png) "
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 4.2.3.1. Sequence diagram of a user input being parsed."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### 4.3. Commands"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This section elaborates on the implementations of the commands available in NUSave."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "#### 4.3.1. Add Commands"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This section describes the details surrounding events at which users would wish to add information into NUSave. "
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Specifically, when a user wishes to create a new budget to the Main Page, or when a user wishes to add an expenditure"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "to a budget."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "sogggy"
        },
        "content": "##### 4.3.1.1. Create Budget"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This section explains the `Create Budget Command`."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following activity diagram to shows the events that occur when the user executes the Create Budget Command."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![CreateBudgetCommand Activity Diagram](diagrams/commandsPlantUML/diagram/CreateBudgetCommandActivity.png) "
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 4.3.1.1: Activity diagram for create budget command."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following command occurs in the `Main Page` of NUSave, and results in the specified budget being created in"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "NUSave. This command therefore requires a compulsory name to specify the name of the budget to be created."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following Sequence Diagram shows the interaction between the `Logic` component and `Model` component of NUSave "
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "depicting a scenario when the user wants to create a budget for his Temasek Hall basketball CCA by entering the command"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`create n/Temasek Hall Basketball p/100`."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![CreateBudgetCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/CreateBudgetCommand.png) "
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 4.3.1.2: Sequence diagram for create budget command in main page view."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. The `LogicManager` uses the `MainPageParser` to parse the given user input."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2. The `MainPageParser` will identify the command given by the user and pass the user input down to the"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`CreateBudgetCommandParser`."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "3. The `CreateBudgetCommandParser` will create a `Budget` with the given parameters **name** and **threshold** from the"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "user input."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "4. The `CreateBudgetCommandParser` will then create a `CreateBudgetCommand` object with the created `Budget` object as"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "the input parameter."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "5. The `CreateBudgetCommandParser` will then return a `CreateBudgetCommand` object."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "6. `LogicManager` will now call the `execute` method in the `CreateBudgetCommand` object."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "7. The `CreateBudgetCommand` will now call the `addBudget` method of the existing `Model` object and add the `Budget`"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "object created into NUSave."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "8. The `CreateBudgetCommand` then returns a `CommandResult` indicating the successful addition of the `Budget` object."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "With the above sequence, a budget will be successfully created by the user in his NUSave application, and it will be"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "reflected on the user interface."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "##### 4.3.1.2. Add Expenditure"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This section explains the `Add Expenditure Command`."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following activity diagram to shows the events that occur when the user executes the `Add Expenditure Command`."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![AddExpenditureCommand Activity Diagram](diagrams/commandsPlantUML/diagram/AddExpenditureActivityDiagram.png) "
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 4.3.1.2.1: Activity Diagram for add expenditure command."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Similar to creating a Budget, the add expenditure Command also shows the interaction between the `Logic` component "
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "and `Model` component of NUSave. The sequence diagram depicts a scenario when the user wants to add an expenditure for "
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "his budget by entering the command `add n/Basketball p/20 t/Ball`."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![AddExpenditureCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/AddExpenditureCommand.png) "
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 4.3.1.2.2: Sequence diagram for add expenditure command in budget page view."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. Beginning with the `LogicManager`, the `LogicManager` hands the given user input to the `BudgetPageParser` "
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "to be parsed."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2. The `BudgetPageParser` will identify the command given by the user and pass the user input down to the"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`AddExpenditureCommandParser` to be parsed."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "3. The `AddExpenditureCommandParser` will create an `Expenditure` with the given parameters **name**, **price** and"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "optionally **tags** from the user input."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "4. The `AddExpenditureCommandParser` will then create an `AddExpenditureCommand` object with the created `Budget` "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "object as the input parameter."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "5. The `AddExpenditureCommandParser` will then return an `AddExpenditureCommand` object."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "6. `LogicManager` will now call the `execute` method in the `AddExpenditureCommand` object."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "7. The `AddExpenditureCommand` will now call the `addExpenditure` method of the existing `Model` object and add the "
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Expenditure` object created into NUSave."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "8. The `AddExpenditureCommand` then returns a `CommandResult` indicating the successful addition of the `Expenditure`"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "object."
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "With the above sequence, an expenditure will be successfully created by the user in his NUSave application under "
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "the specific budget, and will be immediately reflected on the user interface."
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "#### 4.3.2. Delete Commands"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This section describes the details surrounding events at which users would wish to delete information from NUSave. "
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Specifically, deletion can happen in two areas; when a user wishes to delete a budget from the Main Page, or when a "
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "user wishes to delete an expenditure from a budget."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "##### 4.3.2.1. Delete Budget"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This section explains the `Delete Budget Command`."
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following activity diagram to shows the events that occur when the user executes the `Delete Budget Command`."
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![AddExpenditureCommand Activity Diagram](diagrams/commandsPlantUML/diagram/DeleteBudgetActivityDiagram.png) "
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 4.3.2.1.1: Activity Diagram for delete budget command."
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following command occurs in the `Main Page` of NUSave, and results in the specified budget of the particular index "
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "to be removed from NUSave. This command therefore requires a compulsory index to specify the particular budget to be "
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "removed."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Only when the index given by the user is valid (within the range of existing budgets), does the command execute "
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "successfully."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following sequence diagram shows the interactions between the `Logic` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "depicting a scenario where the user would like to delete the first budget on his list."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![DeleteBudgetCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/DeleteBudgetCommand.png) "
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 4.3.2.1.2: Sequence diagram  for delete budget command in main page view."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. The `LogicManager` uses the `MainPageParser` to parse the given user input."
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2. The `MainPageParser` will identify the command given by the user and pass the user input down to the"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`DeleteBudgetCommandParser`."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "3. The `DeleteBudgetCommandParser` will create a `BudgetIndex` with the given parameters **index**  from the"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "user input."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "4. The `DeleteBudgetCommandParser` will then create a `DeleteBudgetCommand` object with the created `BudgetIndex`"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "object as the input parameter."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "5. The `DeleteBudgetCommandParser` will then return a `DeleteBudgetCommand` object back to the `LogicManager`."
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "6. `LogicManager` will now call the `execute` method in the `DeleteBudgetCommand` object, with the `Model` as a "
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "parameter."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "7. The `DeleteBudgetCommand`\u0027s `execute` method will now call the `deleteBudget` method of the existing `Model` object"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "passed in and delete the `Budget` object within NUSave."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "8. The `DeleteBudgetCommand` then returns a `CommandResult` indicating the successful deletion of the `Budget` object."
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "With the above sequence, a budget will be successfully deleted by the user in his NUSave application, and it will be"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "reflected on the user interface through the successful `CommandResult` and updated budget list."
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "##### 4.3.2.2. Delete Expenditure"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This section explains the `Delete Expenditure Command`."
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following activity diagram to shows the events that occur when the user executes the `Delete Expenditure Command`."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![AddExpenditureCommand Activity Diagram](diagrams/commandsPlantUML/diagram/DeleteExpenditureActivityDiagram.png) "
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 4.3.2.2.1: Activity Diagram for delete expenditure command."
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following command occurs in the `Budget Page` of NUSave, and results in the specified expenditure of the particular "
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "index to be removed from NUSave. This command therefore requires a compulsory index to specify the particular "
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "expenditure to be removed."
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Only when the index given by the user is valid (within the range of existing budgets), does the command execute "
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "successfully."
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following sequence diagram is similar to `figure 4.3.2.1.1` which shows the interactions between the `Logic` and "
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Model` components of NUSave, depicting a scenario where the user within a budget would like to delete the first "
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "expenditure on his list."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![DeleteExpenditureCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/DeleteExpenditureCommand.png)"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 4.3.2.2.2: Sequence diagram  for delete budget command in budget page view."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. The `LogicManager` uses the `BudgetPageParser` to parse the given user input."
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2. The `BudgetPageParser` will identify the command given by the user and create a `DeleteBudgetCommandParser`."
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "3. The `BudgetPageParser` will pass the user input into the newly created`DeleteBudgetCommandParser`."
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "3. The `DeleteExpenditureCommandParser` will create a `ExpenditureIndex` with the given parameters **index**  from the"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "user input."
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "4. The `DeleteExpenditureCommandParser` will then create a `DeleteExpenditureCommand` object with the created "
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`ExpenditureIndex` object as the input parameter."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "5. The `DeleteExpenditureCommandParser` will then return the `DeleteExpenditureCommand` object back to the "
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`LogicManager`."
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "6. `LogicManager` will now call the `execute` method in the `DeleteExpenditureCommand` object, with the `Model` as a "
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "parameter."
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "7. The `DeleteExpenditureCommand`\u0027s `execute` method will now call the `deleteExpenditure` method of the existing "
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Model` object passed in and delete the `Expenditure` object within NUSave."
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "8. The `DeleteExpenditureCommand` then returns a `CommandResult` indicating the successful deletion of the "
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Expenditure` object."
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "With the above sequence, a budget will be successfully deleted by the user in his NUSave application, and it will be"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "reflected on the user interface through the successful `CommandResult` and updated budget list."
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "#### 4.3.3. Edit Commands"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This section describes the details surrounding events at which users would wish to edit information from NUSave. "
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Specifically, editing can happen in two areas; when a user wishes to edit a budget from the `Main Page`, or when a "
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "user wishes to edit an expenditure from a budget within the `Budget Page`."
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "##### 4.3.3.1. Edit Budget"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This section explains the `Edit Budget Command`."
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following activity diagram to shows the events that occur when the user executes the Edit Budget Command."
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![EditBudgetCommand Activity Diagram](diagrams/commandsPlantUML/diagram/EditBudgetCommandActivity.png) "
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 4.3.3.1.1: Activity diagram for edit budget command."
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following command occurs in the `Main Page` of NUSave, and  results in the specified budget of the particular index "
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "to be edited within NUSave. As such, this command requires a compulsory index to specify the particular budget, "
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "along with fields at which the user would like to edit."
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Only when the index is valid (within the range of existing budgets), and the user provides at least one field to "
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "be edited, does the command execute successfully."
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following sequence diagram shows the interactions between the `Logic` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "depicting a scenario where the user would like to edit the first budget on his/her list, and change the `NAME` and"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`THRESHOLD` of the budget to `Temasek Hall Basketball` and `1000` accordingly."
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![EditBudgetCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/EditBudgetCommand.png)"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 4.3.3.1.2: Sequence diagram for edit budget command in main page view."
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. Beginning with the `LogicManager`, the `LogicManager` hands the given user input to the `MainPageParser` "
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "to be parsed."
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "2. The `MainPageParser` will identify the command given by the user and create an `EditBudgetCommandParser`."
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "3. The `MainPageParser` will pass the user input into the newly created `EditBudgetCommandParser`."
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "4. The `EditBudgetCommandParser` will create an `BudgetIndex` with the given parameters `index` from the"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "user input."
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "5. The `EditBudgetCommandParser` will then create an `EditBudgetDescriptor` with the given parameters of "
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`name` and `threshold`."
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "6. The `EditBudgetCommandParser` will then create an `EditBugetCommand` with the `BudgetIndex` and "
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`EditBudgetDescriptor`."
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "7. The `EditBudgetCommandParser` will then return the `EditBudgetCommand` object back to the `LogicManager`."
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "8. `LogicManager` will now call the `execute` method in the `EditBudgetCommand` object, with the `Model` as a "
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "parameter."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "7. The `EditBudgetCommand`\u0027s `execute` method will now call the `editBudget` method of the existing "
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`Model` object passed in and update the `Budget` with a new edited `Budget` object within NUSave."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "8. The `EditBudgetCommand` then returns a `CommandResult` indicating the successful editing of the "
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`Budget`."
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "With the above sequence, a budget will be successfully edited by the user in his NUSave application, and it will "
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "be reflected on the user interface through the successful `CommandResult` and updated budget list."
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "##### 4.3.3.2. Edit Expenditure"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This section explains the `Edit Expenditure Command`."
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following activity diagram to shows the events that occur when the user executes the `Edit Expenditure Command`."
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![AddExpenditureCommand Activity Diagram](diagrams/commandsPlantUML/diagram/EditExpenditureActivityDiagram.png) "
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 4.3.2.2.1: Activity Diagram for edit expenditure command."
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following command results in the specified expenditure of the particular index to be edited within the "
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Budget Page`. As such, this command requires a compulsory index to specify the particular expenditure, along with a"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "field at which the user would like to edit (`NAME`, `PRICE`, `TAG`)."
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Only when the index is valid (within the range of existing expenditures), and the user provides at least one field to "
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "be edited, does the command execute successfully."
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following sequence diagram shows the interactions between the `Logic` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "depicting a scenario where the user would like to edit the first expenditure on his/her list, and change the previous "
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`NAME`, `PRICE` and `TAG` to `Basketball`, `50` and `Ball` accordingly."
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![EditExpenditureCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/EditExpenditureCommand.png)"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 4.3.3.2.1: Sequence diagram  for delete edit command in budget page view."
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. Beginning with the `LogicManager`, the `LogicManager` hands the given user input to the `BudgetPageParser` "
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "to be parsed."
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2. The `BudgetPageParser` will identify the command given by the user and create an `EditExpenditureCommandParser`."
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "3. The `BudgetPageParser` will pass the user input into the newly created `EditExpenditureCommandParser`."
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "4. The `EditExpenditureCommandParser` will create an `ExpenditureIndex` with the given parameters **index**  from the"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "user input."
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "5. The `EditExpenditureCommandParser` will then create an `EditExpenditureDescriptor` with the given parameters of "
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**name**, **price** and **tags**."
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "6. The `EditExpenditureCommandParser` will then create an `EditExpenditureCommand` with the `Expenditure Index` and "
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`EditExpenditureDescriptor`."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "7. The `EditExpenditureCommandParser` will then return the `EditExpenditureCommand` object back to the `LogicManager`."
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "8. `LogicManager` will now call the `execute` method in the `EditExpenditureCommand` object, with the `Model` as a "
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "parameter."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "7. The `EditExpenditureCommand`\u0027s `execute` method will now call the `editExpenditure` method of the existing "
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Model` object passed in and update the `Expenditure` with a new `Expenditure` object within NUSave."
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "8. The `EditExpenditureCommand` then returns a `CommandResult` indicating the successful editing of the "
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Expenditure`."
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "With the above sequence, an expenditure will be successfully edited by the user in his NUSave application, and it will "
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "be reflected on the user interface through the successful `CommandResult` and updated budget list."
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "#### 4.3.4. Sort Commands"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This section explains the `Sort Command`."
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following activity diagram to shows the events that occur when the user executes the Sort Budget Command."
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![SortBudgetCommand Activity Diagram](diagrams/commandsPlantUML/diagram/SortBudgetCommandActivity.png) "
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 4.3.4.1: Activity diagram for sort budget command."
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following command can occur either in the `Main Page` or `Budget Page` of NUSave, and results in either the budgets"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "or the expenditures to be sorted by name or created date. As such, this command requires a compulsory `SortType` field"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "to specify the particular type of sorting required."
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Only when the `SortType` is valid (`NAME` or `TIME`) does the command execute successfully."
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following sequence diagram shows the interactions between the `Logic` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "depicting a scenario where the user would like to sort the budgets by thier name in alphabetical order. "
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![SortBudgetCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/SortBudgetCommand.png)"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 4.3.4.2: Sequence diagram for sort budget command in main page view."
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. Beginning with the `LogicManager`, the `LogicManager` hands the given user input to the `MainPageParser` "
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "to be parsed."
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "2. The `MainPageParser` will identify the command given by the user and create an `SortBudgetCommandParser`."
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "3. The `MainPageParser` will pass the user input into the newly created `SortBudgetCommandParser`."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "4. The `SortBudgetCommandParser` will then create an `SortBugetCommand` with the sort type `NAME`"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "5. The `SortBudgetCommandParser` will then return the `SortBudgetCommand` object back to the `LogicManager`."
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "6. `LogicManager` will now call the `execute` method in the `SortBudgetCommand` object, with the `Model` as a "
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "parameter."
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "7. The `SortBudgetCommand`\u0027s `execute` method will now call the `sortBudgetsByName` method of the existing "
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`Model` and this will sort the list of budgets in NUSave according with the given sort type `NAME`."
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "8. The `SortBudgetCommand` then returns a `CommandResult` indicating the successful sorting of the "
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`Budget` in NUSave by their name in alphabetical oredr."
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "With the above sequence, budgets will be successfully sorted by the user in his NUSave application by name in"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "alphabetical order, and it will be reflected on the user interface through the successful `CommandResult`"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "and updated budget list."
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Note that the `sort` command can be executed on `Budget Page` view as well to sort the list of expenditures of a given"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "budget. The following sequence diagram shows the interactions between the `Logic` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "depicting a scenario where the user would like to sort the expenditures by their created date with the lastest created"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "expenditure at the top of list of expenditures."
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![SortExpenditureCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/SortExpenditureCommand.png)"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 4.3.4.3: Sequence diagram for sort expenditure command in main page view."
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The details of the flow of `SortExpenditureCommand` will not be elaborate in details as it is similiar to"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`SortBudgetCommand`."
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "#### 4.3.5. Find \u0026 List Commands"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "sogggy"
        },
        "content": "##### 4.3.5.1 List Budget"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The following sequence diagram shows the interactions between the `Logic` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "depicting a scenario where the user would like to list all budgets."
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "![ListBudgetCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/ListBudgetCommand.png)"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 4.3.5.1.1: Sequence diagram for list budget command in main page view."
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. The `LogicManager` uses the `MainPageParser` to parse the give user input."
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. The `MainPageParser` will identify the command given by the user and create a `ListBudgetCommand`."
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "3. The `MainPageParser` will then return the `ListBudgetCommand` object back to the `LogicManager`."
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "4. `LogicManager` will now call the `execute` method in the `ListBudgetCommand` object."
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "5. The `ListBudgetCommand` `execute` method will now call the `listBudgets` method of the existing `Model` object and"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "list all existing budgets within NUSave."
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "6. The `ListBudgetCommand` then returns a `CommandResult` indicating the successful listing of all budgets."
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "With the above sequence, all budgets will be listed by the user in his NUSave application, and it will be reflected"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "on the user interface."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "sogggy"
        },
        "content": "##### 4.3.5.2 Find Budget"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The following sequence diagram shows the interactions between the `Logic` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "depicting a scenario where the user would like to find budgets by a search term/phrase."
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "![FindBudgetCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/FindBudgetCommand.png)"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 4.3.5.2.1: Sequence diagram for find budget command in main page view."
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. The `LogicManager` uses the `MainPageParser` to parse the give user input."
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. The `MainPageParser` will identify the command given by the user and pass the user input down to the "
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "`FindBudgetCommandParser`."
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "3. The `FindBudgetCommandParser` will then create a `FindBudgetCommand` with the user input as the search term."
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "4. `FindBudgetCommandParser` then returns the `FindBudgetCommand` object back to the `LogicManager`."
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "5. The `LogicManager` will now call the `execute` method in the `FindBudgetCommand` object."
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "6. The `FindBudgetCommand` `execute` method will now call the `findBudget` method of the existing `Model` object and"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "apply a filter for budgets displayed by NUSave."
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "7. The `FindBudgetCommand` then returns a `CommandResult` indicating that all budgets containing the search term"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "has been displayed."
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "With the above sequence, all budgets containing the search term entered will be filtered "
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "and displayed on the user interface."
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "sogggy"
        },
        "content": "##### 4.3.5.3 List Expenditure"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The following sequence diagram shows the interactions between the `Logic` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "depicting a scenario where the user would like to list all expenditure within the current budget."
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "![ListBudgetCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/ListExpenditureCommand.png)"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 4.3.5.3.1.: Sequence diagram for list expenditure command in budget page view."
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. The `LogicManager` uses the `BudgetPageParser` to parse the give user input."
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. The `BudgetPageParser` will identify the command given by the user and create a `ListExpenditureCommand`."
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "3. The `BudgetPageParser` will then return the `ListExpenditureCommand` object back to the `LogicManager`."
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "4. `LogicManager` will now call the `execute` method in the `ListExpenditureCommand` object."
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "5. The `ListExpenditureCommand` `execute` method will now call the `listExpenditure` method of the existing `Model` object and"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "list all existing expenditures within the current budget."
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "6. The `ListExpenditureCommand` then returns a `CommandResult` indicating the successful listing of all expenditures."
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "With the above sequence, all expenditures will be listed by the user in his NUSave application, and it will be reflected"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "on the user interface."
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "sogggy"
        },
        "content": "##### 4.3.5.4 Find Expenditure"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The following sequence diagram shows the interactions between the `Logic` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "depicting a scenario where the user would like to find expenditures in a budget by a search term/phrase."
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "![FindBudgetCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/FindExpenditureCommand.png)"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 4.3.5.4.1.: Sequence diagram for find expenditure command in budget page view."
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. The `LogicManager` uses the `BudgetPageParser` to parse the give user input."
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. The `BudgetPageParser` will identify the command given by the user and pass the user input down to the "
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "`FindExpenditureCommandParser`."
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "3. The `FindExpenditureCommandParser` will then create a `FindExpenditureCommand` with the user input as the search term."
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "4. `FindExpenditureCommandParser` then returns the `FindExpenditureCommand` object back to the `LogicManager`."
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "5. The `LogicManager` will now call the `execute` method in the `FindExpenditureCommand` object."
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "6. The `FindExpenditureCommand` `execute` method will now call the `findExpenditures` method of the existing `Model` object and"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "apply a filter for expenditures displayed by NUSave."
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "7. The `FindExpenditureCommand` then returns a `CommandResult` indicating that all expenditures in the current budget"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " containing the search term has been displayed."
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "With the above sequence, all expenditures containing the search term entered will be filtered "
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "and displayed on the user interface."
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 4.3.6. Undo \u0026 Redo Commands"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The undo and redo commands are implemented using the following classes:"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "| Class             | Details            | Purpose |"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "| -------- | --------------------------- | -------------- |"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "| `VersionedNusave` | Contains a `BudgetList` and `BudgetIndex` | Represents the data and view of NUSave at a certain point in time |"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "| `Node\u003cT\u003e`         | Contains a value of type `T`, next `Node\u003cT\u003e` and previous `Node\u003cT\u003e` | Represents a doubly linked list |"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "| `HistoryManager\u003cT\u003e` | Contains a pointer to a `Node\u003cT\u003e` | Represents an iterator to iterate through a doubly linked list represented by `Node\u003cT\u003e` |"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The following class diagram shows how the classes interact with each other:"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo class diagram](diagrams/UndoRedoClassDiagram.png)"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The pointer in `HistoryManager\u003cVersionedNusave\u003e` is always pointing to the latest `VersionedNusave` in a doubly linked list represented by `Node\u003cT\u003e`. If an undo command is executed, it will load the previous `VersionedNusave` and move the pointer backward. If a redo command is executed, it will load the next `VersionedNusave` and move the pointer forward. Whenever the user makes changes to NUSave data, a `VersionedNusave` is instantiated with a deep copy of the `BudgetList` from `Nusave` and the `BudgetIndex` from `State`. It replaces the next `Node\u003cT\u003e` (if any) of the `Node\u003cT\u003e` that `HistoryManager\u003cVersionedNusave\u003e` is currently pointing to before the pointer is moved forward."
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "To better illustrate the process, an example usage shown below:"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Step 1: The user launches NUSave. `HistoryManager\u003cVersionedNusave\u003e` is instantiated with an empty doubly linked list."
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo object diagram for step 1](diagrams/UndoRedoState0.png)"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Step 2: The user makes changes to NUSave data by creating a `Budget` named \"demo\". Before the change is made, a `VersionedNusave` is instantiated in case the user wants to undo. `HistoryManager\u003cVersionedNusave\u003e` adds this `VersionedNusave` to the doubly linked list."
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo object diagram for step 2](diagrams/UndoRedoState1.png)"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Step 3: The user executes the undo command. Before reverting the changes, a `VersionedNusave` is instantiated in case the user wants to redo. `HistoryManager\u003cVersionedNusave\u003e` adds this `VersionedNusave` to the doubly linked list before moving its pointer backward to retrieve the previous `VersionedNusave`. The `BudgetList` from the previous `VersionedNusave` is loaded into `Nusave` while the `BudgetIndex` from the previous `VersionedNusave` is used to set `State`. Once this is done, the GUI should reflect that the \"demo\" budget is removed from NUSave."
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo object diagram for step 3](diagrams/UndoRedoState2.png)"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Step 4: The user executes the redo command. `HistoryManager\u003cVersionedNusave\u003e` retrieves the next `VersionedNusave` from the pointer and moves its pointer forward. The `BudgetList` from the next `VersionedNusave` is loaded into `Nusave` while the `BudgetIndex` from the next `VersionedNusave` is used to set `State`. Once this is done, the GUI should reflect that the \"demo\" budget is added back to NUSave."
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo object diagram for step 4](diagrams/UndoRedoState3.png)"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Step 5: The user makes changes to NUSave data by creating a `Budget` named \"demo2\". Before the change is made, a `VersionedNusave` is instantiated in case the user wants to undo. `HistoryManager\u003cVersionedNusave\u003e` adds this `VersionedNusave` to the doubly linked list before moving its pointer forward."
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo object diagram for step 5](diagrams/UndoRedoState4.png)"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The following sequence diagram shows how the undo command is executed:"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo sequence diagram](diagrams/UndoSequenceDiagram.png)"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 4.3.7. Universal Commands"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 4.3.7.1 Help"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This section explains the `Help Command`."
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following activity diagram to shows the events that occur when the user executes the Help Command."
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![HelpCommand Activity Diagram](diagrams/commandsPlantUML/diagram/HelpCommandActivity.png) "
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 4.3.7.1.1: Activity diagram for help command."
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following command can occur either in the `Main Page` or `Budget Page` of NUSave, and the help notes will be"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "displayed in the result box of the UI Component."
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following sequence diagram shows the interactions between the `Logic` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "depicting a scenario where the user would like to ask for help to be displayed. "
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![HelpCommand Sequence Diagram](diagrams/commandsPlantUML/diagram/HelpCommand.png)"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 4.3.7.1.2: Sequence diagram for help command in main page view."
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. Beginning with the `LogicManager`, the `LogicManager` hands the given user input to the `MainPageParser` "
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "to be parsed."
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "2. The `MainPageParser` will identify the command given by the user and create an `HelpBudgetCommand`."
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "3. The `MainPageParser` will then return the `HelpBudgetCommand` object back to the `LogicManager`."
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "4. `LogicManager` will now call the `execute` method in the `HelpBudgetCommand` object, with the `Model` as a "
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "parameter."
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "5. The `HelpBudgetCommand`\u0027s `execute` method will return a `CommandResult` indicating the successful calling for the"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "help command, and the help information will be displayed in the result box in NUSave. "
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "With the above sequence, the help information will be successfully shown to the user in NUSave, and it will be reflected "
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "on the user interface."
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Note that the `help` command can be executed on `Budget Page` view as well, but it will display a different set of help"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "message that is unique to the `Budget Page` view with commands that can be executed on the view."
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### 4.4. UI"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This section elaborates on the implementations of various `Ui` features."
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#### 4.4.1. List View Rendering"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This section talks about how budget and expenditure cards are rendered within the List View UI component on the GUI of NUSave."
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "As there is a need to constantly re-render the contents within the List View to reflect user changes, we have adopted the **Observer Pattern**"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "so that data can be sent from the `Model` component to the `UI` component efficiently. Using the JavaFX API, the List View is binded to an `ObservableList`"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "such that any changes to the `ObservableList` will trigger an update within the List View accordingly."
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Class Diagram between `Model` and `UI`](diagrams/ListViewClassDiagram.png)"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 4.4.1.1. Class diagram to illustrate the observer pattern"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The List View UI component is able to display both budget and expenditure cards interchangeably through the `Renderable` interface."
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Both `Budget` and `Expenditure` classes implement the `Renderable` interface."
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "As such, `Budget` and `Expenditure` objects can be added to the `ObservableList` of `Renderable` which the List View is binded to."
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Whenever changes are made to the `ObservableList`, the List View generates either a `BudgetCard` or `ExpenditureCard` depending on the runtime type of the `Renderable` object."
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "To facilitate sort and find commands, an additional layer of filtering is accomplished using the `FilteredList` class. Different types of predicates are"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "supplied to the filtered list depending on user needs."
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "**Design Considerations**"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Option A: Use separate List Views for `Budget` and `Expenditure`"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "   * Pros: Less prone to the error where both `BudgetCard` and `ExpenditureCard` are displayed simultaneously"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "   * Cons: Higher difficulty and more code to write as there is the need to handle the replacement of the entire List View"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* **Option B (Chosen):** Use a single List View to hold both `Budget` and `Expenditure` with the use of a `Renderable` interface"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "   * Pros: Easier to extent as new classes just need to implement the `Renderable` interface to be displayed"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "   * Cons: More prone to the error where both `BudgetCard` and `ExpenditureCard` are displayed simultaneously"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#### 4.4.2. Dynamic Updating"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This section talks about how data is dynamically updated on the GUI of NUSave.  "
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "sogggy"
        },
        "content": "As an overview, we use the **Observer Pattern** to dynamically update these modified data. We force this communication by "
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "sogggy"
        },
        "content": "using a `StateBinder` interface, where `bind()` is called to bind all `StateBinders` to `StateManager`."
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "sogggy"
        },
        "content": "![Class Diagram between StateBinders and State](images/StateBinders_State_Class_Diagram.png)"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Figure 4.4.2.1. Observer Pattern Illustration."
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. On initialisation of NUSave, `MainWindow` calls `this.setStateBinders()`, which calls `StateBinderList.bindAll()`."
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. `StateBinderList` calls `bind()` on every `StateBinder`. "
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "sogggy"
        },
        "content": "3. `bind()` will connect to `isBudgetPageProp`, `infoBoxSecondRowProp` and `thresholdStringProp` in `State`."
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "sogggy"
        },
        "content": "4. Whenever the attributes in `State` as referenced in step 3 are updated, the `StateBinders` are notified, which in turn"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "sogggy"
        },
        "content": "updates the GUI."
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "sogggy"
        },
        "content": "As seen, there is also a combination of the [**Facade Pattern**](https://nus-cs2103-ay2021s1.github.io/website/se-book-adapted/chapters/designPatterns.html#facade-pattern)"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "sogggy"
        },
        "content": "and [**N-tier Architectural Style**](https://nus-cs2103-ay2021s1.github.io/website/se-book-adapted/chapters/architecture.html#n-tier-architectural-style) "
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "sogggy"
        },
        "content": "to link `StateBinder` and `StateManager` together."
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "sogggy"
        },
        "content": "##### 4.4.2.1. Description"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "sogggy"
        },
        "content": "When a page switches from the main page to a budget page, information in the `InfoBox` and `Title` UI classes are updated."
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "sogggy"
        },
        "content": "When the `StringProperty` and `BooleanProperty` attributes are updated in `State`, the observers in `InfoBox` and `Title`"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "sogggy"
        },
        "content": "are notified, which updates the data displayed.  "
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "sogggy"
        },
        "content": "###### 4.4.2.2. Implementation"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "sogggy"
        },
        "content": "The change in information displayed occurs when the user inputs one of the following commands:"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. Opening a budget: `open`"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. Closing a budget: `close`"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "sogggy"
        },
        "content": "3. Adding an expenditure: `add`"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "sogggy"
        },
        "content": "4. Editing an expenditure: `edit`"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "sogggy"
        },
        "content": "5. Deleting an expenditure: `delete`"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "sogggy"
        },
        "content": "###### Sequence Diagram"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "sogggy"
        },
        "content": "The following sequence diagram shows the interactions between the `Ui`, `Logic`,`Model` and `State` components of NUSave,"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "sogggy"
        },
        "content": "depicting a scenario where the user opens a budget."
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "sogggy"
        },
        "content": "![Update Title Sequence Diagram](images/UpdateTitleSequenceDiagram.png)"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 4.4.2.2.1.1. Sequence Diagram for Open Command"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. `MainWindow` is called with the String `open 1`."
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. `MainWindow` uses `LogicManager` to execute the given user input."
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. The `LogicManager` uses the `MainPageParser` to parse the given user input."
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. The `MainPageParser` identifies the command given by the user and creates an `OpenBudgetCommandParser`."
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "sogggy"
        },
        "content": "3. The `MainPageParser` passes the user input into the newly created`OpenBudgetCommandParser`."
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "sogggy"
        },
        "content": "4. The `OpenBudgetCommandParser` creates a `OpenBudgetCommand` object."
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "sogggy"
        },
        "content": "5. The `OpenBudgetCommandParser` returns the `OpenBudgetCommand` object back to `LogicManager`."
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "sogggy"
        },
        "content": "6. `LogicManager` calls the `execute` method in the `OpenBudgetCommand` object, with the `Model` as a "
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "sogggy"
        },
        "content": "parameter."
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "sogggy"
        },
        "content": "7. The `OpenBudgetCommand`\u0027s `execute` method calls the `openBudget` method of the existing "
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "sogggy"
        },
        "content": "`Model` object passed in."
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "sogggy"
        },
        "content": "8. `ModelManager` calls its own `setOpenCommandState` method, which retrieves relevant data to update `State`."
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "sogggy"
        },
        "content": "9. `ModelManager` calls `State`\u0027s `setOpenCommandState` method, updating state data relevant to opening a budget."
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "sogggy"
        },
        "content": "10. `State`\u0027s `StringProperty` and `BooleanProperty` attributes are updated, which notifies `InfoBox`"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "sogggy"
        },
        "content": "and `Title` to update."
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "sogggy"
        },
        "content": "With the above sequence, a budget will successfully be opened, and the `Title` component reflects the name of "
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "sogggy"
        },
        "content": "the budget, while the `InfoBox` component reflects the total expenditure and threshold of the budget."
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "sogggy"
        },
        "content": "**Design Considerations**"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "sogggy"
        },
        "content": "* Option A: Use Model-View Controller (MVC) Pattern to update GUI"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   * Pros: Good separation of concern, with controller being in charge of updating both the model and Ui."
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   * Cons: Hard to implement as controllers will have to be set up from scratch."
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "sogggy"
        },
        "content": "* **Option B (Chosen):** Use Observer Pattern to update GUI"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   * Pros: Able to use proprietary JavaFx library to implement, enforce loose coupling with Observer interface."
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   * Cons: External code can easily invoke observer as `bind()` method is public. "
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "sogggy"
        },
        "content": "## 5. Guides"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### 5.1. Documentation"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "* [Documentation guide](Documentation.md)"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### 5.2. Testing"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "* [Testing guide](Testing.md)"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### 5.3. Logging"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "* [Logging guide](Logging.md)"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### 5.4. Configuration"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "* [Configuration guide](Configuration.md)"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "sogggy"
        },
        "content": "### 5.5. DevOps"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* [Dev Ops guide](DevOps.md)"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Appendix"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### Product Scope"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**Target User Profile:**"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* students staying on campus"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* has a need to manage a significant number of budgets and expenditures"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* prefers using desktop over other platforms"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* types fast and prefers typing to mouse interactions"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* is comfortable using CLI applications"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**Value Proposition:** "
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* manages expenditures faster than a typical mouse/GUI driven application"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* allows users to keep track of their budgets on a centralised platform"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### User Stories"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Yu Ming and David)"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Priorities: "
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* High (must have) - `* * *` "
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Medium (nice to have) - `* *`"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "* Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "| Priority | As a …​                                 | I want to …​                           | So that I can…​                                                     |"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| -------- | ------------------------------------------ | ----------------------------------------- | ---------------------------------------------------------------------- |"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | new user                                   | see a list of available commands          | refer to instructions when I forget how to use the application         |"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | new user                                   | view sample data                          | have a better understanding of how the application works               |"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | new user                                   | clear my existing data                    | remove all the sample data from my application                         |"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | create a budget                           | add a new budget that I need                                           |"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | delete a budget                           | remove a budget that I no longer need                                  |"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | edit a budget                             | edit the name or the threshold that needs to be changed                |"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* *`    | user                                       | sort my budgets                           | view my budgets based on name or date                                  |"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* *`    | user                                       | find a budget by search term              | locate a budget easily                                                 |"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* *`    | user                                       | list out my budgets                       | view by budgets in the default manner after finding or sorting         |"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | open a budget                             | view the expenditures of a budget                                      |"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | close a budget                            | return to the main window                                              |"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* *`    | user                                       | see how many expenditures I have in a budget | have a better understanding of the particular budget                |"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | add an expenditure                        | add a new expenditure to a budget                                      |"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | delete an expenditure                     | remove an expenditure that I no longer need                            |"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* * *`  | user                                       | edit an expenditure                       | edit the name, price and tag that needs to be changed                  |"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* *`    | user                                       | sort my expenditures                      | view my expenditures based on name or date                             |"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* *`    | user                                       | find an expenditure by search term        | locate an expenditure easily                                           |"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* *`    | user                                       | list out my expenditures                  | view by expenditures in the default manner after finding or sorting    |"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* *`    | user                                       | see if I have passed my threshold         | manage my expenses better                                              |"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* *`    | user                                       | add tags to my expenditure                | categorise my expenditures                                             |"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "| `* *`    | user                                       | exit NUSave                               | stop using the application                                             |"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### Use Cases"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC01 - Viewing the help menu"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eUse Case: UC01 - Viewing the help menu"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. User enters the command to show the help menu in NUSave."
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. NUSave displays the help menu to the user."
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- 1a. NUSave detects an error in the entered command."
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - 1a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - 1a2. User enters new command."
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Steps 1a1-1a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 2."
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC02 - Creating a budget"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eUse Case: UC02 - Creating a budget"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the main page"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. User enters the command to add a new budget in NUSave."
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. NUSave adds the new budget and displays the updated list of budgets to the user."
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- 1a. NUSave detects an error in the entered command (for example, an invalid threshold)."
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - 1a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    - 1a2. User enters a new command."
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Steps 1a1-1a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 2."
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC03 - Editing a budget"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eUse Case: UC03 - Editing a budget"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the main page"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. User enters the command to edit a budget in NUSave."
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. NUSave replaces the old budget with the newly edited budget and displays the updated list of budgets to the user."
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- 1a. NUSave detects an error in the entered command."
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - 1a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - 1a2. User enters new command."
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Steps 1a1-1a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 2."
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- 1b. NUSave detects that the given budget does not exist in NUSave."
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - 1b1. NUSave shows an error message."
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - 1b2. User enters new command."
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Steps 1b1-1b2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 2."
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    "
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC04 - Deleting a budget"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eUse Case: UC04 - Deleting a budget"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the Main page, there must be an existing budget"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. User enters the command to delete a budget."
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2. NUSave deletes the budget and displays the updated list to the user."
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- 1a. NUSave detects an error in the entered command."
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - 1a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - 1a2. User enters new command."
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    \u003cbr/\u003e Steps 1a1-1a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 2."
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC05 - Opening a budget"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MSS (Contributed by Song Yu)"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "sogggy"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003eUse Case: UC05 - Opening a budget"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the main page"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. User enters the command to open a budget in NUSave."
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. NUSave opens the budget displays the list of expenditures belonging to that budget to the user."
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "sogggy"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- 1a. NUSave detects an error in the entered command."
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    - 1a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    - 1a2. User enters new command."
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003cbr/\u003e Steps 1a1-1a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 2."
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC06 - Closing a budget"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MSS (Contributed by Song Yu)"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "sogggy"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003eUse Case: UC06 - Closing a budget"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the budget page"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. User enters the command to close a budget in NUSave."
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. NUSave closes the budget and displays the list of budgets in NUSave."
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "sogggy"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- 1a. NUSave detects an error in the entered command."
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    - 1a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    - 1a2. User enters new command."
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003cbr/\u003e Steps 1a1-1a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 2."
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC07 - Sorting budgets"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eUse Case: UC07 - Sorting budgets"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the main page, NUSave contains at least 2 or more budgets"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. User enters the command to sort budgets in NUSave."
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. NUSave sorts all budgets and displays the updated list of budgets to user."
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- 1a. NUSave detects an error in the entered command."
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - 1a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - 1a2. User enters new command."
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Steps 1a1-1a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 2."
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC08 - Finding budgets"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003eUse Case: UC08 - Finding budgets"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003eActor: User"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003ePreconditions: User is on the main page."
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003eMSS:"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. User enters the command to find budgets in NUSave."
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. NUSave finds all budgets matching the user input and displays the updated list of budgets to user."
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003eUse case ends."
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "- 1a. NUSave detects an error in the entered command."
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - 1a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - 1a2. User enters new command."
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \u003cbr\u003e Steps 1a1-1a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \u003cbr\u003e Use case resumes at step 2."
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "- 2a. NUSave detects that no budgets were found."
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - 2a1. NUS displays an empty list view with a message noting that no budgets matched the user input."
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC09 - Listing budgets"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr/\u003eUse Case: UC10 - Listing budgets"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the main page."
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. User enters the command to list all budgets in NUSave."
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. NUSave lists all existing budgets in memory, displaying them in the list view and shows the success message."
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003eUse case ends."
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC10 - Clearing budgets"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eUse Case: UC10 - Clearing budgets"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the main page."
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. User enters the command to clear all budgets in NUSave."
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "2. NUSave deletes all existing budgets, displays an empty list view and shows the success message."
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC11 - Adding an expenditure"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "sogggy"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eUse Case: UC11 - Adding an expenditure"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the budget page"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. User enters the command to add a new expenditure in NUSave."
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. NUSave adds the new expenditure and displays the updated list of expenditures to the user."
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "sogggy"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- 1a. NUSave detects an error in the entered command (for example, an invalid price)."
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    - 1a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    - 1a2. User enters new command."
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003cbr/\u003e Steps 1a1-1a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 2."
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC12 - Editing an expenditure"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eUse Case: UC12 - Editing an expenditure"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the Budget page, there must be an existing expenditure"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. User requests to \u003cins\u003eopen a budget (UC05)\u003c/ins\u003e to view the list of expenditures in the budget page view."
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2. NUSave opens the budget and displays the list of expenditures belonging to that budget."
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "3. User enters the command to edit an expenditure within the budget."
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "4. NUSave edits the expenditure and displays the updated list to the user."
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- 3a. NUSave detects an error in the entered command."
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - 3a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - 3a2. User enters new command."
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    \u003cbr/\u003e Steps 3a1-3a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 4."
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC13 - Deleting an expenditure"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eUse Case: UC13 - Deleting an expenditure"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the Budget page, there must be an existing expenditure"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. User requests to \u003cins\u003eopen a budget (UC05)\u003c/ins\u003e to view the list of expenditures in the budget page view."
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2. NUSave opens the budget and displays the list of expenditures belonging to that budget."
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "3. User enters the command to delete an expenditure within the budget."
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "4. NUSave deletes the expenditure and displays the updated list to the user."
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- 3a. NUSave detects an error in the entered command."
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - 3a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - 3a2. User enters new command."
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    \u003cbr/\u003e Steps 3a1-3a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 4."
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC14 - Sorting expenditures"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eUse Case: UC14 - Sorting expenditures"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the budget page, the given budget contains at least 2 or more expenditures"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. User requests to \u003cins\u003eopen a budget (UC05)\u003c/ins\u003e to view the list of expenditures in the budget page view."
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. NUSave opens the budget and displays the list of expenditures belonging to that budget."
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "sogggy"
        },
        "content": "3. User enters the command to sort expenditures in NUSave."
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "sogggy"
        },
        "content": "4. NUSave sorts the expenditures and displays the updated list to the user."
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- 3a. NUSave detects an error in the entered command."
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - 3a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - 3a2. User enters new command."
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Steps 3a1-3a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \u003cbr/\u003e Use case resumes at step 4."
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC15 - Finding expenditures"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003eUse Case: UC08 - Finding expenditures"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003eActor: User"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003ePreconditions: User is on the budget page."
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003eMSS:"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. User enters the command to find expenditures in NUSave."
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. NUSave finds all expenditures matching the user input and displays the updated list of expenditures to user."
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003eUse case ends."
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "- 1a. NUSave detects an error in the entered command."
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - 1a1. NUSave shows an error message."
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - 1a2. User enters new command."
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \u003cbr\u003e Steps 1a1-1a2 are repeated until the command entered is correct."
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \u003cbr\u003e Use case resumes at step 2."
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "- 2a. NUSave detects that no expenditures were found."
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - 2a1. NUS displays an empty list view with a message noting that no expenditures matched the user input."
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC16 - Listing expenditures"
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr/\u003eUse Case: UC10 - Listing expenditures"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr/\u003ePreconditions: User is on the budget page."
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. User enters the command to list all expenditures in NUSave."
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. NUSave lists all existing expenditures in the current budget in memory, displaying them in the list view and "
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "shows the success message."
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cbr\u003eUse case ends."
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC17 - Undoing an action"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eUse Case: UC17 - Undoing an action"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003ePreconditions: User has just launched NUSave that contains a budget named \"demo\"."
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. User \u003cins\u003edeletes the \"demo\" budget (UC04)\u003c/ins\u003e."
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "2. NUSave deletes the \"demo\" budget and removes it from the list view."
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "3. User enters the undo command."
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "4. NUSave loads the state before the previous command and adds the \"demo\" budget into the list view."
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- 1a. User enters the undo command without deleting the \"demo\" budget."
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - 1a1. NUSave shows \"no action to undo\" error message."
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - 1a2. Use case resumes at step 1."
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Use Case: UC18 - Redoing an action"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "System: NUSave"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eUse Case: UC18 - Redoing an action"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eActor: User"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003ePreconditions: User has just launched NUSave that contains a budget named \"demo\"."
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003eMSS:"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. User \u003cins\u003eundoes the deletion of the \"demo\" budget (UC17)\u003c/ins\u003e."
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "2. NUSave loads the state before using the delete command and removes the \"demo\" budget from the list view."
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "3. User enters the redo command."
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "4. NUSave loads the state before using the undo command and adds the \"demo\" budget into the list view."
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cbr/\u003e Use case ends."
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- 1a. User enters the redo command without undoing any actions."
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - 1a1. NUSave shows \"no action to redo\" error message."
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - 1a2. Use case resumes at step 1."
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### Non-Functional Requirements"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. NUSave should work on any _mainstream OS_ as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. NUSave should be able to hold up to 1000 budgets and expenditures without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) "
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "should be able to accomplish most of the tasks at a faster speed compared to clicking with the mouse."
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "4. NUSave should serve only a single user at a time on a single client."
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "5. NUSave should not require an internet connection to run."
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "6. NUSave should have sufficient help messages such that a novice is able to learn to use the commands quickly."
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "7. NUSave should save its data locally."
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "8. NUSave should have proper error handling such that the application does not crash and the corresponding error"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "message is displayed to the user."
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "9. Features should be implemented such that they can undergo automated testing."
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "10. NUSave should have an intuitive User Interface such that a novice user should be able to understand"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "what the elements of the application represents."
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### Glossary"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Term | Explanation |"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| ---- | ----------- |"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Expenditure                 | Refers to a single item to be recorded in NUSave.                                                                                                                              "
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Budget                      | Refers to how NUSave stores related expenditures under one group. A budget can also hold additional information about this list of expenditures, such as the target limit of what is to be spent (i.e. threshold). "
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Main Page                   | Refers to the page that displays the list of budgets that is stored in NUSave.                                                                                                 "
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Budget Page                 | Refers to the page that displays the list of expenditures belonging in a specific budget that is stored in NUSave.                                                             "
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Threshold                   | Refers to the target limit that can be spent in that budget."
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| PlantUML                    | A software tool used by NUSave\u0027s team to render UML diagrams in this developer guide. "
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| NUS                         | Stands for National University of Singapore."
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| API                         | Stands for \u0027Application Programming Interface\u0027, which abstracts away underlying implementation and only exposes objects or methods a developer needs."
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| JSON                        | Stands for \u0027Javascript Standard Object Notation\u0027, which is a form of syntax used for storing data. "
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| CLI                         | Stands for **Command Line Interface**. CLI-based Applications (i.e. NUSave) focuses on processing commands in the form of text entered from the keyboard.                       "
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| GUI                         | Stands for **Graphical User Interface**. GUIs work as the communication channel between the program and the user. Users interact with NUSave through the GUI, on their devices. "
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| UML                         | Stands for \u0027Unified Modeling Diagram\u0027. A general-purpose, standardized modeling language used in the field of software engineering."
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| NFR                         | Stands for \u0027Non-functional Requirements\u0027, which specifies the constraints under which the system is developed and operated."
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Mainstream OS               | Stands for \u0027Mainstream Operating Systems\u0027, such as Windows, MacOS, Linux, Unix, OS-X."
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| MSS                         | Stands for \u0027Main Success Scenario\u0027, which describes the interaction for a given use case, assuming nothing goes wrong."
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 6.3. Instructions for Manual Testing"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Given below are instructions to test the application manually. These instructions should be complemented"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "with the user guide for comprehensive testing. The state of the application is assumed to contain some data"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "either sample data from when the application is first launched or a customised data set."
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### Launch and Shutdown"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. Launching the application"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "   1. Download the jar file and copy into an empty folder."
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "   2. Double-click the jar file.\u003cbr\u003e"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "   Expected: Shows the GUI with a set of sample budgets. The window size may not be optimum."
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "1. Saving window preferences"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "   2. Re-launch the application by double-clicking the jar file.\u003cbr\u003e"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### Add commands"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. Adding a budget"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisites: User is in the main page with multiple budgets in the list."
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test case: `create n/Temasek Hall Basketball`\u003cbr\u003e"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       Expected: A budget by the name of Temasek Hall Basketball is created with its budget threshold set to $0."
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       Details of the added budget is shown in the status message. The newly added budget is displayed as the first"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       item in the GUI list."
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       "
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    3. Test case: `create n/Temasek Hall Basketball p/1000`\u003cbr\u003e"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       Expected: A budget by the name of Temasek Hall Basketball is created with its budget threshold set to $1000."
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       Details of the added budget is shown in the status message. The newly added budget is displayed as the first"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       item in the GUI list."
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    4. Test case: `create`\u003cbr\u003e"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       Expected: No budget will be created. You will get an error message stating that the command format is invalid,"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       with details of the proper format accompanied by examples."
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       "
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    5. Test case: `create n/`\u003cbr\u003e"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       Expected: No budget will be created. You will get an error message stating that the name should only contain"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       alphanumeric characters and spaces, it should not be blank."
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "   "
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. Adding an expenditure"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisites: User is in the budget page with multiple expenditures in the list."
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test case: `add n/shirt p/15 t/clothing`\u003cbr\u003e"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       Expected: An expenditure with the name shirt, price of $15 and tag of clothing will be added into the current budget."
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       Details of the added expenditure is shown in the status message. The newly added expenditure is displayed as the first"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       item in the GUI list."
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "       "
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    3. Test case: `add n/shirt t/clothing`\u003cbr\u003e"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Expected: No expenditure will be created. You will get an error message stating that the command format is invalid,"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        with details of the proper format accompanied by examples."
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        "
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    4. Test case: `add n/shirt p/15 t/some of my favourite shirts`\u003cbr\u003e"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Expected: No expenditure will be created. You will get an error message stating that each tag is limited to 15"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        characters long."
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        "
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    5. Test cae: `add n/blue shirt p/15 t/clothing t/tops t/shopping t/blue`\u003cbr\u003e"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Expected: No expenditure will be created. You will get an error message stating that each"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expenditure can only have a maximum of 3 tags."
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        "
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### Delete Commands"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. Deleting a budget"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisites: User is in the main page with multiple budgets in the list."
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test case: `delete 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "      Expected: First budget is deleted from the list. Details of the deleted budget is shown in the status message."
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    3. Test case: `delete 0`\u003cbr\u003e"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      Expected: No budget is deleted. You will get an error message stating that the index is out of range and the valid "
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      range is from 1-100."
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    4. Test case: `delete`\u003cbr\u003e"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      Expected: No budget is deleted. You will get an error message stating that the index should be an integer."
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      "
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    5. Test case: `delete x`\u003cbr\u003e"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      Expected: No budget is deleted. You will get an error message stating that the index should be an integer."
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      "
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. Deleting an expenditure"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisites: User is in the budget page with multiple expenditures in the list."
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test case: `delete 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: First expenditure is deleted from the list. Details of the deleted expenditure is shown "
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    in the status message."
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    3. Test case: `delete 0`\u003cbr\u003e"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: No budget is deleted. You will get an error message stating that the index is out of range and the valid "
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          range is from 1-100."
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    4. Test case: `delete`\u003cbr\u003e"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: No budget is deleted. You will get an error message stating that the index should be an integer."
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          "
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    5. Test case: `delete x`\u003cbr\u003e"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: No budget is deleted. You will get an error message stating that the index should be an integer."
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      "
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### Edit Commands"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. Editing a budget"
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisites: User is in the main page with multiple budgets in the list."
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test case: `edit 1 n/Daily Expenses p/500`\u003cbr\u003e"
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: The first budget in the list will be edited to have the name \u0027Daily Expenses\u0027 and a budget threshold"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    of $500. This is assuming the first budget in the list had a different name with a different budget threshold."
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    3. Test case: `edit 1 n/Daily Expenses`\u003cbr\u003e"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: The first budget in the list will be edited to have the name \u0027Daily Expenses\u0027"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     while its budget threshold will remain the same. This is assuming the first budget in the list had a different name."
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     "
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    4. Test case: `edit 1 p/500`\u003cbr\u003e"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: The first budget in the list will be edited to have a budget threshold of $500. This is assuming the"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    first budget in the list had a different budget threshold."
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    5. Test case: `edit 0 p/300`\u003cbr\u003e"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: No budget will be edited. You will get an error message stating that the index is out of range and the valid"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    range is from 1-100."
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    6. Test case: `edit 1 p/-10`\u003cbr\u003e"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: No budget will be edited. You will get an error message stating that thresholds cannot be $0 or less. The valid"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    range of thresholds which is between $0.01 and $1,000,000 will be stated."
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. Editing an expenditure"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisites: User is in the budget page with multiple expenditures in the list."
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test case: `edit 1 n/blue shirt p/15 t/clothing`\u003cbr\u003e"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: The first expenditure in the current budget will be edited to have the name \u0027blue shirt\u0027, a price of $15"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    and a clothing tag. This is assuming that the first expenditure in the current budget had a different name, price "
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    and the tags clothing, shirt and shopping (`tags` will be overwritten)."
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    3. Test case: `edit 1 n/blue shirt`\u003cbr\u003e"
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: The first expenditure in the current budget will be edited to have the name `blue shirt`."
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    This is assuming that the first expenditure in the current budget had a different name."
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    4. Test case: `edit 1 p/15`\u003cbr\u003e"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: The first expenditure in the current budget will be edited to have the price of $15."
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    This is assuming that the first expenditure in the current budget had a different price."
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    5. Test case: `edit 0 n/blue shirt`\u003cbr\u003e"
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: No expenditure will be edited. You will get an error message stating that the index is out of range and the valid"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    range is from 1-100."
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    6. Test case: `edit 1 p/-10`\u003cbr\u003e"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: No expenditure will be edited. You will get an error message stating that prices cannot be $0 or less. The valid"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    range of prices which is between $0.01 and $10,000 will be stated."
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### Sort Commands"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. Sorting budgets"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisite: User is in the main page with multiple budgets in the list."
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test case: `sort name`\u003cbr\u003e"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: Current budgets in the GUI list will be sorted by name in alphabetical order."
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    3. Test case: `sort time`\u003cbr\u003e"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: Current budgets in the GUI list will be sorted by creation date, with the most recently created at the top."
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    If two budgets are created on the same day they will be further sorted by name in alphabetical order."
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    4. Test case: `sort test`\u003cbr\u003e"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: Current budgets will not be sorted. You will get an error message stating that the sort type is not supported."
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "   "
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. Sorting expenditures"
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisite: User is in the budget page with multiple expenditures in the list."
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test case: `sort name`\u003cbr\u003e"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: Current expenditures in the GUI list will be sorted by name in alphabetical order."
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    3. Test case: `sort time`\u003cbr\u003e"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: Current expenditures in the GUI list will be sorted by creation date, with the most recently created at the top."
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    If two expenditures are created on the same day they will be further sorted by name in alphabetical order."
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    4. Test case: `sort test`\u003cbr\u003e"
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: Current expenditures will not be sorted. You will get an error message stating that the sort type is not supported."
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### Find Commands"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. Finding Budgets"
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisite: User is in the main page with multiple budgets in the list."
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test case: `find NUS`\u003cbr\u003e"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: Budgets with names that contain the search term \u0027NUS\u0027 will be displayed in the GUI list."
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    3. Test case: `find`\u003cbr\u003e"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: You will get an error message stating that the search term should not be blank."
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. Finding Expenditures"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisite: User is in the budget page with multiple expenditures in the list."
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test case: `find shirt`\u003cbr\u003e"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: Expenditures in the current budget with names that contain the search term \u0027shirt\u0027 will be displayed in the GUI list."
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    3. Test case: `find`\u003cbr\u003e"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: You will get an error message stating that the search term should not be blank."
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### List Commands"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. Listing Budgets"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisite: User is in the main page with multiple budgets in the list. The `find` command was successfully used,"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    the GUI list currently only displays budgets containing \u0027NUS\u0027."
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test case: `list`\u003cbr\u003e"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: All budgets are now displayed in the GUI list."
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. Listing Expenditures"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Prerequisite: User is in the budget page with multiple expenditures in the list. The `find` command was successfully used,"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    the GUI list currently only displays expenditures containing `shirt`."
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    2. Test caes: `list`\u003cbr\u003e"
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: All expenditures are now displayed in the GUI list."
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### Universal Commands"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. Help Command"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    1. Test case: `help`\u003cbr\u003e"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Expected: Description, format and examples of all commands are displayed in the result box."
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### Opening a budget"
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. Prerequisite: User is in the main page with multiple budgets in the list."
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. Test case: `open 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Expected: Opens the first budget in the current GUI list of budgets. The GUI list now displays the expenditures within"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "the first budget."
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "3. Test case: `open -1`\u003cbr\u003e"
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Expected: You will get an error message stating that the current index is out of bounds and the correct range which is"
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "from 0-100."
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### Closing a budget"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. Prerequisite: User is in the budget page with multiple expenditures in the list."
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "2. Test case: `close`\u003cbr\u003e"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Expected: Closes the current budget and return back to the main page."
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### Redo Command"
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. Test case: `redo` (assuming that the `undo` command was used previously to undo a `create` command)\u003cbr\u003e"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Expected: The `create` command that was undone will be called again. The budget that was created using the `create`"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "command will be reflected in the GUI list."
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### Undo Command"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. Test case: `undo` (assuming that `create` command was the most recently called command)\u003cbr\u003e"
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Expected: The `create` command will be undone. The budget that was created will be removed from the GUI list as if the"
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "`create` command was not called."
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### Effort"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by all \u003c3)"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Throughout the development, our team shared the common goal of making NUSave an application that is intuitive, object-oriented "
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "sogggy"
        },
        "content": "and presentable. After devoting countless late nights both as a team and individually, we managed to pull through and create"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "sogggy"
        },
        "content": "a product that we are proud of. Amassing over 10,000 lines of code combined, we had to adhere to strict deadlines, cultivate "
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "sogggy"
        },
        "content": "a culture of open communication and proactively support one another. Aside from the weekly official meetings, we frequently "
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "sogggy"
        },
        "content": "met up to conduct code reviews and pair programming to ensure that everyone was on the same page. "
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "sogggy"
        },
        "content": "To enable navigation between pages, we had to restructure a large portion of AB3 so that NUSave incorporates the concept of"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "sogggy"
        },
        "content": "having states. As such, we implemented a new architectural `State` component to keep track of what page the user is on and reflect the respective page view."
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "sogggy"
        },
        "content": "To fulfil the functional requirements of NUSave, an additional layer of data was integrated. On top of the one to many relationship between `Nusave`"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "sogggy"
        },
        "content": "and `Budget`, `Budget` also has a one to many relationship with `Expenditure`."
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "sogggy"
        },
        "content": "To implement the undo and redo commands, we had to come up with our own version of a doubly-linked list, `Node\u003cT\u003e`, as well as"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "sogggy"
        },
        "content": "its own iterator, `HistoryManager\u003cT\u003e`. Furthermore, not only the data had to be cached, but also the state of NUSave in `VersionedNusave`."
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Coding aside, we placed an equal emphasise on UI/UX."
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Firstly, we revamped the GUI entirely. Taking into consideration colour consistency, design trends and ease of navigation,"
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "sogggy"
        },
        "content": "we used Figma to generate a mock-up for our reference throughout the development. Despite the limitations of JavaFX and our knowledge in CSS, we were successful"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "sogggy"
        },
        "content": "in replicating our ideal design."
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "sogggy"
        },
        "content": "To make our application more dynamic, we researched on numerous APIs and narrowed down to using JavaFX\u0027s `Property` and `Bindings` interfaces."
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Through countless trial and errors, we managed to render NUSave\u0027s UI components dynamically while adhering to OO principles."
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Finally, much effort was put into ensuring that our documentation was organised and pleasant to read."
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "sogggy"
        },
        "content": "We had meetings to standardise every section in terms of language, structure and diagrams. After multiple iterations,"
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "sogggy"
        },
        "content": "consistency was achieved in both our user and developer guides."
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 407,
      "sogggy": 350,
      "yu-ming-chen": 235,
      "davidliew9": 351,
      "wenhaogoh": 268,
      "-": 194
    }
  },
  {
    "path": "docs/SettingUp.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: Setting up and getting started"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "### 1. Prerequisites"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. **JDK 11** or above"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "2. **IntelliJ** IDE  (Highly recommended)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e IntelliJ by default has Gradle and JavaFx plugins installed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e Do not disable them. If you have disabled them, go to `File` \u003e `Settings` \u003e `Plugins` to re-enable them."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "### 2. Setting up the project in your computer"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. First, **fork** this repo, and **clone** the fork into your computer."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003eNote: Importing a Gradle project is slightly different from importing a normal Java project."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "### 3. Verify the setup"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Run the `seedu.address.Main` and try a few commands."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   1. [Run the tests](Testing.md) to ensure they all pass."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "### 4. Before writing code"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Configure the coding style**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/checkstyle.html) to set up IDEA\u0027s coding style to match ours."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Set up CI**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Learn the design**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [NUSave’s architecture](DeveloperGuide.md)."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Do the tutorials**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "   These tutorials will help you get acquainted with the codebase."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   * [Tracing code](tutorials/TracingCode.md)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   * [Removing fields](tutorials/RemovingFields.md)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   * [Adding a new command](tutorials/AddRemark.md)"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 15,
      "-": 39
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: User Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. [Overview](#1-overview)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [1.1. Introduction](#11-introduction)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [1.2. Purpose](#12-purpose)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "2. [About the User Guide](#2-about-the-user-guide)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [2.1. Symbols](#21-symbols)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [2.2. Syntax format](#22-syntax-format)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "3. [GUI Layout](#3-gui-layout)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [3.1. Main page view](#31-main-page-view)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [3.2. Budget page view](#32-budget-page-view)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "4. [Quick Start](#4-quick-start)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "5. [Commands](#5-commands)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [5.1. Universal commands](#51-universal-commands)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.1.1. View help: `help`](#511-view-help-help)   "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.1.2. Exit NUSave: `exit`](#512-exit-nusave-exit)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [5.2. Main page commands](#52-main-page-commands)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.2.1. Creating a budget: `create`](#521-creating-a-budget-create)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.2.2. Deleting a budget: `delete`](#522-deleting-a-budget-delete)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.2.3. Editing a budget: `edit`](#523-editing-a-budget-edit)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.2.4. Finding budgets: `find`](#524-finding-budgets-find)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.2.5. Listing budgets: `list`](#525-listing-budgets-list)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.2.6. Sorting budgets: `sort`](#526-sorting-budgets-sort)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.2.7. Clearing budgets: `clear`](#527-clearing-budgets-clear)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.2.8. Opening a budget: `open`](#528-opening-a-budget-open)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [5.3. Budget page commands](#53-budget-page-commands)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.3.1. Adding an expenditure: `add`](#531-adding-an-expenditure-add)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.3.2. Deleting an expenditure: `delete`](#532-deleting-an-expenditure-delete)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.3.3. Editing an expenditure: `edit`](#533-editing-an-expenditure-edit)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.3.4. Finding expenditures: `find`](#534-finding-expenditures-find)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.3.5. Listing expenditures: `list`](#535-listing-expenditures-list)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.3.6. Sorting expenditures: `sort`](#536-sorting-expenditures-sort)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        * [5.3.7. Closing a budget: `close`](#537-closing-a-budget-close)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "6. [Command Summary](#6-command-summary)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [6.1. Universal commands](#61-universal-commands)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [6.2. Main page commands](#62-main-page-commands)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - [6.3. Budget page commands](#63-budget-page-commands)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "7. [Glossary](#7-glossary)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "8. [FAQ](#8-faq) "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 1. Overview"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Welcome to the NUSave User Guide! In this section, you will be given an overview of what NUSave is about"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "and what you can get out of reading this document."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 1.1. Introduction"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Are you a **university student who stays on campus** and has difficulty managing your expenses?"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Are you tired of having to look through countless spreadsheets and memos just to figure out how much you have spent this month?"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Do you wish there exists a desktop application that can help you organise, track and manage all your expenses?"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Look no further, NUSave is just the tool for you!"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Built by 5 university students staying on campus, we understand **the difficulties of having to manage multiple budgets**,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "be it for your daily expenses, school projects or club activities, amidst your busy schedule. NUSave aims to help alleviate"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "the hassle that comes along with managing multiple budgets by providing a **one-stop solution** to all your problems."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "With NUSave, you can **create, edit and delete [budgets](#7-glossary) and [expenditures](#7-glossary)**, as well as **generate statistics"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "based on your entries** to gain useful insights regarding your spending habits."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "What\u0027s more, NUSave has:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- a **[Command Line Interface (CLI)](#7-glossary)** catered to those who can type fast and prefer to use a keyboard. In other words, you"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "navigate the application and execute instructions by keying in text-based commands into the [command box](#3-gui-layout) provided."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- a **[Graphical User Interface (GUI)](#7-glossary)** to provide you with a visually appealing and aesthetic user experience. Essentially,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "the current status of the application is reflected live on-screen so what you see is what you get!"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 1.2. Purpose"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The purpose of this document is to serve as a guide for new users on how to get started with NUSave as well as"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "to provide a detailed reference for veteran users on how to use the different commands that are available within NUSave."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 2. About the User Guide"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "In this section, you will learn what the different symbols and notations (that can be found this in user guide) mean."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 2.1. Symbols"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "When reading this user guide, various symbols may appear occasionally to draw your attention to important information."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The meaning for each symbol is as follows:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Symbol | Meaning "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "-------| ------------ "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " ⚠️    | This symbol indicates that there is something important for you to take note of."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " 📕    | This symbol indicates that there is additional information you may find useful."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " ✏️   | This symbol indicates that an example is provided."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 2.2. Syntax format"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The syntax of the commands in this user guide are to be interpreted in the following manner:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format         | Meaning                | Examples "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "-------------- | ---------------------- | ----"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`lower_case/`  | **Prefix**             | `n/`, `p/`, `t/`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`UPPER_CASE`   | **Parameter**          | `NAME`, `THRESHOLD`, `PRICE`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "`[UPPER_CASE]` | **Optional parameter** | `[p/THRESHOLD]`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e ⚠️ There **cannot be any spaces** within a prefix. For example, `n /` is an invalid prefix."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e ⚠️ If a parameter **does not have any prefixes**, it **must** be the **first parameter**."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e For example, `edit 1 n/NUS Computing Club p/1000` is a valid command but `edit n/NUS Computing Club p/1000 1` is an invalid command."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e ⚠️ If an invalid prefix is entered, it will be treated as content for the previous parameter."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 📕 Parameters with prefixes can be entered in **any order**."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e For example, `create n/Temasek Hall Student Council p/1200` is equivalent to `create p/1200 n/Temasek Hall Student Council`."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 3. GUI Layout"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "In this section, you will be given an introduction to the layout of NUSave\u0027s Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will help you better understand what each component that you observe on-screen represents."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "There are a total of two pages that you can navigate to when using NUSave:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- Main page"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- Budget page"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 3.1. Main Page View"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You will be directed to the main page upon launching NUSave. On this page, you can see the list of"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "budgets that are currently stored in NUSave."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Here is how the main page should look like:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of main page view](images/GuiLayoutScreenShots/3_1_1_mainPage.png)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.1.1. Example of the main page view."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Below is a table containing all the components that can be found on the main page accompanied by their respective purposes:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Component      | Purpose"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "-------------- | -------"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Command Box    | A text field for you to enter your desired commands."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Result Display | A **scrollable** panel that displays the response messages of a command after it has been executed."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Info Box       | A panel that displays the current date and time."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Title          | A text field that displays the name of the application."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Budget Card    | A card that represents a budget stored in NUSave. It contains the index and name of the budget as well as the total number of expenditures it contains."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "List View      | A **scrollable** panel that can hold multiple budget cards."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Here is the breakdown of an individual budget card:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of budget card](images/GuiLayoutScreenShots/3_1_2_budgetCard.png)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.1.2. Example of a budget card."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Below is a table containing all the components that can be found in a budget card accompanied by their respective purposes:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Component         | Purpose"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "----------------- | -------"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Index             | The index used to reference this budget."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Name              | The name of this budget."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Expenditures Count | The total number of expenditures stored in this budget."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 3.2. Budget Page View"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You will be directed to a budget page when you use the [open budget command](#528-opening-a-budget-open)."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "On this page, you can see the list of expenditures that are currently stored in the budget that you have opened."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Here is how a budget page should look like:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of budget page view](images/GuiLayoutScreenShots/3_2_1_budgetPage.png)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.2.1. Example of a budget page view."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Below is a table containing all the components that can be found on a budget page accompanied by their respective purposes:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Component | Purpose"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "--------- | -------"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Command Box | A text field for you to enter your desired commands."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Result Display | A **scrollable** panel that displays the response messages of a command after it has been executed."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Info Box | A panel that displays the total amount you have spent so far based on the expenditures added to the budget. It will also display the threshold of the budget if it has one."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Title | A text field that displays the name of the budget that is currently open."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Expenditure Card | A card that represents an expenditure stored in the budget that is currently open. It contains the index, name, tags and price of the expenditure."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "List View | A **scrollable** panel that can hold multiple expenditure cards."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Here is the breakdown of an individual expenditure card:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of expenditure card](images/GuiLayoutScreenShots/3_2_2_expenditureCard.png)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.2.2. Example of an expenditure card."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Below is a table containing all the components that can be found in an expenditure card accompanied by their respective purposes:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Component     | Purpose"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sogggy"
        },
        "content": "------------- | -------"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Index         | The index used to reference this expenditure."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Name          | The name of this expenditure."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Creation Date | The date at which this expenditure is added."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Tags          | The tags that this expenditure has been assigned."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Price         | The price of this expenditure."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 4. Quick Start"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "If this is your first time using NUSave, follow these simple steps to jump straight into the action:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. Ensure that you have Java `11` or above installed in your computer."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "2. Download the latest `NUSave.jar` from [here](https://github.com/AY2021S1-CS2103T-T11-4/tp/releases)."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "3. Copy the file to the folder you want to use as the *home folder* for NUSave."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "4. Double-click the file to start the application. A GUI similar to [Figure 3.1.1](#31-main-page-view) should appear in a few seconds."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 📕 If the application does not start after double-clicking the file, you can troubleshoot by doing the following:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003e \u003cins\u003eFor Windows \u003ca href\u003d\"#7-glossary\"\u003eOS\u003c/a\u003e users:\u003c/ins\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003e 1. Launch [command prompt](#7-glossary) and navigate to the path of the home folder for NUSave."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 2. Enter the following command: `java -jar nusave.jar` as seen in Figure 4.1 below:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e ![Example of launching NUSave using command prompt](images/QuickStartScreenShots/4_1_commandPrompt.png)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e Figure 4.1. Example of launching NUSave using command prompt."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e \u003cins\u003eFor Mac OS users:\u003c/ins\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003e 1. Launch [terminal](#7-glossary) and navigate to the path of the home folder for NUSave."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 2. Enter the following command: `java -jar nusave.jar` as seen in Figure 4.2 below:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e ![Example of launching NUSave using terminal](images/QuickStartScreenShots/4_2_terminal.png)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e Figure 4.2. Example of launching NUSave using terminal."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "5. Congratulations, you have successfully launched NUSave!"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 📕 If you are launching the application for the first time, a set of sample data will be created for you."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e Use the [clear command](#527-clearing-budgets-clear) to purge any existing sample data."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "6. Type your desired command into the command box and press the enter button to execute it. Below is a series of commands that you can try:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - `create n/Daily Expenses`: Creates a budget with the name \"Daily Expenses\"."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - `open 1`: Opens the budget located at index 1."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - `close`: Closes the budget that is open and return to the main page."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - `help`: Shows the list of commands currently available."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - `exit`: Exits the app."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "7. Refer to the [commands section](#5-commands) below for the details of each command."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 5. Commands"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "In this section, you will learn about the commands that are available in NUSave and how to use them."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 5.1. Universal commands"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The following commands in this subsection are available on any pages."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.1.1. View help: `help`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You can use this command to view a list of commands that are currently available."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `help`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will cause the details of each available command along with its syntax to appear on the result display"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "as seen in Figure 5.1.1.1 below:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of help command](images/CommandScreenShots/5_1_1_1_help.png)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 5.1.1.1. Example of using the help command on the main page."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.1.2. Exit NUSave: `exit`"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You can use this command to exit from the application."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `exit`"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will exit the application."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 5.2. Main page commands"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The following commands in this subsection are only available on the main page."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.2.1. Creating a budget: `create`"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Format: `create n/NAME [p/THRESHOLD]`"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "------ | ---------- | ----------- | --------"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " n/    | `NAME`     | Required    | Name of the budget"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " p/    | `THRESHOLD`| Optional    | Target threshold of the budget"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You can use this command to create a new budget with the given `NAME` and `THRESHOLD`."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "When you create a new budget, it will be displayed as a budget card in the list view."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e 📕 You can create a budget with no threshold to simply track your total expenses."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `NAME` is limited to a maximum of 50 characters."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `THRESHOLD` must be a positive value lesser than $1,000,000."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ There can only be a maximum of 100 budgets."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `create n/Temasek Hall Student Council p/1200`"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will create a new budget called \"Temasek Hall Student Council\" with a threshold value of $1200"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "as seen in Figure 5.2.1.1 below:"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of create budget command](images/CommandScreenShots/5_2_1_1_createBudget.png)"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 5.2.1.1. Example of using the create budget command."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.2.2. Deleting a budget: `delete`"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "------ | ---------- | ----------- | ------"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\\-     | `INDEX`    | Required    | Index of the budget to be deleted"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You can use this command to delete the budget at the given `INDEX`."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "When you delete a budget, its budget card will be removed from the list view."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " "
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " \u003e ⚠️ Exercise caution when using the delete command as it is irreversible!"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `INDEX` must be between 1-100 since there can only be a maximum of 100 budgets."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `delete 1`"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will delete the budget at index 1 as seen in Figure 5.2.2.1 below:"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of delete budget command](images/CommandScreenShots/5_2_2_1_deleteBudget.png)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 5.2.2.1. Example of using the delete budget command."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.2.3. Editing a budget: `edit`"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Format: `edit INDEX [n/NAME] [p/THRESHOLD]`"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "-------| ---------- | ----------- | ------"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " \\-    | `INDEX`    | Required    | Index of the budget to be edited"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " n/    | `NAME`     | Optional    | Name of the budget to be edited to"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " p/    | `THRESHOLD`| Optional    | Threshold of the budget to be edited to"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You can use this command to edit the budget at the given `INDEX`."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "When you edit a budget, the information on its budget card will be updated immediately."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " \u003e ⚠️ Although both `NAME` and `THRESHOLD` fields are optional, the command must include at least one of these prefixes."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `INDEX` must be between 1-100 since there can only be a maximum of 100 budgets."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `NAME` is limited to a maximum of 50 characters."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `THRESHOLD` must be a positive value lesser than $1,000,000."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `edit 2 n/NUS Computing Club`"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will rename the budget at index 2 to \"NUS Computing Club\" as seen in Figure 5.2.3.1 below:"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of edit budget command](images/CommandScreenShots/5_2_3_1_editBudget.png)"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 5.2.3.1. Example of using the edit budget command."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.2.4. Finding budgets: `find`"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " ------ | ---------- | ----------- | --------"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " \\-     |  `KEYWORD` | Required    | Keyword to be used for searching"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You can use this command to find budgets whose names contain the given `KEYWORD`."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "sogggy"
        },
        "content": "When you find budgets, the list view will filter to only display budgets whose names contains the given `KEYWORD`."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " \u003e 📕 The filter is case-insensitive."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "sogggy"
        },
        "content": " \u003e"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " \u003e 📕 If no budgets are displayed, it means that none of the budgets matches your search term. "
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "sogggy"
        },
        "content": " \u003e "
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " \u003e 📕 You can use the [list budgets command](#525-listing-budgets-list) to display all budgets again."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `find Temasek Hall`"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will find all budgets with the keyword \u0027Temasek Hall\u0027 in the name of the budget as seen in Figure 5.2.4.1 below:"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of find budgets command](images/CommandScreenShots/5_2_4_1_findBudgets.png)"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 5.2.4.1. Example of using the find budgets command."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.2.5. Listing budgets: `list`"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You can use this command to display all budgets."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "When you list budgets, the list view will display all budgets that are stored in NUSave."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " \u003e 📕 This command is usually used after using the [find budgets command](#524-finding-budgets-find)."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `list`"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will display all budgets that are currently stored in NUSave as seen in Figure 5.2.5.1 below:"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of list budgets command](images/CommandScreenShots/5_2_5_1_listBudgets.png)"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 5.2.5.1. Example of using the list budgets command."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.2.6. Sorting budgets: `sort`"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `sort TYPE`"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " ------ |----------- | ----------- | ------"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " \\-     | `TYPE`     |   Required  | Can be either `time` or `name`"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You can use this command to sort your budgets by the given `TYPE`."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "sogggy"
        },
        "content": "There are two ways you can sort your budgets:"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- By their creation date with the most recently created budget at the top."
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 📕 Budgets that are created on the same date will be sorted in alphabetical order."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    "
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- By their name in alphabetical order."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e 📕 Newly created budgets will still be added to the top."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e 📕 Budgets will be resorted by creation date upon reopening of NUSave."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `sort name`"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This will sort the budgets (that are currently displayed) by their name in alphabetical order as seen in Figure 5.2.6.1 below:"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of sort budgets command](images/CommandScreenShots/5_2_6_1_sortBudgets.png)"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 5.2.6.1. Example of using the sort budgets command."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.2.7. Clearing budgets: `clear`"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You can use this command to delete all existing budgets."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e 📕 This command is usually used to purge the sample data that is created when you launch the application for the first time."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e ⚠️ Exercise caution when using the clear command as it is irreversible!"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `clear`"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will delete all budgets that are currently stored in NUSave as seen in Figure 5.2.7.1 below:"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of clear budgets command](images/CommandScreenShots/5_2_7_1_clearBudgets.png)"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 5.2.7.1. Example of using the clear budgets command."
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.2.8. Opening a budget: `open`"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `open INDEX`"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " ------ | ---------- | ----------- | ------"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " \\-     | `INDEX`    | Required    | Index of the budget to be opened"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You can use this command to open the budget at the given `INDEX`."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `INDEX` must be between 1-100 since there can only be a maximum of 100 budgets."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "sogggy"
        },
        "content": "When you open a budget, you will be directed to its budget page."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `open 1`"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will open the budget at index 1 as seen in Figure 5.2.8.1 below:"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of open budget command](images/CommandScreenShots/5_2_8_1_openBudget.png)"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 5.2.8.1 Example of using the open budget command."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 5.3. Budget page commands"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The following commands in this subsection are only available on the budget page."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.3.1. Adding an expenditure: `add`"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `add n/NAME p/PRICE [t/TAG]`"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "sogggy"
        },
        "content": "-------| -----------| ------------| ------"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "sogggy"
        },
        "content": " n/    | NAME       | Required    | Name of the expenditure"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " p/    | PRICE      | Required    | Price of the expenditure"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "sogggy"
        },
        "content": " t/    | TAG        | Optional    | Additional information about the expenditure"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "sogggy"
        },
        "content": "You can use this command to add a new expenditure with the given `PRICE` and optional `TAG` within a budget."
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `INDEX` must be between 1-100 since there can only be a maximum of 100 expenditures."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `NAME` is limited to a maximum of 50 characters."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `PRICE` must be a positive value that is at most $10,000."
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `TAG` is limited to a maximum of 15 characters and a total of 3 tags."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "sogggy"
        },
        "content": "When you add a new expenditure, it will be displayed as an expenditure card in the list view."
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `add n/Graphic Calculator p/199.90 t/Math`"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This will add a new expenditure called \"Graphic Calculator\" with a price of $199.90 and a \"Math\" tag as seen in "
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 5.3.1.1. below:"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of add expenditure command](images/CommandScreenShots/5_3_1_1_addExpenditure.png)"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 5.3.1.1. Example of using the add expenditure command."
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.3.2. Deleting an expenditure: `delete`"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "sogggy"
        },
        "content": " -----------| ------------| ------"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Index | Required | Index of the expenditure"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "sogggy"
        },
        "content": "You can use this command to delete the expenditure at the given `INDEX`."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "sogggy"
        },
        "content": "When you delete an expenditure, its expenditure card will be removed from the list view."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " \u003e ⚠️ Exercise caution when using the delete command as it is irreversible!"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `INDEX` must be between 1-100 since there can only be a maximum of 100 expenditures."
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `delete 2`"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This will delete the budget at index 2 as seen in Figure 5.3.2.1 below:"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of delete expenditure command](images/CommandScreenShots/5_3_2_1_deleteExpenditure.png)"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 5.3.2.1. Example of delete expenditure command"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.3.3. Editing an expenditure: `edit`"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(Contributed by David)"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Format: `edit INDEX [n/NAME] [p/PRICE]`"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "sogggy"
        },
        "content": "-------| -----------| ------------| ------"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\\-     | `INDEX`    | Required    | Index of the expenditure displayed on NUSave"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "sogggy"
        },
        "content": " n/    | `NAME`     | Optional    | Name of the expenditure to be edited to"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "sogggy"
        },
        "content": " p/    | `PRICE`    | Optional    | Price of the expenditure to be edited to"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " t/    | `TAG`      | Optional    | Tags of the expenditure to be edited to"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "sogggy"
        },
        "content": "You can use this command to edit the expenditure at the given `INDEX`."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "sogggy"
        },
        "content": "When you edit a expenditure, the information on its expenditure card will be updated immediately."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " \u003e ⚠️ Although both `NAME` and `PRICE` fields are optional, the command must include at least one of these prefixes."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `INDEX` must be between 1-100 since there can only be a maximum of 100 expenditures."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `NAME` is limited to a maximum of 50 characters."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `PRICE` must be a positive value that is at most $10,000."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e ⚠️ The `TAG` is limited to a maximum of 15 characters and a total of 3 tags."
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `edit 1 n/Long Sleeve Shirt p/20`"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This will rename the expenditure at index 2 to \"Long Sleeve Shirt\" with price \"$20\" as seen in Figure 5.3.3.1 below:"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of edit expenditure command](images/CommandScreenShots/5_3_3_1_editExpenditure.png)"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 5.3.3.1. Example of edit expenditure command"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.3.4. Finding expenditures: `find`"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "sogggy"
        },
        "content": "-------| ---------- | ----------- | ------"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\\-     | `KEYWORD`     | Required    | Keyword / Keyphrase to be searched"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "sogggy"
        },
        "content": "You can use this command to find expenditures in the current budget whose names contain the given `KEYWORD`. "
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "sogggy"
        },
        "content": "When you find expenditures, the list view will filter to only display expenditures whose names contains the given `KEYWORD`."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "sogggy"
        },
        "content": " \u003e 📕 The filter is case-insensitive."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "sogggy"
        },
        "content": " \u003e"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "sogggy"
        },
        "content": " \u003e 📕 If no expenditures are displayed, it means that none of the expenditures matches your search term. "
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "sogggy"
        },
        "content": " \u003e"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "sogggy"
        },
        "content": " \u003e 📕 You can use the [list expenditures command](#535-listing-expenditures-list) to display all expenditures again."
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `find sock`"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This will find all expenditures with the keyword \u0027sock\u0027 in the name of the expenditure as seen in Figure 5.3.4.1 below:"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "sogggy"
        },
        "content": "![Example of find expenditures command](images/CommandScreenShots/5_3_4_1_findExpenditures.png)"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 5.3.4.1. Example of using the find expenditures command."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.3.5. Listing expenditures: `list`"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "sogggy"
        },
        "content": "You can use this command to list all expenditures in the current budget."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "sogggy"
        },
        "content": "When you list expenditures, the list view will display all expenditures belonging to the budget that is currently open."
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "sogggy"
        },
        "content": " \u003e 📕 This command is usually used after using the [find expenditure command](#534-finding-expenditures-find)."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `list`"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This will display all existing expenditures in the current budget as seen in Figure 5.3.5.1 below:"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of list expenditures command](images/CommandScreenShots/5_3_5_1_listExpenditures.png)"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 5.3.5.1. Example of using the list expenditures command."
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.3.6. Sorting expenditures: `sort`"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `sort TYPE`"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "sogggy"
        },
        "content": " ---------- | ----------- | ------"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "sogggy"
        },
        "content": " `TYPE`     | Required    | Types of sort: `time`, `name`"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "sogggy"
        },
        "content": "You can use this command to sort your expenditures (within a budget) by the given `TYPE`."
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "sogggy"
        },
        "content": "There are two ways you can sort your expenditures:"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- By their creation date with the most recently created budget at the top."
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003e 📕 Budgets that are created on the same date will be sorted in alphabetical order."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    "
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- By their name in alphabetical order."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e 📕 Newly created expenditures will still be added to the top."
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e 📕 Expenditures will be resorted by creation date upon reopening of NUSave."
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `sort name`"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This will sort the expenditures (that are currently displayed) by their name in alphabetical order as seen in Figure 5.3.6.1 below:"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of sort expenditures command](images/CommandScreenShots/5_3_6_1_sortExpenditures.png)"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 5.3.6.1. Example of using the sort expenditures command."
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 5.3.7. Closing a budget: `close`"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `close`"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "sogggy"
        },
        "content": "You can use this command to close a budget."
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "sogggy"
        },
        "content": "By closing a budget, you will now be directed to the main page."
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `close`"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This will close the current budget as seen in Figure 5.3.7.1 below:"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "sogggy"
        },
        "content": "![Example of close budget command](images/CommandScreenShots/5_3_7_1_closeBudget.png)"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 5.3.7.1. Example of using the close budget command."
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 6. Command Summary"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 6.1. Universal commands"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| **Action**  | **Format** | **Examples** "
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "sogggy"
        },
        "content": "|------------ |------------|--------------"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| View Help   | `help`     | \\-           "
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Exit NUSave | `exit`     | \\-           "
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 6.2. Main page commands"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| **Action**        | **Format**                          | **Examples**                                                     "
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "sogggy"
        },
        "content": "|-------------------|-------------------------------------|------------------------------------------------------------------"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Create a budget   | `create n/NAME [p/THRESHOLD]`       | `create n/Daily Expenses`, \u003cbr\u003e`create n/Project Work p/100`     "
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Delete a budget   | `delete INDEX`                      | `delete 1`                                                       "
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Edit a budget     | `edit INDEX [n/NAME] [p/THRESHOLD]` | `edit 1 n/Hall Council`, \u003cbr\u003e`edit 2 n/NUS Computing Club p/1000`"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "| Find budgets      | `find KEYWORD`                      | `find Temasek`                                        "
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| List all budgets  | `list`                              | \\-                                                               "
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Sort all budgets  | `sort TYPE`                         | `sort time`, \u003cbr\u003e`sort name`                                     "
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Clear all budgets | `clear`                             | \\-                                                               "
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Open a budget     | `open INDEX`                        | `open 1`                                                         "
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 6.3. Budget page commands"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| **Action**            | **Format**                      | **Examples**                                           "
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "sogggy"
        },
        "content": "|-----------------------|---------------------------------|--------------------------------------------------------"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Add an expenditure    | `add n/NAME p/PRICE [t/TAG]`    | `add n/TShirt p/20`, \u003cbr\u003e`add n/Breakfast p/10 t/food` "
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Delete an expenditure | `delete INDEX`                  | `delete 1`                                             "
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Edit an expenditure   | `edit INDEX [n/NAME] [p/PRICE]` | `edit 2 n/NikeShirt`, \u003cbr\u003e `edit 2 p/28`               "
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Find expenditures     | `find KEYWORD`                  | `find shirt`                                           "
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| List all expenditures | `list`                          | \\-                                                     "
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Sort all expenditures | `sort TYPE`                     | `sort time`, \u003cbr\u003e`sort name`                           "
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Close a budget        | `close`                         | \\-                                                     "
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 7. Glossary  "
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "sogggy"
        },
        "content": "(Contributed by Song Yu)"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "sogggy"
        },
        "content": "You can find the meanings of some special keywords applicable to NUSave over here."
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Term                        | Explanation                                                                                                                                                                    "
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "sogggy"
        },
        "content": "|---------------------------- |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| CLI                         | Short for **Command Line Interface**. CLI-based Applications (i.e. NUSave) focuses on processing commands in the form of text entered from the keyboard.                       "
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| GUI                         | Short for **Graphical User Interface**. GUIs work as the communication channel between the program and the user. Users interact with NUSave through the GUI, on their devices. "
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| OS                          | Short for **Operating Systems**. The underlying computer program that allows users to interact with a computer. It manages the hardware components and software resources of a computer for the user.           "
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Command Prompt (Windows OS) | A CLI application proprietary to Windows OS devices, where users can run commands on a Windows device by entering typed commands.                                              "
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Terminal (Mac OS)           | A CLI application proprietary to Mac OS devices, where users can run commands on a Mac device by entering typed commands.                                                      "
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Expenditure                 | Refers to a single item to be recorded in NUSave.                                                                                                                              "
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Budget                      | Refers to how NUSave stores related expenditures under one group. A budget can also hold additional information about this list of expenditures, such as the target limit of what is to be spent (i.e. threshold). "
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Main Page                   | Refers to the page that displays the list of budgets that is stored in NUSave.                                                                                                 "
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Budget Page                 | Refers to the page that displays the list of expenditures belonging in a specific budget that is stored in NUSave.                                                             "
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "sogggy"
        },
        "content": "| Threshold                   | Refers to the target limit that can be spent in that budget."
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 8. FAQ"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: How do I transfer my data to another computer?"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: Install the application on another computer and overwrite the empty data file it creates with the .json file that contains the data of your previous NUSave folder."
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: Where is my save data stored?"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: They are stored in the `data` folder where the NUSave application is found."
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: How do I make backups of my data in NUSave?"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: You can copy and paste the `data` folder located in the NUSave home folder to somewhere safe and easy to remember. To restore the backup, copy the entire folder back into the same home folder and overwrite the existing folder."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: How do I delete all my data in NUSave?"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: You can delete the `data` folder in the NUSave home folder."
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: Will my data be compromised?"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: Don\u0027t worry! All data in NUSave is stored on your local device and will not be transferred over the web."
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Q**: Does this application require an internet connection to run?"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**A**: NUSave does not access any web services and can be run completely offline."
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 64,
      "sogggy": 148,
      "yu-ming-chen": 110,
      "davidliew9": 30,
      "wenhaogoh": 318,
      "-": 76
    }
  },
  {
    "path": "docs/diagrams/ArchitectureDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include \u003coffice/Concepts/globe_internet\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "!include \u003coffice/Concepts/documents\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "!include \u003coffice/Users/user\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Package \" \"\u003c\u003cRectangle\u003e\u003e{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    Class UI UI_COLOR"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    Class Logic LOGIC_COLOR"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    Class Storage STORAGE_COLOR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    Class Model MODEL_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Class State STATE_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    Class Main #grey"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    Class Commons LOGIC_COLOR_T2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Class \"\u003c$user\u003e\" as User MODEL_COLOR_T2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Class \"\u003c$documents\u003e\" as File UI_COLOR_T1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "UI -[#green]\u003e Logic"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "UI -right[#green]-\u003e Model"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Logic -[#blue]-\u003e Storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "Logic -down[#blue]-\u003e Model"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Model --\u003e State"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Main -[#grey]-\u003e UI"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Main -[#grey]-\u003e Logic"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Main -[#grey]-\u003e Storage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "Main -up[#grey]-\u003e Model"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Storage .right[STORAGE_COLOR].\u003eFile"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "User ..\u003e UI"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "sogggy": 2,
      "-": 31
    }
  },
  {
    "path": "docs/diagrams/ArchitectureSequenceDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Actor User as user USER_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \":UI\" as ui UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \":Logic\" as logic LOGIC_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \":Model\" as model MODEL_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \":Storage\" as storage STORAGE_COLOR"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Participant \":State\" as state #Orange"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "user -[USER_COLOR]\u003e ui : \"delete 1\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "activate ui UI_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "activate logic LOGIC_COLOR"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "logic -[LOGIC_COLOR]\u003e model : deleteExpenditure(toDelete)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "logic -[LOGIC_COLOR]\u003e model : deleteBudget(b)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "activate model MODEL_COLOR"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "model -[MODEL_COLOR]\u003e state : setTotalExpenditure(newExpenditure)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate state #Orange"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "state -[#Orange]-\u003e model"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate state"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "model -[MODEL_COLOR]-\u003e logic"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate model"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "logic -[LOGIC_COLOR]\u003e storage : saveNUSave(NUSave)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "activate storage STORAGE_COLOR"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "storage -[STORAGE_COLOR]\u003e storage : Save to file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "activate storage STORAGE_COLOR_T1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "storage --[STORAGE_COLOR]\u003e storage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate storage"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "storage --[STORAGE_COLOR]\u003e logic"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate storage"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "logic --[LOGIC_COLOR]\u003e ui"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate logic"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "ui--[UI_COLOR]\u003e user"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate ui"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 2,
      "sogggy": 7,
      "-": 36
    }
  },
  {
    "path": "docs/diagrams/DeleteCommandActivityDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": "start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": ":User executes delete command: delete 1;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ":Logic executes delete command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "if () then ([is the main page])"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    :MainPageParser is created\\nand parses the command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    if () then ([delete syntax is valid])"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    :parses the delete command : delete 1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    :deletes budget based on index specified;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    else ([syntax is invalid])"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    :throw a parser exception;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    endif"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "else ([is a budget page])"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    :BudgetPageParser is created\\nand parses the command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    if () then ([delete syntax is valid])"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    :parses the delete command : delete 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    :deletes expenditure based on index specified;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    else ([syntax is invalid])"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    :throw a parser exception;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    endif"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "endif"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "stop"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "sogggy": 29
    }
  },
  {
    "path": "docs/diagrams/ListViewClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Package Model {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Interface Model \u003c\u003cInterface\u003e\u003e MODEL_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class ModelManager MODEL_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Package Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Class ListView UI_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Class MainWindow UI_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Package Logic {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Interface Logic \u003c\u003cInterface\u003e\u003e LOGIC_COLOR"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class LogicManager LOGIC_COLOR"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Package JavaFX {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Interface ObservableList\u003c\u003cInterface\u003e\u003e #000000"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class FilteredList #000000"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "MainWindow -\u003e ListView"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "MainWindow -\u003e Logic"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "LogicManager .up.|\u003e Logic LOGIC_COLOR"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "LogicManager -\u003e Model"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "ModelManager .up.|\u003e Model MODEL_COLOR"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "FilteredList .up.|\u003e ObservableList"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "ListView .down.\u003e ObservableList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "ModelManager -\u003e FilteredList"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 38
    }
  },
  {
    "path": "docs/diagrams/LogicClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowColor LOGIC_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam classBackgroundColor LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "package Logic {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "package Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Parser \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Interface PageParser \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class PageParser"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Class XYZPageParser"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Class XYZCommandParser"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Class CliSyntax"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Class ParserUtil"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Class ArgumentMultimap"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Class ArgumentTokenizer"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Class Prefix"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package Commands {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Class XYZCommand"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "Class CommandResult"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Class \"{abstract}\\nCommand\" as Command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Logic \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "Class LogicManager"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "package Model{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenModel #FFFFFF"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "HiddenOutside ..\u003e Logic"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "LogicManager .up.|\u003e Logic"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LogicManager ..\u003e\"1\" PageParser"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Model .left. PageParser"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "123PageParser .up.|\u003e PageParser"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "123PageParser .left.\u003e XYZ123CommandParser: creates \u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "XYZPageParser .up.|\u003e PageParser"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "XYZPageParser .left.\u003e XYZCommandParser: creates \u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommandParser ..\u003e XYZCommand : creates \u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommandParser ..|\u003e Parser"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "XYZCommandParser .left.\u003e ArgumentMultimap"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommandParser ..\u003e ArgumentTokenizer"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "ArgumentTokenizer .left.\u003e ArgumentMultimap"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommandParser ..\u003e CliSyntax"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "CliSyntax ..\u003e Prefix"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommandParser ..\u003e ParserUtil"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "ParserUtil .down.\u003e Prefix"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "ArgumentTokenizer .down.\u003e Prefix"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommand -up-|\u003e Command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "LogicManager .left.\u003e Command : executes \u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "LogicManager -right-\u003e Model"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Command .up.\u003e Model"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "note right of XYZPageParser: XYZPageParser \u003d\\nBudgetPageParser\\nor MainPageParser"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "note bottom of XYZCommandParser: XYZCommandParser \u003d\\nCreateBudgetCommandParser,\\nAddExpenditureCommandParser, etc"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "note bottom of XYZCommand: XYZCommand \u003d\\nAddExpenditureCommand, \\nFindBudgetCommand, etc"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "Logic ..\u003e CommandResult"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "LogicManager .down.\u003e CommandResult"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Command .up.\u003e CommandResult"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "CommandResult -[hidden]-\u003e Parser"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 2,
      "sogggy": 8,
      "yu-ming-chen": 8,
      "-": 55
    }
  },
  {
    "path": "docs/diagrams/ModelClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowColor MODEL_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam classBackgroundColor MODEL_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Package Model \u003c\u003cRectangle\u003e\u003e{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Interface ReadOnlyNusave \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Model \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Interface ObservableList \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Interface Renderable \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class Nusave"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class ReadOnlyNusave"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Class Model"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Class ModelManager"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Class UserPrefs"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Class ReadOnlyUserPrefs"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Package Budget {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class Budget"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class Threshold"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class Expenditure"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class \"Name\" as budgetName"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class \"Date\" as budgetDate"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class BudgetList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Package Expenditure {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class ExpenditureList"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class Expenditure"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class \"Name\" as expenditureName"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class Price"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class \"Date\" as expenditureDate"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Package Tag {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "Class Tag"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Package State {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "class StateManager"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "HiddenOutside ..\u003e Model"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Nusave .up.|\u003e ReadOnlyNusave"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Nusave -right-\u003e Renderable : ObservableList"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "Model .right.\u003e ObservableList"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager -right-\u003e StateManager"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager .up.|\u003e Model"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager *--\u003e \"1\" Nusave"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager *-left-\u003e \"1\" UserPrefs"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager --\u003e Renderable : FilteredList"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "UserPrefs .up.|\u003e ReadOnlyUserPrefs"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Nusave *--\u003e \"1\" BudgetList"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "BudgetList \"1\" o--\u003e \"*\" Budget"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Budget .up.|\u003e Renderable"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Budget *--\u003e budgetName"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Budget *--\u003e budgetDate"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Budget \"1\" *--\u003e \"1\" ExpenditureList"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Budget *--\u003e Threshold : \"Optional\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ExpenditureList --\u003e \"*\" Expenditure"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Expenditure .up.|\u003e Renderable"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Expenditure *-down-\u003e expenditureName"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Expenditure *-down-\u003e Price"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Expenditure *-down-\u003e expenditureDate"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Expenditure *--\u003e \"*\" Tag"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "expenditureDate -[hidden]right-\u003e Threshold"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Threshold -[hidden]right-\u003e Expenditure"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "sogggy": 47,
      "-": 32
    }
  },
  {
    "path": "docs/diagrams/ParserClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam arrowColor LOGIC_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam classBackgroundColor LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Package Logic \u003c\u003cRectangle\u003e\u003e{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Interface Logic \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class LogicManager"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class \"{abstract}\\nCommand\" as Command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class XYZCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Package Parser \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Interface PageParser \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Interface Parser \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class XYZPageParser"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class XYZCommandParser"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "LogicManager .up.|\u003e Logic"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "LogicManager .down.\u003e XYZPageParser"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "XYZPageParser .up.|\u003e PageParser"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "XYZPageParser .down.\u003e XYZCommandParser"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "XYZCommandParser .up.|\u003e Parser"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "XYZCommand -up-|\u003e Command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "XYZCommandParser .left.\u003e XYZCommand : creates \u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 29
    }
  },
  {
    "path": "docs/diagrams/ParserSequenceDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "box Logic #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "participant \":MainPageParser\" as MainPageParser"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "participant \":DeleteBudgetCommandParser\" as DeleteBudgetCommandParser"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "participant \"d:DeleteBudgetCommand\" as DeleteBudgetCommand"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "end box"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[-\u003e MainPageParser : parseCommand(\"delete 1\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "activate MainPageParser"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "create DeleteBudgetCommandParser"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "MainPageParser -\u003e DeleteBudgetCommandParser : parse(\"1\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "activate DeleteBudgetCommandParser"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "create DeleteBudgetCommand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "DeleteBudgetCommandParser -\u003e DeleteBudgetCommand"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "activate DeleteBudgetCommand"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "DeleteBudgetCommand --\u003e DeleteBudgetCommandParser : d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "DeleteBudgetCommandParser --\u003e MainPageParser : d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deactivate DeleteBudgetCommandParser"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "DeleteBudgetCommandParser -[hidden]-\u003e MainPageParser"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "destroy DeleteBudgetCommandParser"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[\u003c-- MainPageParser : d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deactivate MainPageParser"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[\u003c-[hidden]- MainPageParser"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "destroy MainPageParser"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "wenhaogoh": 28
    }
  },
  {
    "path": "docs/diagrams/PojoClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam arrowColor STORAGE_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam classBackgroundColor STORAGE_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class JsonNusaveStorage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class JsonSerializableNusave"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class JsonAdaptedBudget"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class JsonAdaptedExpenditure"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class JsonAdaptedTag"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "JsonNusaveStorage .down.\u003e JsonSerializableNusave"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "JsonSerializableNusave -right-\u003e \"*\" JsonAdaptedBudget"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "JsonAdaptedBudget -right-\u003e \"*\" JsonAdaptedExpenditure"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "JsonAdaptedExpenditure -right-\u003e \"*\" JsonAdaptedTag"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 20
    }
  },
  {
    "path": "docs/diagrams/StateBinders_State_Class_Diagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Package State {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Interface State \u003c\u003cInterface\u003e\u003e #Orange"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class StateManager #Orange {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    - isBudgetPageProp : BooleanProperty"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    - infoBoxSecondRowProp: StringProperty"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    - thresholdStringProp: StringProperty"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Package Model {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Interface Model \u003c\u003cInterface\u003e\u003e #Red"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class ModelManager #Red"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Package Logic {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Interface Logic \u003c\u003cInterface\u003e\u003e #Blue"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class LogicManager #Blue"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Package Ui {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Package StateBinder {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Interface StateBinder \u003c\u003cInterface\u003e\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            + bind()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Class InfoBoxStateBinder"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Class TitleStateBinder"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Class StateBinderList {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            + bindAll()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Class MainWindow {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setStateBinders()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "InfoBoxStateBinder .[#Green].|\u003e StateBinder"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "TitleStateBinder .[#Green].|\u003e StateBinder"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "StateBinderList -up[#Green]-\u003e \"*\" StateBinder"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainWindow -right[#Green]-\u003e StateBinderList"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "StateBinder -left[#Green]-\u003e Logic"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "LogicManager .up[#Blue].|\u003e Logic"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "LogicManager -down[#Blue]-\u003e Model"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager .up[#Red].|\u003e Model"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager -right[#Red]-\u003e State"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "StateManager .left[#Orange].|\u003e State"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "sogggy": 54
    }
  },
  {
    "path": "docs/diagrams/StateClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "skinparam arrowColor STATE_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "skinparam classBackgroundColor STATE_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Interface State \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Enum Page \u003c\u003cenumeration\u003e\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class StateManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -PageTitle: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class BudgetIndex"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class BooleanProperty"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class StringProperty"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "StateManager .up.|\u003e State"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "StateManager -right-\u003e BudgetIndex"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "StateManager --\u003e BooleanProperty"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "StateManager --\u003e StringProperty"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "StateManager -down-\u003e Page"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "sogggy": 24
    }
  },
  {
    "path": "docs/diagrams/StorageClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowColor STORAGE_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam classBackgroundColor STORAGE_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Storage \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Interface NusaveStorage \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Class StorageManager"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Class JsonUserPrefsStorage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class JsonNusaveStorage"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class JsonSerializableNusave"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "StorageManager .left.|\u003e Storage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "StorageManager -right-\u003e UserPrefsStorage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "StorageManager --\u003e NusaveStorage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "JsonUserPrefsStorage .left.|\u003e UserPrefsStorage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "JsonNusaveStorage .left.|\u003e NusaveStorage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "JsonNusaveStorage .down.\u003e JsonSerializableNusave"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "sogggy": 4,
      "wenhaogoh": 5,
      "-": 15
    }
  },
  {
    "path": "docs/diagrams/UiClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "package UI \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Ui \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Interface StateBinder \u003c\u003cInterface\u003e\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "+ void bind()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Class \"{abstract}\\nUiPart\" as UiPart"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Class UiManager"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class StateBinderList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Class CommandBox"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class Title"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class ResultDisplay"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class InfoBox"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class HelpWindow"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class RenderableListPanel"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class BudgetCard"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class ExpenditureCard"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class InfoBoxStateBinder"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Class TitleStateBinder"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenModel #FFFFFF"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenLogic #FFFFFF"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "HiddenOutside ..\u003e Ui"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "UiManager .left.|\u003e Ui"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "UiManager -down-\u003e MainWindow"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "RenderableListPanel -down-\u003e BudgetCard"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "RenderableListPanel -down-\u003e ExpenditureCard"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow -left-|\u003e UiPart"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainWindow *--\u003e ResultDisplay"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainWindow *--\u003e CommandBox"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainWindow *--\u003e Title"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainWindow *--\u003e InfoBox"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainWindow *-right-\u003e RenderableListPanel"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainWindow *--\u003e HelpWindow"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainWindow -right-\u003e StateBinderList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "StateBinderList -down-\u003e StateBinder"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "InfoBoxStateBinder .up.\u003e StateBinder"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "TitleStateBinder .up.\u003e StateBinder"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "BudgetCard -right-\u003e Model"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ExpenditureCard -right-\u003e Model"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "CommandBox -down-|\u003e UiPart"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Title -down-|\u003e UiPart"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ResultDisplay -down-|\u003e UiPart"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "InfoBox -down-|\u003e UiPart"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "RenderableListPanel -down-|\u003e UiPart"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "BudgetCard -down-|\u003e UiPart"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ExpenditureCard -down-|\u003e UiPart"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "HelpWindow -down-|\u003e UiPart"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "UiManager -up-\u003e Logic"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainWindow -up-\u003e Logic"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "sogggy": 41,
      "-": 35
    }
  },
  {
    "path": "docs/diagrams/UndoRedoClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam arrowColor MODEL_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam classBackgroundColor MODEL_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Package Model \u003c\u003cRectangle\u003e\u003e{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Interface \"History\u003cVersionedNusave\u003e\" \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Interface Model \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class ModelManager"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class \"HistoryManager\u003cVersionedNusave\u003e\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class \"Node\u003cVersionedNusave\u003e\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Class \"VersionedNusave\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "ModelManager .left.|\u003e Model"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "ModelManager -right-\u003e \"History\u003cVersionedNusave\u003e\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\"HistoryManager\u003cVersionedNusave\u003e\" .up.|\u003e \"History\u003cVersionedNusave\u003e\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\"HistoryManager\u003cVersionedNusave\u003e\" -left-\u003e \"Node\u003cVersionedNusave\u003e\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\"Node\u003cVersionedNusave\u003e\" -left-\u003e VersionedNusave"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 22
    }
  },
  {
    "path": "docs/diagrams/UndoRedoState0.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam ClassFontColor #000000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam ClassBorderColor #000000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "title Initial State"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package HistoryManager {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State1 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State2 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State3 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State4 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "State1 -[hidden]right-\u003e State2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "State2 -[hidden]right-\u003e State3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State3 -[hidden]right-\u003e State4"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "hide State2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "hide State3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "hide State4"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class Pointer as \"Current Pointer\" #FFFFF"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Pointer -up-\u003e State1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "@end"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 9,
      "-": 14
    }
  },
  {
    "path": "docs/diagrams/UndoRedoState1.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam ClassFontColor #000000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam ClassBorderColor #000000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "title After \"create n/demo\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package HistoryManager {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State1 as \"__vn1:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State2 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State3 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State4 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State1 -right-\u003e State2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State2 -left-\u003e State1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "State2 -[hidden]right-\u003e State3"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State3 -[hidden]right-\u003e State4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "hide State3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "hide State4"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class Pointer as \"Current Pointer\" #FFFFF"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Pointer -up-\u003e State2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "@end"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 11,
      "-": 12
    }
  },
  {
    "path": "docs/diagrams/UndoRedoState2.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam ClassFontColor #000000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam ClassBorderColor #000000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "title After \"undo\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package HistoryManager {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State1 as \"__vn1:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State2 as \"__vn2:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State3 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State4 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State1 -right-\u003e State2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State2 -left-\u003e State1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State2 -right-\u003e State3"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State3 -left-\u003e State2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State3 -[hidden]right-\u003e State4"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "hide State4"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class Pointer as \"Current Pointer\" #FFFFF"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Pointer -up-\u003e State1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "@end"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 14,
      "-": 9
    }
  },
  {
    "path": "docs/diagrams/UndoRedoState3.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam ClassFontColor #000000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam ClassBorderColor #000000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "title After \"redo\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package HistoryManager {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State1 as \"__vn1:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State2 as \"__vn2:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State3 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State4 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State1 -right-\u003e State2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State2 -left-\u003e State1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State2 -right-\u003e State3"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State3 -left-\u003e State2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State3 -[hidden]right-\u003e State4"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "hide State4"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class Pointer as \"Current Pointer\" #FFFFF"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Pointer -up-\u003e State2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "@end"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 13,
      "-": 10
    }
  },
  {
    "path": "docs/diagrams/UndoRedoState4.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam ClassFontColor #000000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam ClassBorderColor #000000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "title After \"create n/demo2\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package HistoryManager {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State1 as \"__vn1:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State2 as \"__vn2:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State3 as \"__vn3:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    class State4 as \"__empty:Node\u003cVersionedNusave\u003e__\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State1 -right-\u003e State2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State2 -left-\u003e State1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State2 -right-\u003e State3"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State3 -left-\u003e State2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State3 -right-\u003e State4"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "State4 -left-\u003e State3"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class Pointer as \"Current Pointer\" #FFFFF"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Pointer -up-\u003e State4"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "@end"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 14,
      "-": 9
    }
  },
  {
    "path": "docs/diagrams/UndoSequenceDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "box Logic #LightBlue"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "participant \":LogicManager\" as LogicManager"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "participant \":MainPageParser\" as MainPageParser"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "participant \"u:UndoCommand\" as UndoCommand"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "end box"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "box Model #LightYellow"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "participant \":Model\" as Model"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "participant \":HistoryManager\u003cVersionedNusave\u003e\" as HistoryManager"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "end box"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "[-\u003e LogicManager : execute(undo)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "activate LogicManager"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "create MainPageParser"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "LogicManager -\u003e MainPageParser"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "activate MainPageParser"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deactivate MainPageParser"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "MainPageParser --\u003e LogicManager"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deactivate MainPageParser"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "LogicManager -\u003e MainPageParser : parseCommand(undo)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "activate MainPageParser"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "create UndoCommand"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "MainPageParser -\u003e UndoCommand"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "activate UndoCommand"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "UndoCommand --\u003e MainPageParser : u"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate UndoCommand"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "MainPageParser --\u003e LogicManager : u"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deactivate MainPageParser"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "MainPageParser -[hidden]-\u003e LogicManager"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "destroy MainPageParser"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "LogicManager -\u003e UndoCommand : execute()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "activate UndoCommand"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "UndoCommand -\u003e Model : undo()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "activate Model"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Model -\u003e HistoryManager : getHistory()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "activate HistoryManager"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "HistoryManager --\u003e Model : h:VersionedNusave"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deactivate HistoryManager"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Model -\u003e Model : loadVersionedNusave(h)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "activate Model"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Model --\u003e Model"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deactivate Model"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Model --\u003e UndoCommand"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate Model"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "UndoCommand --\u003e LogicManager : result"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate UndoCommand"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "UndoCommand -[hidden]-\u003e LogicManager : result"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "destroy UndoCommand"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[\u003c--LogicManager : result"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate LogicManager"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 39,
      "-": 31
    }
  },
  {
    "path": "docs/diagrams/UpdateTitleSequenceDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "box Ui #LightGreen"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":MainWindow\" as MainWindow #LightGreen"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "end box"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "box Logic #LightBlue"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":LogicManager\" as LogicManager #LightBlue"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":MainPageParser\" as MainPageParser #LightBlue"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":OpenBudgetCommandParser\" as OpenBudgetCommandParser #LightBlue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":OpenBudgetCommand\" as OpenBudgetCommand #LightBlue"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":CommandResult\" as CommandResult #LightBlue"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "end box"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "box Model #LightYellow"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":ModelManager\" as ModelManager"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "end box"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "box State #Orange"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":StateManager\" as StateManager #Orange"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "end box"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "[-\u003e MainWindow : \"open 1\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate MainWindow"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainWindow -\u003e LogicManager : execute(\"open 1\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate LogicManager"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "create MainPageParser"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "LogicManager -\u003e MainPageParser : new MainPageParser()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate MainPageParser"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainPageParser --\u003e LogicManager"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate MainPageParser"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "LogicManager -\u003e MainPageParser : parseCommand(\"open 1\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate MainPageParser"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "create OpenBudgetCommandParser"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainPageParser -\u003e OpenBudgetCommandParser : new OpenBudgetCommandParser()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate OpenBudgetCommandParser"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommandParser --\u003e MainPageParser"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate OpenBudgetCommandParser"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainPageParser -\u003e OpenBudgetCommandParser : parse(\"1\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate OpenBudgetCommandParser"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "create OpenBudgetCommand"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommandParser -\u003e OpenBudgetCommand : new OpenBudgetCommand(1)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate OpenBudgetCommand"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommand --\u003e OpenBudgetCommandParser : command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate OpenBudgetCommand"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommandParser --\u003e MainPageParser : command"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate OpenBudgetCommandParser"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommandParser -[hidden]-\u003e MainPageParser"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "destroy OpenBudgetCommandParser"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainPageParser --\u003e LogicManager : command"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate MainPageParser"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainPageParser -[hidden]-\u003e LogicManager"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "destroy MainPageParser"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "LogicManager -\u003e OpenBudgetCommand : execute(model)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate OpenBudgetCommand"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommand -\u003e ModelManager : openBudget(budgetIndex)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate ModelManager"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager -\u003e ModelManager : setOpenCommandState(budgetIndex)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate ModelManager"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager --\u003e ModelManager"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate ModelManager"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager -\u003e StateManager : setOpenCommandState(pageName, expenditureValue, threshold)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate StateManager"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "StateManager --\u003e ModelManager"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate StateManager"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager --\u003e OpenBudgetCommand"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate ModelManager"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "create CommandResult"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommand -\u003e CommandResult : new CommandResult(MESSAGE_SUCCESS)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate CommandResult"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "CommandResult --\u003e OpenBudgetCommand : commandResult"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate CommandResult"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommand --\u003e LogicManager : commandResult"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate OpenBudgetCommand"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "LogicManager --\u003e MainWindow : commandResult"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate LogicManager"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "[\u003c--MainWindow"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate MainWindow"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "sogggy": 106
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/AddExpenditureActivityDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ":User executes add expenditure command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u0027Since the beta syntax does not support placing the condition outside the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u0027diamond we place it as the true branch instead."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "if () then ([is valid command])"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Add newly created expenditure into the budget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Store newly created expenditure into the hard disk;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Display newly added expenditure in the budget;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "else ([else])"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ":Display invalid command result to the user;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "endif"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "stop"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 16
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/AddExpenditureCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":BudgetPageParser\" as BPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":AddExpenditureCommandParser\" as AECP"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"a:AddExpenditureCommand\" as AEC"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"result:CommandResult\" as CR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "end box"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"e:Expenditure\" as Expenditure"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "end box"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "[-\u003e LM : excute(\"add n/Basketball p/20 t/Ball\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create BPP"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e BPP"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- BPP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e BPP : parseCommand(\"add n/Basketball p/20 t/Ball\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create AECP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP -\u003e AECP"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate AECP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP \u003c-- AECP"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate AECP"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP -\u003e AECP : parse(\"n/Basketball p/20 t/Ball\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate AECP"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create Expenditure"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "AECP -\u003e Expenditure"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate Expenditure"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "AECP \u003c-- Expenditure : e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate Expenditure"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create AEC"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "AECP -\u003e AEC : createBudgetCommand(e)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate AEC"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "AECP \u003c-- AEC : a"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate AEC"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP \u003c-- AECP : a"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate AECP"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP \u003c-[hidden]- AECP"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "destroy AECP"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate AECP"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- BPP : a"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-[hidden]- BPP"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "destroy BPP"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e AEC: excute(m)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate AEC"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "AEC -\u003e M : addExpenditure(e)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "AEC \u003c-- M"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "AEC -\u003e CR"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "AEC \u003c-- CR : result"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- AEC: result"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate AEC"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "[\u003c-- LM : result"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 79
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/CreateBudgetCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":MainPageParser\" as MPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":CreateBudgetCommandParser\" as CBCP"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"c:CreateBudgetCommand\" as CBC"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"result:CommandResult\" as CR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "end box"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"b:Budget\" as Budget"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "end box"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[-\u003e LM : excute(\"create n/Temasek Hall Basketball p/100\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create MPP"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e MPP"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- MPP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e MPP : parseCommand(\"create n/Temasek Hall Basketball p/100\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create CBCP"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP -\u003e CBCP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate CBCP"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP \u003c-- CBCP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate CBCP"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP -\u003e CBCP : parse(\"n/Temasek Hall Basketball p/100\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate CBCP"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create Budget"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "CBCP -\u003e Budget"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate Budget"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "CBCP \u003c-- Budget : b"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate Budget"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create CBC"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "CBCP -\u003e CBC : createBudgetCommand(b)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate CBC"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "CBCP \u003c-- CBC : c"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate CBC"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP \u003c-- CBCP : c"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate CBCP"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP \u003c-[hidden]- CBCP"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "destroy CBCP"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate CBCP"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- MPP : c"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-[hidden]- MPP"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "destroy MPP"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e CBC: excute(m)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate CBC"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "CBC -\u003e M : addBudget(b)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "CBC \u003c-- M"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "CBC -\u003e CR"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "CBC \u003c-- CR :result"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- CBC: result"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate CBC"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[\u003c-- LM: result"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 79
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/CreateBudgetCommandActivity.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ":User executes create budget command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u0027Since the beta syntax does not support placing the condition outside the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u0027diamond we place it as the true branch instead."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "if () then ([is valid command])"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    :Add newly created budget into NUSave;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    :Store newly created budget into the hard disk;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    :Display newly added budget in NUSave;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "else ([else])"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ":Display invalid command result to the user;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "endif"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "stop"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 16
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/DeleteBudgetActivityDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ":User executes delete budget command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "if() then ([is valid command])"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Delete budget with index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Remove budget from the hard disk;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Display updated budget list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "else ([else])"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Display invalid command result to user;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "endif"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "stop"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 12
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/DeleteBudgetCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":MainPageParser\" as MPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":DeleteBudgetCommandParser\" as DBCP"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"d:DeleteBudgetCommand\" as DBC"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":result:CommandResult\" as CR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"i: BudgetIndex\" as BI"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "end box"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "end box"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "[-\u003e LM : execute(\"delete 1\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create MPP"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e MPP"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- MPP"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e MPP : parseCommand(\"delete 1\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create DBCP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "MPP -\u003e DBCP"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate DBCP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "MPP \u003c-- DBCP"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate DBCP"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "MPP -\u003e DBCP : parse(\"1\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate DBCP"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create BI"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DBCP -\u003e BI"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate BI"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DBCP \u003c-- BI"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate BI"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create DBC"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DBCP -\u003e DBC : deleteBudgetCommand(i)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate DBC"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DBCP \u003c-- DBC : c"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate DBC"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "MPP \u003c-- DBCP : c"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate DBCP"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "MPP \u003c-[hidden]- DBCP"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "destroy DBCP"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- MPP : c"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-[hidden]- MPP"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "destroy MPP"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e DBC : excute(m)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate DBC"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DBC -\u003e M : deleteBudget(i)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DBC \u003c-- M"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DBC -\u003e CR"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DBC \u003c-- CR"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- DBC : result"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate DBC"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "[\u003c-- LM : result"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 78
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/DeleteExpenditureActivityDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ":User executes delete expenditure command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "if() then ([is valid command])"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Delete expenditure with index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Remove budget from the hard disk;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Display updated expenditure list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "else ([else])"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Display invalid command result to user;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "endif"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "stop"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 12
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/DeleteExpenditureCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":BudgetPageParser\" as BPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":DeleteExpenditureCommandParser\" as DECP"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"d:DeleteExpenditureCommand\" as DEC"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":result:CommandResult\" as CR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"i: ExpenditureIndex\" as EI"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "end box"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "end box"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "[-\u003e LM : execute(\"delete 1\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create BPP"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e BPP"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- BPP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e BPP : parseCommand(\"delete 1\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create DECP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP -\u003e DECP"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate DECP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP \u003c-- DECP"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate DECP"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP -\u003e DECP : parse(\"1\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate DECP"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create EI"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DECP -\u003e EI"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate EI"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DECP \u003c-- EI"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate EI"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create DEC"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DECP -\u003e DEC : deleteExpenditureCommand(i)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate DEC"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DECP \u003c-- DEC : c"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate DEC"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP \u003c-- DECP : c"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate DECP"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP \u003c-[hidden]- DECP"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "destroy DECP"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- BPP : c"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-[hidden]- BPP"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "destroy BPP"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e DEC : excute(m)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate DEC"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DEC -\u003e M : deleteExpenditure(i)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DEC \u003c-- M"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DEC -\u003e CR"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "DEC \u003c-- CR"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- DEC : result"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate DEC"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "[\u003c-- LM : result"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 77
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/EditBudgetCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":MainPageParser\" as MPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":EditBudgetCommandParser\" as EBCP"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"c:EditBudgetCommand\" as EBC"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"result:CommandResult\" as CR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"e:EditBudgetDescriptor\" as EBD"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"i:BudgetIndex\" as BI"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "end box"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"toEdit:Budget\" as toEditBudget"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"edited:Budget\" as editedBudget"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "end box"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[-\u003e LM : excute(\"edit 1 n/Temasek Hall Basketball p/1000\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create MPP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e MPP"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- MPP"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e MPP : parseCommand(\"edit 1 n/Temasek Hall Basketball p/1000\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create EBCP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP -\u003e EBCP"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate EBCP"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP \u003c-- EBCP"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate EBCP"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP -\u003e EBCP : parse(\"n/Temasek Hall Basketball p/1000\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate EBCP"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create BI"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBCP -\u003e BI"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate BI"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBCP \u003c-- BI : i"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate BI"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create EBD"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBCP -\u003e EBD"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate EBD"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBCP \u003c-- EBD : e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate EBD"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create EBC"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBCP -\u003e EBC : createBudgetCommand(i, e)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate EBC"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBCP \u003c-- EBC : c"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate EBC"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP \u003c-- EBCP : c"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate EBCP"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP \u003c-[hidden]- EBCP"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "destroy EBCP"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate EBCP"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- MPP : c"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-[hidden]- MPP"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "destroy MPP"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e EBC: excute(m)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate EBC"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create toEditBudget"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBC -\u003e toEditBudget"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate toEditBudget"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBC \u003c-- toEditBudget : toEdit"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate toEditBudget"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create editedBudget"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBC -\u003e editedBudget"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate editedBudget"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBC \u003c-- editedBudget : edited"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate editedBudget"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBC -\u003e M : editBudget(toEdit, edited)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBC \u003c-- M"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBC -\u003e CR"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "EBC \u003c-- CR : result"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- EBC: result"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate EBC"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[\u003c-- LM: result"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 99
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/EditBudgetCommandActivity.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ":User executes edit budget command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u0027Since the beta syntax does not support placing the condition outside the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u0027diamond we place it as the true branch instead."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "if () then ([is valid command])"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    :Edit the specific budget in NUSave;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    :Replace existing budget with the newly edited budget in the hard disk;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    :Display newly edited budget in NUSave;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "else ([else])"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ":Display invalid command result to the user;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "endif"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "stop"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 16
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/EditExpenditureActivityDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ":User executes edit budget command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u0027Since the beta syntax does not support placing the condition outside the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\u0027diamond we place it as the true branch instead."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "if () then ([is valid command])"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Edit the specific expenditure within the budget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Replace existing expenditure with the newly edited expenditure in the hard disk;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    :Display newly edited expenditure in NUSave;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "else ([else])"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ":Display invalid command result to the user;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "endif"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "stop"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 16
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/EditExpenditureCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":BudgetPageParser\" as BPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \":EditExpenditureCommandParser\" as EECP"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"c:EditExpenditureCommand\" as EEC"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"result:CommandResult\" as CR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"e:EditExpenditureDescriptor\" as EED"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"i:ExpenditureIndex\" as EI"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "end box"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"toEdit:Expenditure\" as toEditExpenditure"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"edited:Expenditure\" as editedExpenditure"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "end box"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "[-\u003e LM : excute(\"edit 1 n/Basketball p/50 t/Ball\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create BPP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e BPP"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- BPP"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e BPP : parseCommand(\"edit 1 n/Basketball p/50 t/Ball\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create EECP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP -\u003e EECP"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate EECP"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP \u003c-- EECP"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate EECP"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP -\u003e EECP : parse(\"1 n/Basketball p/50 t/Ball\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate EECP"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create EI"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EECP -\u003e EI"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate EI"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EECP \u003c-- EI : i"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate EI"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create EED"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EECP -\u003e EED"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate EED"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EECP \u003c-- EED : e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate EED"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create EEC"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EECP -\u003e EEC : createExpenditureCommand(i, e)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate EEC"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EECP \u003c-- EEC : c"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate EEC"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP \u003c-- EECP : c"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate EECP"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP \u003c-[hidden]- EECP"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "destroy EECP"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate EECP"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- BPP : c"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "BPP \u003c-[hidden]- LM"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "destroy BPP"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM -\u003e EEC: excute(m)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate EEC"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create toEditExpenditure"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EEC -\u003e toEditExpenditure"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate toEditExpenditure"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EEC \u003c-- toEditExpenditure : toEdit"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate toEditExpenditure"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create editedExpenditure"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EEC -\u003e editedExpenditure"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate editedExpenditure"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EEC \u003c-- editedExpenditure : edited"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate editedExpenditure"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EEC -\u003e M : editExpenditure(toEdit, edited)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EEC \u003c-- M"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EEC -\u003e CR"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "EEC \u003c-- CR : result"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "LM \u003c-- EEC : result"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate EEC"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "[\u003c-- LM : result"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 98
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/FindBudgetCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \":MainPageParser\" as MPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \":FindBudgetCommandParser\" as FBCP"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"c:FindBudgetCommand\" as FBC"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"result:CommandResult\" as CR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "end box"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "end box"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[-\u003e LM : execute(\"find NUS\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create MPP"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e MPP"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- MPP"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e MPP : execute(\"find NUS\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create FBCP"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "MPP -\u003e FBCP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate FBCP"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "MPP \u003c-- FBCP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate FBCP"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "MPP -\u003e FBCP : parseCommand(\"find NUS\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate FBCP"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create FBC"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FBCP -\u003e FBC"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate FBC"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FBCP \u003c-- FBC : c"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate FBC"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "MPP \u003c-- FBCP : c"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate FBCP"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FBCP -[hidden]-\u003e MPP"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "destroy FBCP"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- MPP : c"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-[hidden]- MPP"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "destroy MPP"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e FBC : execute(m)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate FBC"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FBC -\u003e M : findBudget(\"NUS\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FBC \u003c-- M"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FBC -\u003e CR"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FBC \u003c-- CR : result"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- FBC : result"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate FBC"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[\u003c-- LM : result"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 71
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/FindExpenditureCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \":BudgetPageParser\" as BPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \":FindExpenditureCommandParser\" as FECP"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"c:FindExpenditureCommand\" as FEC"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"result:CommandResult\" as CR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "end box"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "end box"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[-\u003e LM : execute(\"find shirt\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create BPP"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e BPP"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- BPP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e BPP : parseCommand(\"find shirt\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create FECP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "BPP -\u003e FECP"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate FECP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "BPP \u003c-- FECP"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate FECP"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "BPP -\u003e FECP : parse(\"shirt\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate FECP"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create FEC"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FECP -\u003e FEC"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate FEC"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FECP \u003c-- FEC : c"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate FEC"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "BPP \u003c-- FECP : c"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate FECP"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "BPP \u003c-[hidden]- FECP"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "destroy FECP"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- BPP : c"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-[hidden]- BPP"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "destroy BPP"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e FEC : execute(m)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate FEC"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FEC -\u003e M : findExpenditure(\"shirt\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FEC \u003c-- M"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FEC -\u003e CR"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "FEC \u003c-- CR : result"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- FEC : result"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate FEC"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[\u003c-- LM: result"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 75
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/HelpCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":MainPageParser\" as MPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"c:HelpBudgetCommand\" as HBC"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"result:CommandResult\" as CR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "end box"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[-\u003e LM : excute(\"help\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create MPP"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e MPP"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- MPP"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e MPP : parseCommand(\"help\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create HBC"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP -\u003e HBC"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate HBC"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP \u003c-- HBC : c"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate HBC"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- MPP : c"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-[hidden]- MPP"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "destroy MPP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e HBC: excute(m)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate HBC"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "HBC -\u003e CR"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "HBC \u003c-- CR : result"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- HBC: result"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate HBC"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[\u003c-- LM: result"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 49
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/HelpCommandActivity.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ":User executes help command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u0027Since the beta syntax does not support placing the condition outside the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u0027diamond we place it as the true branch instead."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "if () then ([is valid command])"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    :Display help message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "else ([else])"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ":Display invalid command result to the user;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "endif"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "stop"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 14
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/ListBudgetCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \":MainPageParser\" as MPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"c:ListBudgetCommand\" as LBC"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"result:CommandResult\" as CR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "end box"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "end box"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[-\u003e LM : execute(\"list\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create MPP"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e MPP"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- MPP"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e MPP : parseCommand(\"list\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create LBC"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "MPP -\u003e LBC"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate LBC"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "MPP \u003c-- LBC : c"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate LBC"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- MPP : c"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-[hidden]- MPP"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "destroy MPP"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e LBC : execute(m)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate LBC"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LBC -\u003e M : listBudgets()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LBC \u003c-- M"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LBC -\u003e CR"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LBC \u003c-- CR : result"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- LBC : result"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate LBC"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[\u003c-- LM : result"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 59
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/ListExpenditureCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \":BudgetPageParser\" as BPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"c:ListExpenditureCommand\" as LEC"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"result:CommandResult\" as CR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "end box"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "end box"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[-\u003e LM : execute(\"list\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create BPP"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e BPP"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- BPP"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e BPP : parseCommand(\"list\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create LEC"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "BPP -\u003e LEC"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate LEC"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "BPP \u003c-- LEC : c"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate LEC"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- BPP : c"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-[hidden]- BPP"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "destroy BPP"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM -\u003e LEC : execute(m)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate LEC"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LEC -\u003e M : listExpenditures()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LEC \u003c-- M"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LEC -\u003e CR"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LEC \u003c-- CR : result"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "LM \u003c-- LEC : result"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deactivate LEC"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[\u003c-- LM : result"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 58
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/SortBudgetCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":MainPageParser\" as MPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":SortBudgetCommandParser\" as SBCP"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"c:SortBudgetCommand\" as SBC"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"result:CommandResult\" as CR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "end box"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "end box"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[-\u003e LM : excute(\"sort name\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create MPP"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e MPP"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- MPP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e MPP : parseCommand(\"sort name\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate MPP"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create SBCP"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP -\u003e SBCP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate SBCP"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP \u003c-- SBCP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate SBCP"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP -\u003e SBCP : parse(\"name\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate SBCP"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create SBC"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SBCP -\u003e SBC"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate SBC"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SBCP \u003c-- SBC : c"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate SBC"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP \u003c-- SBCP : c"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate SBCP"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "MPP \u003c-[hidden]- SBCP"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "destroy SBCP"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate SBCP"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- MPP : c"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate MPP"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-[hidden]- MPP"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "destroy MPP"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e SBC: excute(m)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate SBC"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SBC -\u003e M : sortBudgetsByName()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SBC \u003c-- M"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SBC -\u003e CR"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SBC \u003c-- CR : result"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- SBC: result"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate SBC"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[\u003c-- LM: result"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 72
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/SortBudgetCommandActivity.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ":User executes sort budget by name command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u0027Since the beta syntax does not support placing the condition outside the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u0027diamond we place it as the true branch instead."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "if () then ([is valid command])"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    :Sort all budgets in NUSave in alphabetical order;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    :Display sorted list of budgets in NUSave;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "else ([else])"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ":Display invalid command result to the user;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "endif"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "stop"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 15
    }
  },
  {
    "path": "docs/diagrams/commandsPlantUML/SortExpenditureCommand.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "box \"Logic\" #LightBlue"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":LogicManager\" as LM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":BudgetPageParser\" as BPP"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \":SortExpenditureCommandParser\" as SECP"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"c:SortExpenditureCommand\" as SEC"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"result:CommandResult\" as CR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "end box"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "box \"Model\" #LightYellow"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "participant \"m:Model\" as M"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "end box"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[-\u003e LM : excute(\"sort time\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate LM"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create BPP"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e BPP"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- BPP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e BPP : parseCommand(\"sort time\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate BPP"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create SECP"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "BPP -\u003e SECP"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate SECP"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "BPP \u003c-- SECP"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate SECP"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "BPP -\u003e SECP : parse(\"time\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate SECP"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create SEC"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SECP -\u003e SEC"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate SEC"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SECP \u003c-- SEC : c"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate SEC"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "BPP \u003c-- SECP : c"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate SECP"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "BPP \u003c-[hidden]- SECP"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "destroy SECP"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate SECP"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- BPP : c"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate BPP"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-[hidden]- BPP"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "destroy BPP"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM -\u003e SEC: excute(m)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate SEC"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SEC -\u003e M : sortExpenditureByCreatedDate()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate M"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SEC \u003c-- M"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate M"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "create CR"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SEC -\u003e CR"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "activate CR"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "SEC \u003c-- CR : result"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate CR"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "LM \u003c-- SEC: result"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate SEC"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "[\u003c-- LM: result"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deactivate LM"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 72
    }
  },
  {
    "path": "docs/diagrams/style.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/\u0027"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " \u0027Commonly used styles and colors across diagrams."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " \u0027comprehensive list of skinparams."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " \u0027/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027T1 through T4 are shades of the original color from lightest to darkest"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "!define UI_COLOR #1D8900"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "!define UI_COLOR_T1 #83E769"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "!define UI_COLOR_T2 #3FC71B"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "!define UI_COLOR_T3 #166800"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "!define UI_COLOR_T4 #0E4100"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "!define LOGIC_COLOR #3333C4"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "!define LOGIC_COLOR_T1 #C8C8FA"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "!define LOGIC_COLOR_T2 #6A6ADC"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "!define LOGIC_COLOR_T3 #1616B0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "!define LOGIC_COLOR_T4 #101086"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "!define MODEL_COLOR #9D0012"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "!define MODEL_COLOR_T1 #F97181"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "!define MODEL_COLOR_T2 #E41F36"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "!define MODEL_COLOR_T3 #7B000E"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "!define MODEL_COLOR_T4 #51000A"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "!define STATE_COLOR #896815"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "!define STATE_COLOR_T1 #AAAAAA"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "!define STORAGE_COLOR #A38300"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "!define STORAGE_COLOR_T1 #FFE374"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "!define STORAGE_COLOR_T2 #EDC520"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "!define STORAGE_COLOR_T3 #806600"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "!define STORAGE_COLOR_T2 #544400"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "!define USER_COLOR #000000"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam BackgroundColor #FFFFFFF"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam Shadowing false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam Class {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    FontColor #FFFFFF"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    BorderThickness 1"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    BorderColor #FFFFFF"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    StereotypeFontColor #FFFFFF"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    FontName Arial"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam Actor {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    BorderColor USER_COLOR"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    Color USER_COLOR"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    FontName Arial"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    BoxFontSize 15"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    BoxPadding 0"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    BoxFontColor #FFFFFF"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    FontName Arial"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam Participant {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    FontColor #FFFFFFF"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    Padding 20"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u0027shows access modifiers as is, instead of shapes"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "skinparam classAttributeIconSize 0"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam MinClassWidth 50"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam ParticipantPadding 10"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam Shadowing false"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam DefaultTextAlignment center"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam packageStyle Rectangle"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u0027hides members that are blank"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "hide empty members"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "hide circle"
      }
    ],
    "authorContributionMap": {
      "sogggy": 10,
      "-": 74
    }
  },
  {
    "path": "docs/images/UpdateTitleSequenceDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "skinparam Sequence {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    MessageAlign center"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "hide footbox"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "box Ui #LightGreen"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":MainWindow\" as MainWindow #LightGreen"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "end box"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "box Logic #LightBlue"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":LogicManager\" as LogicManager #LightBlue"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":MainPageParser\" as MainPageParser #LightBlue"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":OpenBudgetCommandParser\" as OpenBudgetCommandParser #LightBlue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":OpenBudgetCommand\" as OpenBudgetCommand #LightBlue"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":CommandResult\" as CommandResult #LightBlue"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "end box"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "box Model #LightYellow"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":ModelManager\" as ModelManager"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "end box"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "box State #Orange"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "participant \":StateManager\" as StateManager #Orange"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "end box"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "[-\u003e MainWindow : \"open 1\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate MainWindow"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainWindow -\u003e LogicManager : execute(\"open 1\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate LogicManager"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "create MainPageParser"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "LogicManager -\u003e MainPageParser : new MainPageParser()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate MainPageParser"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainPageParser --\u003e LogicManager"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate MainPageParser"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "LogicManager -\u003e MainPageParser : parseCommand(\"open 1\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate MainPageParser"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "create OpenBudgetCommandParser"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainPageParser -\u003e OpenBudgetCommandParser : new OpenBudgetCommandParser()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate OpenBudgetCommandParser"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommandParser --\u003e MainPageParser"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate OpenBudgetCommandParser"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainPageParser -\u003e OpenBudgetCommandParser : parse(\"1\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate OpenBudgetCommandParser"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "create OpenBudgetCommand"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommandParser -\u003e OpenBudgetCommand : new OpenBudgetCommand(1)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate OpenBudgetCommand"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommand --\u003e OpenBudgetCommandParser : command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate OpenBudgetCommand"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommandParser --\u003e MainPageParser : command"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate OpenBudgetCommandParser"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommandParser -[hidden]-\u003e MainPageParser"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "destroy OpenBudgetCommandParser"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainPageParser --\u003e LogicManager : command"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate MainPageParser"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "MainPageParser -[hidden]-\u003e LogicManager"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "destroy MainPageParser"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "LogicManager -\u003e OpenBudgetCommand : execute(model)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate OpenBudgetCommand"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommand -\u003e ModelManager : openBudget(budgetIndex)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate ModelManager"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager -\u003e ModelManager : setOpenCommandState(budgetIndex)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate ModelManager"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager --\u003e ModelManager"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate ModelManager"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager -\u003e StateManager : setOpenCommandState(pageName, expenditureValue, threshold)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate StateManager"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "StateManager --\u003e ModelManager"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate StateManager"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "ModelManager --\u003e OpenBudgetCommand"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate ModelManager"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "create CommandResult"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommand -\u003e CommandResult : new CommandResult(MESSAGE_SUCCESS)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "activate CommandResult"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "CommandResult --\u003e OpenBudgetCommand : commandResult"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate CommandResult"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "OpenBudgetCommand --\u003e LogicManager : commandResult"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate OpenBudgetCommand"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "LogicManager --\u003e MainWindow : commandResult"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate LogicManager"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "[\u003c--MainWindow"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "deactivate MainWindow"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "sogggy": 106
    }
  },
  {
    "path": "docs/index.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "title: NUSave"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[![CI Status](https://github.com/AY2021S1-CS2103T-T11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S1-CS2103T-T11-4/tp/actions)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "[![codecov](https://codecov.io/gh/AY2021S1-CS2103T-T11-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S1-CS2103T-T11-4/tp)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![Ui](images/Ui.png)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Are you a **university student who stays on campus** and has difficulty managing your expenses?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Are you tired of having to look through countless spreadsheets and memos just to figure out how much you have spent this month?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Do you wish there exists a desktop application that can help you organise, track and manage all your expenses?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Look no further, NUSave is just the tool for you!"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Built by 5 university students staying on campus, we understand **the difficulties of having to manage multiple budgets**,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "be it for your daily expenses, school projects or club activities, amidst your busy schedule. NUSave aims to help alleviate"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "the hassle that comes along with managing multiple budgets by providing a **one-stop solution** to all your problems."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "With NUSave, you can **create, edit and delete budgets and expenditures**, as well as **generate statistics"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "based on your entries** to gain useful insights regarding your spending habits."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "What\u0027s more, NUSave has:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- a **Command Line Interface (CLI)** catered to those who can type fast and prefer to use a keyboard. In other words, you"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "navigate the application and execute instructions by keying in text-based commands into the command box provided."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- a **Graphical User Interface (GUI)** to provide you with a visually appealing and aesthetic user experience. Essentially,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "the current status of the application is reflected live on-screen so what you see is what you get!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "If you are interested in using NUSave, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#4-quick-start)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "If you are interested about developing NUSave, the [**Developer Guide**](DeveloperGuide.html) is a good place to start."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "**Acknowledgements**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 24,
      "-": 13
    }
  },
  {
    "path": "docs/team/davidliew9.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "title: David Liew\u0027s Project Portfolio Page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "## Project: NUSave"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "NUSave is a desktop budgeting application used to manage an individual\u0027s budgets and expenses. NUSave can hold multiple "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "budgets, of which each budget holds multiple expenditures. The user interacts with it using a command line interface "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "(CLI), and it has a GUI created with JavaFX. It is written in Java, and has about 10,000 LoC."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Given below are my contributions to the project:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- **Feature**: Added ability to delete budgets."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - What it does: `delete` allows for users to delete specific budgets, when it is no longer necessary or when they "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    have made a wrong budget."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - Justification: This feature allows for the application to not become overly cluttered with unused budgets, and "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    improves the overall neatness of the interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- **Feature**: Added ability to delete expenditures."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - What it does: `delete` Allows for users to delete specific expenditures, when it is no longer necessary or when they have "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    input a wrong expenditure."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - Justification: The feature allows for individual budgets to only have the relevant expenditures, and improve the "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    overall neatness of the interface"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- **Feature**: Added ability to edit expenditures."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - What it does: allows for users to edit expenditures of the specific index, granting them the ability to change,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    the name, price and tag of an expenditure"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - Justification: Improves the app significantly saving the users time in not having to delete and recreate an"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    expenditure when there is a field to change."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - Highlight: Users are able to choose multiple fields that they wish to edit at one go, the challenge was to be able"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    to enable different combinations of field they wish to edit while still being able to detect when no fields have been"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- **Code Contributed**: [RepoSense Link](https://nus-cs2103-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003ddavidliew9\u0026zR\u003dAY2021S1-CS2103T-T11-4%2Ftp%5Bmaster%5D\u0026zACS\u003d261.9682120869456\u0026zS\u003d2020-08-14\u0026zFS\u003d\u0026zU\u003d2020-11-07\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- **Project Management**:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - Identified and created Issues in milestones v1.2, v1.3"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - [PRs reviewed by me](https://github.com/AY2021S1-CS2103T-T11-4/tp/pulls?q\u003dis%3Apr+reviewed-by%3Adavidliew9)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- **Contributions to Documentation**:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - User Guide:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        - Added documentation for the commands `delete budget`, `delete expenditure`, `edit expenditure`,`exit`."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - Developer Guide:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        - Added documentation for introduction, use cases."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        - Added preface for `Add Commands`, `Delete Commands`, `Edit Commands`."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        - Added Sequence Diagrams for `Edit Expenditure`, `Add Expenditure`, `Delete Budget`, `Delete Expenditure`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        - Added Activity Diagrams for `Edit Expenditure`, `Add Expenditure`, `Delete Budget`, `Delete Expenditure`."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        - Added Implementation details for `Edit Expenditure`, `Add Expenditure`, `Delete Budget`, `Delete Expenditure`.  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "- **Community**:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    - Reported bugs and suggestions for other teams during PE dry run [PED link](https://github.com/davidliew9/ped/issues)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "------"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**Contributions to Developer Guide (Extracts)**:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "#### 4.3.3. Edit Commands"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This section describes the details surrounding events at which users would wish to edit information from NUSave. "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Specifically, editing can happen in two areas; when a user wishes to edit a budget from the `Main Page`, or when a "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "user wishes to edit an expenditure from a budget within the `Budget Page`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "##### 4.3.3.2. Edit Expenditure"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This section explains the `Edit Expenditure Command`."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following activity diagram to shows the events that occur when the user executes the `Edit Expenditure Command`."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![AddExpenditureCommand Activity Diagram](../diagrams/commandsPlantUML/diagram/EditExpenditureActivityDiagram.png) "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 4.3.2.2.1: Activity Diagram for edit expenditure command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following command results in the specified expenditure of the particular index to be edited within the "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Budget Page`. As such, this command requires a compulsory index to specify the particular expenditure, along with a"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "field at which the user would like to edit (`NAME`, `PRICE`, `TAG`)."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Only when the index is valid (within the range of existing expenditures), and the user provides at least one field to "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "be edited, does the command execute successfully."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "The following sequence diagram shows the interactions between the `Logic` and `Model` components of NUSave,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "depicting a scenario where the user would like to edit the first expenditure on his/her list, and change the previous "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`NAME`, `PRICE` and `TAG` to `Basketball`, `50` and `Ball` accordingly."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![EditExpenditureCommand Sequence Diagram](../diagrams/commandsPlantUML/diagram/EditExpenditureCommand.png)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 4.3.3.2.1: Sequence diagram  for delete edit command in budget page view."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "1. Beginning with the `LogicManager`, the `LogicManager` hands the given user input to the `BudgetPageParser` "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "to be parsed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "2. The `BudgetPageParser` will identify the command given by the user and create an `EditExpenditureCommandParser`."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "3. The `BudgetPageParser` will pass the user input into the newly created `EditExpenditureCommandParser`."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "4. The `EditExpenditureCommandParser` will create an `ExpenditureIndex` with the given parameters **index**  from the"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "user input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "5. The `EditExpenditureCommandParser` will then create an `EditExpenditureDescriptor` with the given parameters of "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**name**, **price** and **tags**."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "6. The `EditExpenditureCommandParser` will then create an `EditExpenditureCommand` with the `Expenditure Index` and "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`EditExpenditureDescriptor`."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "7. The `EditExpenditureCommandParser` will then return the `EditExpenditureCommand` object back to the `LogicManager`."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "8. `LogicManager` will now call the `execute` method in the `EditExpenditureCommand` object, with the `Model` as a "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "parameter."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "7. The `EditExpenditureCommand`\u0027s `execute` method will now call the `editExpenditure` method of the existing "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Model` object passed in and update the `Expenditure` with a new `Expenditure` object within NUSave."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "8. The `EditExpenditureCommand` then returns a `CommandResult` indicating the successful editing of the "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "`Expenditure`."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "With the above sequence, an expenditure will be successfully edited by the user in his NUSave application, and it will "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "be reflected on the user interface through the successful `CommandResult` and updated budget list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "-----"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "**Contributions to Developer Guide (Extracts)**:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "#### 5.3.3. Editing an expenditure: `edit`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Format: `edit INDEX [n/NAME] [p/PRICE]`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "-------| -----------| ------------| ------"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "\\-     | `INDEX`    | Required    | Index of the expenditure displayed on NUSave"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " n/    | `NAME`     | Optional    | Name of the expenditure to be edited to"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " p/    | `PRICE`    | Optional    | Price of the expenditure to be edited to"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "You can use this command to edit the expenditure at the given `INDEX`."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "When you edit a expenditure, the information on its expenditure card will be updated immediately."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " \u003e ⚠️ Although both `NAME` and `PRICE` fields are optional, the command must include at least one of these prefixes."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "✏️ Example: `edit 1 n/Long Sleeve Shirt p/20`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "This will rename the expenditure at index 2 to \"Long Sleeve Shirt\" with price \"$20\" as seen in Figure 5.3.3.1 below:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "![Example of edit expenditure command](../images/CommandScreenShots/5_3_3_1_editExpenditure.png)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "Figure 5.3.3.1. Example of edit expenditure command"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "-----"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 5,
      "davidliew9": 119
    }
  },
  {
    "path": "docs/team/ekchinhui.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "# Ek Chin Hui\u0027s Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "## Project: NUSave"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "NUSave is a desktop budgeting application used to manage an individual\u0027s budgets and expenses. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "NUSave can hold multiple budgets, of which each budget holds multiple expenditures. "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The user interacts with it using a command line interface (CLI), and it has a GUI created with JavaFX. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "It is written in Java, and has about 10,000 LoC."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Given below are my contributions to the project:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "- **Feature**: Added ability to render both budgets and expenditures in the GUI of NUSave."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - Justification: This is a core feature that allows the display of both budgets and expenditures"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    using `open` and `close` commands. This builds upon the original implementation of AB3 using the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    ObservableList. The challenge in implementation was in encapsulating the `Budget` and `Expenditure`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    classes with little dependency on the UI classes."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "- **Feature**: Change implementation of storage to store budgets and expenditures."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - Justification: This feature is necessary to store budget and expenditure data"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    to be accessed in subsequent use of the application. Since there is an additional"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    layer of data compared to AB3, a deep understanding of the original implementation"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    was necessary to implement this feature."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "- **Feature**: Added ability to find and list expenditures in NUSave."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - What it does: `find` command allows users to be able to filter specific expenditures"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    in the current budget which matches the input search term. `list` command allows users"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    to display all expenditures within the current budget."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - Justification: This feature allows the user to be able to quickly retrieve"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    information about an expenditure especially if there are many expenditure entries."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "- **Code Contributed**: [Reposense Link](https://nus-cs2103-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dekchinhui)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "- **Project Management**:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - Created Issues in milestones v1.2 and v1.3"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - [PRs reviewed by me](https://github.com/AY2021S1-CS2103T-T11-4/tp/pulls?q\u003dis%3Apr+reviewed-by%3A%40me+is%3Aclosed)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "- **Contributions to Documentation**:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - User Guide:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        - Added documentation for the commands `find` and `list`."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        - Added documentation for Frequently Asked Questions."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - Developer Guide:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        - Added description of overall architecture."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        - Added implementation details for `Model` and `Commons` Component."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        - Added implementation details for `find` and `lost` commands."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        - Added non-functional requirements."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        - Added instructions for manual testing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "- **Community**:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - Reported bugs and suggestions for other teams "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    (examples [1](https://github.com/AY2021S1-CS2103T-W15-2/tp/issues/184),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    [2](https://github.com/AY2021S1-CS2103T-W15-2/tp/issues/183),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    [3](https://github.com/AY2021S1-CS2103T-W15-2/tp/issues/182),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    [4](https://github.com/AY2021S1-CS2103T-W15-2/tp/issues/181))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Contributions to User Guide (Extracts)**:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "#### 5.2.4. Finding budgets: `find`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "(Contributed by Chin Hui)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " ------ | ---------- | ----------- | --------"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \\-     |  `KEYWORD` | Required    | Keyword to be used for searching"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "You can use this command to find budgets whose names contain the given `KEYWORD`."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "When you find budgets, the list view will filter to only display budgets whose names contains the given `KEYWORD`."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e 📕 The filter is case-insensitive."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e 📕 If no budgets are displayed, it means that none of the budgets matches your search term. "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " \u003e 📕 You can use the [list budgets command](#525-listing-budgets-list) to display all budgets again."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "✏️ Example: `find Temasek Hall`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "This will find all budgets with the keyword \u0027Temasek Hall\u0027 in the name of the budget as seen in Figure 5.2.4.1 below:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "![Example of find budgets command](../images/CommandScreenShots/5_2_4_1_findBudgets.png)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Figure 5.2.4.1. Example of using the find budgets command."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**Contributions to Developer Guide (Extracts)**:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "### 3.1. Architecture"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cimg src\u003d\"../images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Figure 3.1.1: Architecture Diagram of NUSave components."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The ***Architecture Diagram*** given above explains the high-level design of the application."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Given below is a quick overview of each component:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "**`Main`** has two classes called [`Main`] and [`MainApp`]."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "It has two primary responsibilities:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* At launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup methods where necessary."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The rest of the application consists of five components:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. [**`UI`**](#ui-component): Handles the UI of the application."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. [**`Logic`**](#logic-component): Executes the commands."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. [**`Model`**](#model-component): Holds the data of the application in memory."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. [**`State`**](#state-componenet): Remembers the current state of the application."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "For each of the five components:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Its API is defined in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "* Its functionality is exposed using a concrete `{Component Name} Manager` class which implements the corresponding API"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "`interface` mentioned in the previous point."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    - For example, the `Logic` component (see the class diagram below) defines its API in the `Logic.java` interface and exposes its functionality"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    using the `LogicManager.java` class which implements the `Logic` interface."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "![Class Diagram of the Logic Component](../images/LogicClassDiagram.png)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Figure 3.1.2: Class Diagram of Logic Component."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "Figure 3.1.3: Sequence Diagram of component interactions for `delete 1` command used to delete a budget."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "The ***Sequence Diagram*** given above shows how the components interact with each other for the scenario where the user"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "issues the command `delete 1`."
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 126
    }
  },
  {
    "path": "docs/team/sogggy.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "title: Chew Song Yu\u0027s Project Portfolio Page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "## Project: NUSave"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "NUSave is a desktop budgeting application used to manage an individual\u0027s budgets and expenses. NUSave can hold multiple"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "budgets, of which each budget holds multiple expenditures. The user interacts with it using a command line interface (CLI),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "and it has a GUI created with JavaFX. It is written in Java, and has about 10,000 LoC."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Given below are my contributions to the project:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "-  **Feature**: Added a new high-level component (aside of those already available from AB3), **State**: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "PR [#43](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/43)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    - **What it is**: `State` manages the state of NUSave. It represents what page the application is currently on "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    (Main Page/Budget Page) and stores stateful information based on the current page it is on.  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- Justification: This feature allows data concerning stateful information to be separated from the rest of the other"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\tcomponents, so that the other components can easily access these information as needed. "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- Highlights: Handling many of the commands in NUSave, especially commands related to expenditures in NUSave (i.e. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\tadding/editing/deleting expenditures) all involve this component, since the GUI of NUSave updates to display the total"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\texpenditure of a budget to the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "-  **Feature**: Setting up of JavaFx components to dynamically update the information displayed to the user. These information"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "includes the threshold of the budget, and the current total expenditure of that budget: PRs [#78](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/78), "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "[#199](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/199)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- Justification: This improves the user experience greatly, as the user can see in real time the new total expenditure of"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\tthat budget, as he/she adds/deletes/edits the cost of each expenditure."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- **Feature**: Added the ability to open and close pages in NUSave: PR [#43](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/43)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- What it does : It allows the users to be able to open a specific budget using the command line. By doing so, it leads to"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\tvarious components on the Graphical User Interface (GUI) to update with new and stateful information."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- Justification: This feature improves the application significantly, as the command was implemented in a way such that"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\tinformation that previously existed on one page would be replaced by information pertaining to the new page, allowing the"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\tuser to view a clean interface that is not overloaded with unnecessary information."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- **Feature**: Added ability to find and list budgets in NUSave: PR [#132](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/132)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- What it does: `find` allows the users to be able to filter specific budgets in NUSave which matches the input search term."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t`list` allows the users to list all available budgets that are stored in NUSave."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- Justification: This feature allows the user to be able to quickly filter to only view relevant budgets that he/she is"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\tinterested in, without having to scroll through their many budgets that they have stored in NUSave."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- **Feature** : Added ability to add expenditures in NUSave: PR [#49](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/49)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- What it does: `add` allows the users to be able to add expenditures, with its tagged name and price into NUSave."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- Justification: This features allows users to be able to store expenditures in the application, an essential component of NUSave. "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- **Code Contributed**: [RepoSense Link](https://nus-cs2103-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dsogggy\u0026tabRepo\u003dAY2021S1-CS2103T-T11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- **Project Management**:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- Created Issues in milestones v1.2, v1.3"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- [PRs reviewed by me](https://github.com/AY2021S1-CS2103T-T11-4/tp/pulls?q\u003dis%3Apr+reviewed-by%3Asogggy)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- **Enhancements to Existing Features**:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- Updated the GUI\u0027s CSS and created JavaFx components: PRs [#49](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/49),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t[#69](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/69), [#91](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/91)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- **Contributions to Documentation**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- User Guide:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t\t- Added documentation for `open`, `add` and `close` commands."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t\t- Added documentation for Glossary section."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- Developer Guide:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t\t- Added description for `Ui` and `State` architectural components."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t\t- Added implementation details for `State` component, and Dynamic Updating of GUI of NUSave."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "- **Community**:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t- Reported bugs and suggestions for other teams in the class (examples [1](https://github.com/AY2021S1-CS2103T-T12-3/tp/issues/215),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t[2](https://github.com/AY2021S1-CS2103T-T12-3/tp/issues/219), [3](https://github.com/AY2021S1-CS2103T-T12-3/tp/issues/215),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\t[4](https://github.com/AY2021S1-CS2103T-T12-3/tp/issues/217))"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "**Contributions to Developer Guide (Extracts)**:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1.1. This section includes an extract of the developer guide, elaborating on dynamic updating of information "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "on NUSave\u0027s GUI."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "##### Sequence Diagram"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "The following sequence diagram shows the interactions between the `Ui`, `Logic`,`Model` and `State` components of NUSave,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "depicting a scenario where the user opens a budget."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "![Update Title Sequence Diagram](../images/UpdateTitleSequenceDiagram.png)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 4.4.2.2.1.1. Sequence Diagram for Open Command"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. `MainWindow` is called with the String `open 1`."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. `MainWindow` uses `LogicManager` to execute the given user input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. The `LogicManager` uses the `MainPageParser` to parse the given user input."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. The `MainPageParser` identifies the command given by the user and creates an `OpenBudgetCommandParser`."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "3. The `MainPageParser` passes the user input into the newly created`OpenBudgetCommandParser`."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "4. The `OpenBudgetCommandParser` creates a `OpenBudgetCommand` object."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "5. The `OpenBudgetCommandParser` returns the `OpenBudgetCommand` object back to `LogicManager`."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "6. `LogicManager` calls the `execute` method in the `OpenBudgetCommand` object, with the `Model` as a "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "parameter."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "7. The `OpenBudgetCommand`\u0027s `execute` method calls the `openBudget` method of the existing "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "`Model` object passed in."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "8. `ModelManager` calls its own `setOpenCommandState` method, which retrieves relevant data to update `State`."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "9. `ModelManager` calls `State`\u0027s `setOpenCommandState` method, updating state data relevant to opening a budget."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "10. `State`\u0027s `StringProperty` and `BooleanProperty` attributes are updated, which notifies `InfoBox`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "and `Title` to update."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "With the above sequence, a budget will successfully be opened, and the `Title` component reflects the name of "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "the budget, while the `InfoBox` component reflects the total expenditure and threshold of the budget."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": " 1.2. This section elaborates about what `Ui` in NUSave is about."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": " ![Structure of the UI Component](../images/UiClassDiagram.png)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": " **API**: `Ui.java`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": " The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": " `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": " The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": " in the `src/main/resources/view` folder. For example, the layout of the `MainWindow` is specified in `MainWindow.fxml`."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": " In order to dynamically render data to be displayed to the user, when `setUpGuiComponents()` in `MainWindow` is called, "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": " the method `setStateBinders()` sets Observer objects to observe changes in `State`. For a complete explanation,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": " refer to [4.4.2. Dynamic Updating](#442-dynamic-updating)."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": " In summary, the `UI` component:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Listens for changes to `Model` and `State` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1.3. This section provides context on how `State` affects how commands are parsed by parsers in NUSave."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "The `Logic` component in NUSave relies on data stored in `State` to decide which parser in NUSave will take"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "control of the execution of commands."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "![Delete Command Activity Diagram](../images/DeleteCommandActivityDiagram.png)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 4.1.1. Figure of Delete Command Activity Diagram"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "To elaborate further, using Figure 4.1.1. as a reference, when the user executes a delete command, `delete 1`,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "while on the main page:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "1. `Logic` executes the command, checking whether the current page is a budget page or main page, depending on the "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "current page (represented by `currentPage` attribute in `StateManager`) of NUSave."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2. Since NUSave\u0027s is current on `Page.MAIN`, `MainPageParser` takes control of the execution, parsing the command input by the user."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "3. If the command syntax is valid, the delete command is parsed."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    3a. If the syntax is invalid, a `ParseException` is thrown."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "4. NUSave deletes the budget based on the index specified by the user, i.e. the 1st budget displayed."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "**Contributions to User Guide (Extracts)**:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "2.1. This section elaborates on how a user can use the add expenditure command in NUSave."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#### 5.3.1. Adding an expenditure: `add`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Format: `add n/NAME p/PRICE [t/TAG]`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "-------| -----------| ------------| ------"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": " n/    | NAME       | Required    | Name of the expenditure"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": " p/    | PRICE      | Required    | Price of the expenditure"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": " t/    | TAG        | Optional    | Additional information about the expenditure"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "You can use this command to add a new expenditure with the given `PRICE` and optional `TAG` within a budget."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "When you add a new expenditure, it will be displayed as an expenditure card in the list view."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": " "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "✏️ Example: `add n/Graphic Calculator p/199.90 t/Math`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sogggy"
        },
        "content": "This will add a new expenditure called \"Graphic Calculator\" with a price of $199.90 and a \"Math\" tag as seen in "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 5.3.1.1. below:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": "![Example of add expenditure command](../images/CommandScreenShots/5_3_1_1_addExpenditure.png)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sogggy"
        },
        "content": "Figure 5.3.1.1. Example of using the add expenditure command."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "~~~~~~~~~~~~"
      }
    ],
    "authorContributionMap": {
      "sogggy": 162,
      "yu-ming-chen": 4,
      "wenhaogoh": 4
    }
  },
  {
    "path": "docs/team/wenhaogoh.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "title: Goh Wen Hao\u0027s Project Portfolio Page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## Project: NUSave"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "NUSave is a desktop budgeting application used to manage an individual\u0027s budgets and expenses. NUSave can hold multiple budgets, of which each budget holds multiple expenditures. The user interacts with it using a command line interface (CLI), and it has a GUI created with JavaFX. It is written in Java, and has about 10,000 LoC."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Given below are my contributions to the project:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "-  **Feature**: Added the ability to undo/redo previous commands: PRs [#285](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/285), [#291](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/291)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - What it does: allows the user to undo all previous commands that modifies NUSave data one at a time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- Justification: This feature improves user experience significantly as it provides a convenient way for users to rectify their mistakes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- Highlights: The implementation was challenging as it required me to come up with my own implementation of a doubly linked list, `Node\u003cT\u003e` and the logic behind `HistoryManager\u003cT\u003e`. As it was the last feature to be implemented, it required in-depth analysis of design alternatives to extent the application without modifying the existing code. Furthermore, I had to come up with a way to remember the current page view to accurately replicate it during when undoing and redoing which resulted in the creation of `VersionedNusave`."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- **Feature**: Added the ability to clear budgets in NUSave: PRs [#127](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/127)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- What it does : It allows the users to delete all existing budgets with a single budgets."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- Justification: This feature improves user experience significantly as it provides a convenient way for users to purge sample data without having to delete them one by one."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "-  **Backend**: Changed implementation of storage to store `Budget` and `Expenditure`: PRs [#44](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/44)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- Justification: This helped to path the way for other developers to continue working on the application as it enabled them to store and retrieve data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- **Frontend**: Revamped the GUI\u0027s CSS entirely according to Figma mock-up: PRs [#86](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/86), [#96](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/96), [#97](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/98), [#99](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/99), [#101](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/101), [#145](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/145)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- Justification: This modification improves user experience significantly as it gives the application a fresh look as compared to AB3."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- **Code Contributed**: [RepoSense Link](https://nus-cs2103-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dsogggy\u0026tabRepo\u003dAY2021S1-CS2103T-T11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- **Project Management**:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - Setup github organisation and repository"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - Setup continuous integration"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    - Managed releases `v0.1, v1.3.trial, v1.3, v1.4`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- Created issues in milestones v1.2, v1.3"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- [PRs reviewed by me](https://github.com/AY2021S1-CS2103T-T11-4/tp/pulls?q\u003dis%3Apr+reviewed-by%3Asogggy)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- **Enhancements to Existing Features**:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- Wrote stub generators for `TypicalBudget` and `TypicalExpenditure`: PRs [#137](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/137)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- Added optional threshold for `Budget`: PRs [#128](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/128)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- Removed all traces of AB3 from code base: PRs [#61](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/61)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- **Contributions to Documentation**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- User Guide:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t\t- Added documentation for the `clear`, `undo` and `redo` commands."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t\t- Added documentation for Overview, GUI Layout and Quick Start sections**."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- Developer Guide:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t\t- Added description for `Storage` architectural component."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t\t- Added implementation details for Parsers."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t\t- Added implementation details for Undo \u0026 Redo Commands."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t\t- Added implementation details for List View Rendering."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- **Community**:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\t- Reported bugs and suggestions for other teams in the class: PRs [#1](https://github.com/wenhaogoh/ped/issues/1), [#2](https://github.com/wenhaogoh/ped/issues/2), [#3](https://github.com/wenhaogoh/ped/issues/3), [#4](https://github.com/wenhaogoh/ped/issues/4), [#5](https://github.com/wenhaogoh/ped/issues/5), [#6](https://github.com/wenhaogoh/ped/issues/6)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### Contributions to Developer Guide (Extracts)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#### 4.3.6. Undo \u0026 Redo Commands"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The undo and redo commands are implemented using the following classes:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "| Class             | Details            | Purpose |"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "| -------- | --------------------------- | -------------- |"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "| `VersionedNusave` | Contains a `BudgetList` and `BudgetIndex` | Represents the data and view of NUSave at a certain point in time |"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "| `Node\u003cT\u003e`         | Contains a value of type `T`, next `Node\u003cT\u003e` and previous `Node\u003cT\u003e` | Represents a doubly linked list |"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "| `HistoryManager\u003cT\u003e` | Contains a pointer to a `Node\u003cT\u003e` | Represents an iterator to iterate through a doubly linked list represented by `Node\u003cT\u003e` |"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The following class diagram shows how the classes interact with each other:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo class diagram](../diagrams/UndoRedoClassDiagram.png)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The pointer in `HistoryManager\u003cVersionedNusave\u003e` is always pointing to the latest `VersionedNusave` in a doubly linked list represented by `Node\u003cT\u003e`. If an undo command is executed, it will load the previous `VersionedNusave` and move the pointer backward. If a redo command is executed, it will load the next `VersionedNusave` and move the pointer forward. Whenever the user makes changes to NUSave data, a `VersionedNusave` is instantiated with a deep copy of the `BudgetList` from `Nusave` and the `BudgetIndex` from `State`. It replaces the next `Node\u003cT\u003e` (if any) of the `Node\u003cT\u003e` that `HistoryManager\u003cVersionedNusave\u003e` is currently pointing to before the pointer is moved forward."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "To better illustrate the process, an example usage shown below:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Step 1: The user launches NUSave. `HistoryManager\u003cVersionedNusave\u003e` is instantiated with an empty doubly linked list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo object diagram for step 1](../diagrams/UndoRedoState0.png)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Step 2: The user makes changes to NUSave data by creating a `Budget` named \"demo\". Before the change is made, a `VersionedNusave` is instantiated in case the user wants to undo. `HistoryManager\u003cVersionedNusave\u003e` adds this `VersionedNusave` to the doubly linked list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo object diagram for step 2](../diagrams/UndoRedoState1.png)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Step 3: The user executes the undo command. Before reverting the changes, a `VersionedNusave` is instantiated in case the user wants to redo. `HistoryManager\u003cVersionedNusave\u003e` adds this `VersionedNusave` to the doubly linked list before moving its pointer backward to retrieve the previous `VersionedNusave`. The `BudgetList` from the previous `VersionedNusave` is loaded into `Nusave` while the `BudgetIndex` from the previous `VersionedNusave` is used to set `State`. Once this is done, the GUI should reflect that the \"demo\" budget is removed from NUSave."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo object diagram for step 3](../diagrams/UndoRedoState2.png)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Step 4: The user executes the redo command. `HistoryManager\u003cVersionedNusave\u003e` retrieves the next `VersionedNusave` from the pointer and moves its pointer forward. The `BudgetList` from the next `VersionedNusave` is loaded into `Nusave` while the `BudgetIndex` from the next `VersionedNusave` is used to set `State`. Once this is done, the GUI should reflect that the \"demo\" budget is added back to NUSave."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo object diagram for step 4](../diagrams/UndoRedoState3.png)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Step 5: The user makes changes to NUSave data by creating a `Budget` named \"demo2\". Before the change is made, a `VersionedNusave` is instantiated in case the user wants to undo. `HistoryManager\u003cVersionedNusave\u003e` adds this `VersionedNusave` to the doubly linked list before moving its pointer forward."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo object diagram for step 5](../diagrams/UndoRedoState4.png)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "The following sequence diagram shows how the undo command is executed:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Undo redo sequence diagram](../diagrams/UndoSequenceDiagram.png)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### Contributions to User Guide (Extracts)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "## 3. GUI Layout"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "In this section, you will be given an introduction to the layout of NUSave\u0027s Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "This will help you better understand what each component that you observe on-screen represents."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "There are a total of two pages that you can navigate to when using NUSave:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- Main page"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "- Budget page"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 3.1. Main Page View"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You will be directed to the main page upon launching NUSave. On this page, you can see the list of"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "budgets that are currently stored in NUSave."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Here is how the main page should look like:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of main page view](../images/GuiLayoutScreenShots/3_1_1_mainPage.png)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.1.1. Example of the main page view."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Below is a table containing all the components that can be found on the main page accompanied by their respective purposes:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Component      | Purpose"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "-------------- | -------"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Command Box    | A text field for you to enter your desired commands."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Result Display | A **scrollable** panel that displays the response messages of a command after it has been executed."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Info Box       | A panel that displays the current date and time."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Title          | A text field that displays the name of the application."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Budget Card    | A card that represents a budget stored in NUSave. It contains the index and name of the budget as well as the total number of expenditures it contains."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "List View      | A **scrollable** panel that can hold multiple budget cards."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Here is the breakdown of an individual budget card:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of budget card](../images/GuiLayoutScreenShots/3_1_2_budgetCard.png)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.1.2. Example of a budget card."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Below is a table containing all the components that can be found in a budget card accompanied by their respective purposes:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Component         | Purpose"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "----------------- | -------"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Index             | The index used to reference this budget."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Name              | The name of this budget."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Expenditures Count | The total number of expenditures stored in this budget."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### 3.2. Budget Page View"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "(Contributed by Wen Hao)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "You will be directed to a budget page when you use the [open budget command](#528-opening-a-budget-open)."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "On this page, you can see the list of expenditures that are currently stored in the budget that you have opened."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Here is how a budget page should look like:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of budget page view](../images/GuiLayoutScreenShots/3_2_1_budgetPage.png)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.2.1. Example of a budget page view."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Below is a table containing all the components that can be found on a budget page accompanied by their respective purposes:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Component | Purpose"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "--------- | -------"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Command Box | A text field for you to enter your desired commands."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Result Display | A **scrollable** panel that displays the response messages of a command after it has been executed."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Info Box | A panel that displays the total amount you have spent so far based on the expenditures added to the budget. It will also display the threshold of the budget if it has one."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Title | A text field that displays the name of the budget that is currently open."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Expenditure Card | A card that represents an expenditure stored in the budget that is currently open. It contains the index, name, tags and price of the expenditure."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "List View | A **scrollable** panel that can hold multiple expenditure cards."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Here is the breakdown of an individual expenditure card:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "![Example of expenditure card](../images/GuiLayoutScreenShots/3_2_2_expenditureCard.png)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Figure 3.2.2. Example of an expenditure card."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Below is a table containing all the components that can be found in an expenditure card accompanied by their respective purposes:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Component     | Purpose"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "------------- | -------"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Index         | The index used to reference this expenditure."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Name          | The name of this expenditure."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Creation Date | The date at which this expenditure is added."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Tags          | The tags that this expenditure has been assigned."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Price         | The price of this expenditure."
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 181
    }
  },
  {
    "path": "docs/team/yu-ming-chen.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "title: Chen YuMing\u0027s Project Portfolio Page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "## Project: NUSave"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "NUSave is a desktop budgeting application used to manage an individual\u0027s budgets and expenses. NUSave can hold multiple"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "budgets, of which each budget holds multiple expenditures. The user interacts with it using a command line interface"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(CLI), and it has a GUI created with JavaFX. It is written in Java, and has about 10,000 LoC."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Given below are my contributions to the project:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Feature** : Added ability to create budget in NUSave."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- What it does: `create` allows the users to be able to create budgets, with its name and threshold value into"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\tNUSave."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Justification: This features allows users to be able to store budgets in the application, an essential component"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\tof NUSave. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Feature** : Added ability to edit budget in NUSave."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- What it does: `edit` allows the users to be able to edit a budget\u0027s name and threshold value in NUSave."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Justification: This features allows users to be able to edit a specific budget\u0027s name and threshold value in the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\tapplication, an essential component of NUSave. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Feature** : Added ability to view help in NUSave."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- What it does: `help` allows the users to view the help commands in NUSave."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Justification: This features allows users to view all command help instructions in NUSave. "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Highlight: This feature displays a different set of help instructions depending on which page the user is on."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\tFor example, if user is on main page, it will display unique command to the main page such as open budget and create budget command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Feature** : Added ability to sort budgets in NUSave."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- What it does: `sort` allows the users to be able to sort budgets in NUSave."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Justification: This features allows users to be able to sort all budgets in NUSave either by their name in "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\talphabetical order, or their created date with the latest on top."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Feature** : Added ability to sort expenditures in NUSave."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- What it does: `sort` allows the users to be able to sort expenditures in NUSave."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Justification: This features allows users to be able to sort all expenditures in a budget either by their name in "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\talphabetical order, or their created date with the latest on top."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Highlight: The implementation can be challenging as I need to implement different Comparator for the sort command,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\twhile abiding by the OO principle."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Feature** : Added ability dynamically view the current date and time in NUSave."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- What it does: Dynamically updating the date and time in the MAIN page view UI component of NUSave."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Justification: This features allows users to be able to track the current date and time while managing their"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\tbudget. "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Highlight: This enhancement affects UI component of NUSave by rendering current date and time. It also generates "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\tunique greeting message depending on the time of the day. The implementation too was challenging as it required the"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\tunderstanding of the java Thread class. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Code Contributed**: [RepoSense Link](https://nus-cs2103-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyu-ming-chen\u0026tabRepo\u003dAY2021S1-CS2103T-T11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Project Management**:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Created Issues in milestones v1.2, v1.3"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- [PRs reviewed by me](https://github.com/AY2021S1-CS2103T-T11-4/tp/pulls?q\u003dis%3Apr+reviewed-by%3Ayu-ming-chen)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Enhancements to Existing Features**:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Added the ability for `edit` expenditure to edit expenditure tags: PR [#272](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/272)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t    - What it does: `edit` expenditure tags allows the users to be able to edit tags on expenditure in NUSave."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \t- Justification: This features allows users to be able to replace and change tags on specific expenditure in the"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    \t application, an essential component of NUSave. "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    - Added NUSave icon to application UI interface: PR [#267](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/267)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Contributions to Documentation**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- User Guide:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t\t- Added documentation for `Symbols`, `Syntax format` and `Command summary` section."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t\t- Added documentation for the features `help`, `create` budget, `edit` budget, `sort` budget and `sort`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t\texpenditures."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t\t- Did cosmetic tweaks to existing documentation by including emoji for annotation."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t\t- Created and annotated all NUSave screenshots. PR [#212](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/212)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Developer Guide:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t\t- Added documentation for `Setting up` and `Logic component` in Design Architecture"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t\t- Added implementation details for `Create Budget`, `Edit Budget`, `Sort` and `Help` command with their"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t\trespective sequence daigram and activity diagram."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Community**:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\t- Reported bugs and suggestions for other team (T09-2) in the class during PE dry run (examples [T09-2 issues 116-141](https://github.com/yu-ming-chen/ped/issues)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Tools**:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "  * Created UI mock up for our application using Figma [#21](https://github.com/AY2021S1-CS2103T-T11-4/tp/pull/21)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "-------"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Contributions to Developer Guide (Extracts)**:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "#### 3.2.2. Logic Component"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Structure of the Logic Component](../images/LogicClassDiagram.png)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "**API**: `Logic.java`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`Logic` uses the `MainPageParser` and `BudgetPageParser` class to parse the user command. This results in a"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`Command` object which is executed by the `LogicManager`. The command execution can affect the `Model`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(e.g. adding an expenditure). The result of the command execution is encapsulated as a `CommandResult` object"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "which is passed back to the `Ui`. In addition, the `CommandResult` object can also instruct the `Ui` to perform"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "##### 4.3.1.1. Create Budget"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This section explains the `Create Budget Command`."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following activity diagram to shows the events that occur when the user executes the Create Budget Command."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![CreateBudgetCommand Activity Diagram](../diagrams/commandsPlantUML/diagram/CreateBudgetCommandActivity.png) "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 4.3.1.1: Activity diagram for create budget command."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following command occurs in the `Main Page` of NUSave, and results in the specified budget being created in"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "NUSave. This command therefore requires a compulsory name to specify the name of the budget to be created."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "The following Sequence Diagram shows the interaction between the `Logic` component and `Model` component of NUSave "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "depicting a scenario when the user wants to create a budget for his Temasek Hall basketball CCA by entering the command"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`create n/Temasek Hall Basketball p/100`."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![CreateBudgetCommand Sequence Diagram](../diagrams/commandsPlantUML/diagram/CreateBudgetCommand.png) "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 4.3.1.2: Sequence diagram for create budget command in main page view."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003eLifelines with a destroy marker (X) should end at the destroy marker (X) but due to a limitation of PlantUML, "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "1. The `LogicManager` uses the `MainPageParser` to parse the given user input."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "2. The `MainPageParser` will identify the command given by the user and pass the user input down to the"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "`CreateBudgetCommandParser`."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "3. The `CreateBudgetCommandParser` will create a `Budget` with the given parameters **name** and **threshold** from the"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "user input."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "4. The `CreateBudgetCommandParser` will then create a `CreateBudgetCommand` object with the created `Budget` object as"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "the input parameter."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "5. The `CreateBudgetCommandParser` will then return a `CreateBudgetCommand` object."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "6. `LogicManager` will now call the `execute` method in the `CreateBudgetCommand` object."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "7. The `CreateBudgetCommand` will now call the `addBudget` method of the existing `Model` object and add the `Budget`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "object created into NUSave."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "8. The `CreateBudgetCommand` then returns a `CommandResult` indicating the successful addition of the `Budget` object."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "With the above sequence, a budget will be successfully created by the user in his NUSave application, and it will be"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "reflected on the user interface."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "-------"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "- **Contributions to User Guide (Extracts)**:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "#### 5.2.1. Creating a budget: `create`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "(Contributed by Yu Ming)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Format: `create n/NAME [p/THRESHOLD]`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Prefix | Parameters | Requirement | Comments"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "------ | ---------- | ----------- | --------"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " n/    | `NAME`     | Required    | Name of the budget"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " p/    | `THRESHOLD`| Optional    | Target threshold of the budget"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "You can use this command to create a new budget with the given `NAME` and `THRESHOLD`."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "When you create a new budget, it will be displayed as a budget card in the list view."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "✏️ Example: `create n/Temasek Hall Student Council p/1200`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "This will create a new budget called \"Temasek Hall Student Council\" with a threshold value of $1200"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "as seen in Figure 5.2.1.1 below:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "![Example of create budget command](../images/CommandScreenShots/5_2_1_1_createBudget.png)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "Figure 5.2.1.1. Example of using the create budget command."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "-------"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 148
    }
  },
  {
    "path": "src/main/java/seedu/address/MainApp.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Config;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Version;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.ConfigUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.LogicManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.storage.JsonNusaveStorage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.storage.NusaveStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.UserPrefsStorage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.UiManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Version VERSION \u003d new Version(0, 6, 0, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String GREETING_MESSAGE \u003d \"Welcome to NUSave!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String DATA_LOADED_SUCCESS_MESSAGE \u003d \"Successfully loaded existing data.\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String DATA_NOT_FOUND_ERROR_MESSAGE \u003d \"Data file not found.\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Will be starting with sample data.\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String WRONG_DATA_FORMAT_ERROR_MESSAGE \u003d \"Data file not in the correct format.\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Will be starting with an empty NUSave.\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String UNABLE_TO_READ_DATA_ERROR_MESSAGE \u003d \"Error reading from data file.\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Will be starting with an empty NUSave.\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Model model;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config config;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private String initialMessage \u003d DATA_LOADED_SUCCESS_MESSAGE"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + GREETING_MESSAGE;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ NUSave ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d AppParameters.parse(getParameters());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        config \u003d initConfig(appParameters.getConfigPath());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        NusaveStorage nusaveStorage \u003d new JsonNusaveStorage(userPrefs.getNusaveFilePath());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        storage \u003d new StorageManager(nusaveStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        initLogging(config);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d initModelManager(storage, userPrefs);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        ui \u003d new UiManager(logic, initialMessage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s NUSave and {@code userPrefs}. \u003cbr\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * The data from the sample NUSave will be used instead if {@code storage}\u0027s NUSave is not found,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * or an empty NUSave will be used instead if errors occur when reading {@code storage}\u0027s NUSave."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Optional\u003cReadOnlyNusave\u003e nusaveOptional;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        ReadOnlyNusave initialData;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            nusaveOptional \u003d storage.readNusave();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            if (nusaveOptional.isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                logger.info(DATA_NOT_FOUND_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                initialMessage \u003d DATA_NOT_FOUND_ERROR_MESSAGE + GREETING_MESSAGE;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            initialData \u003d nusaveOptional.orElseGet(SampleDataUtil::getSampleNusave);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            logger.warning(WRONG_DATA_FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            initialData \u003d new Nusave();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            initialMessage \u003d WRONG_DATA_FORMAT_ERROR_MESSAGE + GREETING_MESSAGE;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            logger.warning(UNABLE_TO_READ_DATA_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            initialData \u003d new Nusave();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            initialMessage \u003d UNABLE_TO_READ_DATA_ERROR_MESSAGE + GREETING_MESSAGE;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ModelManager(initialData, userPrefs);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initLogging(Config config) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        LogsCenter.init(config);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code configFilePath} is null."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        Config initializedConfig;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePathUsed;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configFilePath !\u003d null) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Custom Config file specified \" + configFilePath);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            configFilePathUsed \u003d configFilePath;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using config file : \" + configFilePathUsed);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d configOptional.orElse(new Config());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"Using default config properties\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d new Config();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update config file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedConfig;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     * or a new {@code UserPrefs} with default configuration if errors occur when"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * reading from the file."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    protected UserPrefs initPrefs(UserPrefsStorage storage) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d storage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using prefs file : \" + prefsFilePath);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs initializedPrefs;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"Using default user prefs\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty NUSave\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update prefs file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(initializedPrefs);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedPrefs;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        logger.info(\"Starting NUSave \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping NUSave ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(model.getUserPrefs());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "wenhaogoh": 38,
      "-": 159
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/GuiSettings.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A Serializable class that contains the GUI settings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiSettings implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final double DEFAULT_HEIGHT \u003d 600;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final double DEFAULT_WIDTH \u003d 450;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowWidth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowHeight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Point windowCoordinates;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code GuiSettings} with the default height, width and position."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        windowWidth \u003d DEFAULT_WIDTH;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        windowHeight \u003d DEFAULT_HEIGHT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d null; // null represent no coordinates"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code GuiSettings} with the specified height, width and position."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d new Point(xPosition, yPosition);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowWidth() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowHeight() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowHeight;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public Point getWindowCoordinates() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof GuiSettings)) { //this handles null as well."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings o \u003d (GuiSettings) other;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth \u003d\u003d o.windowWidth"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Width : \" + windowWidth + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Height : \" + windowHeight + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Position : \" + windowCoordinates);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 1,
      "-": 78
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/LogsCenter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Configures and manages loggers and handlers, including their logging level"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Named {@link Logger}s can be obtained from this class\u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * These loggers have been configured to output messages to the console and a {@code .log} file by default,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogsCenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_COUNT \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String LOG_FILE \u003d \"nusave.log\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Level currentLogLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler fileHandler;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler consoleHandler;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes with a custom log level (specified in the {@code config} object)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logging levels for existing loggers will only be updated if the logger with the same name"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * is requested again from the LogsCenter."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void init(Config config) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        currentLogLevel \u003d config.getLogLevel();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"currentLogLevel: \" + currentLogLevel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a logger with the given name."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Logger getLogger(String name) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        Logger logger \u003d Logger.getLogger(name);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        removeHandlers(logger);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        addConsoleHandler(logger);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        addFileHandler(logger);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return Logger.getLogger(name);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Logger for the given class name."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        if (clazz \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return Logger.getLogger(\"\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return getLogger(clazz.getSimpleName());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the {@code consoleHandler} if it is null."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addConsoleHandler(Logger logger) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (consoleHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            consoleHandler \u003d createConsoleHandler();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.addHandler(consoleHandler);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Remove all the handlers from {@code logger}."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void removeHandlers(Logger logger) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        Arrays.stream(logger.getHandlers())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(logger::removeHandler);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates {@code fileHandler} if it is null."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addFileHandler(Logger logger) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                fileHandler \u003d createFileHandler();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error adding file handler for logger.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code FileHandler} for the log file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there are problems opening the file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler createFileHandler() throws IOException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileHandler;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler createConsoleHandler() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        consoleHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return consoleHandler;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 1,
      "-": 111
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command! \\n%1$s\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"The index provided is out of bounds.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String EXPENDITURE_MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"The expenditure does not exist!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String BUDGET_MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"The budget does not exist!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String MESSAGE_NO_ENTRIES_FOUND \u003d \"No entries matched the search term.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String MESSAGE_MORE_THAN_THREE_TAGS \u003d \"Each expenditure can only have a maximum of 3 tags.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "sogggy": 2,
      "davidliew9": 1,
      "wenhaogoh": 2,
      "-": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/StringUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Helper functions for handling strings."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class StringUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the {@code sentence} contains the {@code word}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     *   Ignores case, but a full word match is required."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     *   \u003cbr\u003eexamples:\u003cpre\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     *       \u003c/pre\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param sentence cannot be null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param word cannot be null, cannot be empty, must be a single word"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean containsWordIgnoreCase(String sentence, String word) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(sentence);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(word);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        String preppedWord \u003d word.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        String preppedSentence \u003d sentence;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(wordsInPreppedSentence)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                .anyMatch(preppedWord::equalsIgnoreCase);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a detailed message of the t, including the stack trace."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getDetails(Throwable t) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(t);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        t.printStackTrace(new PrintWriter(sw));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return t.getMessage() + \"\\n\" + sw.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns true is the string {code: s} is a numeric value."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param s"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return a boolean"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static boolean isNumeric(String s) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(s);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            Double.parseDouble(s);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns true if the string {code: s} is within the bounds of the maximum budget index."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param s"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return a boolean"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static boolean isNonOverFlow(String s) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(s);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        double initialInput \u003d Double.parseDouble(s);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (initialInput \u003e 100 || initialInput \u003c 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code s} represents a non-zero unsigned integer"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Will return false for any other non-null string input"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code s} is null."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isNonZeroUnsignedInteger(String s) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(s);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            int value \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 31,
      "-": 67
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/Logic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Logic component"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Logic {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandText The command as entered by the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the result of the command execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException If an error occurs during parsing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /** Returns an unmodifiable view of the filtered list of budgets */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    ObservableList\u003cRenderable\u003e getFilteredRenderableList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Path getNusaveFilePath();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    BooleanProperty getIsBudgetPageProp();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    StringProperty getTotalExpenditureStringProp();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    StringProperty getThresholdStringProp();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getPageTitle();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getTotalExpenditureValue();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Optional\u003cThreshold\u003e getThreshold();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean isBudgetPage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Set the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 3,
      "sogggy": 16,
      "wenhaogoh": 3,
      "-": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/LogicManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.budgetpageparser.BudgetPageParser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.mainpageparser.MainPageParser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String UNKNOWN_PAGE_ERROR_MESSAGE \u003d \"Could not identify current page.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public LogicManager(Model model, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        //Logging, safe to ignore"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Page currentPage \u003d this.model.getPage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        switch (currentPage) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case MAIN:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            command \u003d new MainPageParser().parseCommand(commandText);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case BUDGET:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            command \u003d new BudgetPageParser().parseCommand(commandText);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new CommandException(UNKNOWN_PAGE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            storage.saveNusave(model.getNusave());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ObservableList\u003cRenderable\u003e getFilteredRenderableList() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return model.getFilteredRenderableList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return model.getNusaveFilePath();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getGuiSettings();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BooleanProperty getIsBudgetPageProp() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return model.getBudgetPageProp();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StringProperty getTotalExpenditureStringProp() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return model.getTotalExpenditureStringProp();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StringProperty getThresholdStringProp() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return model.getThresholdStringProp();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getPageTitle() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.model.getPageTitle();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTotalExpenditureValue() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.model.getTotalExpenditureValue();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cThreshold\u003e getThreshold() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.model.getThreshold();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isBudgetPage() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this.model.isBudgetPage();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 3,
      "sogggy": 48,
      "davidliew9": 2,
      "wenhaogoh": 9,
      "-": 67
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/BudgetPageCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Class that represents general commands that occur in a budget page."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public abstract class BudgetPageCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes a command that occurs in the budget page."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the result executing the command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public abstract CommandResult execute(Model model) throws CommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 8,
      "davidliew9": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CommandResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Help information should be shown to the user. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean showHelp;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /** The application should exit. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.showHelp \u003d showHelp;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this(feedbackToUser, false, false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns a boolean indicating whether the command is an help command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return a boolean"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowHelp() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return showHelp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns a boolean indicating whether the command is an exit command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return a boolean"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof CommandResult)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult otherCommandResult \u003d (CommandResult) other;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(feedbackToUser, showHelp, exit);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 8,
      "-": 71
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Exits the application.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting NUSave as requested ...\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the termination of the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return obj instanceof ExitCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 1,
      "davidliew9": 5,
      "wenhaogoh": 9,
      "-": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/MainPageCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Class that represents general commands that occur in the Main page."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public abstract class MainPageCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes a command that occurs in the budget page."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the result executing the command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public abstract CommandResult execute(Model model) throws CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 9,
      "davidliew9": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/RedoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class RedoCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"redo\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Redoes the undid action.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Redid action.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_FAILURE \u003d \"No action to redo.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!model.canRedo()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new CommandResult(MESSAGE_FAILURE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.redo();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return obj instanceof RedoCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 29
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/UndoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"undo\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Undoes the previous action.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Undid previous action.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_FAILURE \u003d \"No action to undo.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!model.canUndo()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new CommandResult(MESSAGE_FAILURE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.undo();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return obj instanceof UndoCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 30
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/AddExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Adds an expenditure to a specific Budget."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class AddExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Adds a new expenditure to the budget.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + PREFIX_NAME + \"NAME \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + PREFIX_PRICE + \"PRICE \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"(\" + PREFIX_TAG + \"TAG)\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: \" + PREFIX_NAME + \"NAME\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_PRICE + \"PRICE\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_TAG + \"TAG \" + \"(Optional)\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"White Collared Shirt \" + PREFIX_PRICE + \"25\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                     \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"Navy Blue Tie \" + PREFIX_PRICE + \"15 \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + PREFIX_TAG + \"Apparel \" + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Added a new expenditure: %1$s\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Expenditure toAdd;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Creates an AddExpenditureCommand to add the specified {@code expenditure}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toAdd the expenditure to be added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public AddExpenditureCommand(Expenditure toAdd) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.toAdd \u003d toAdd;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the add expenditure command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the result of the command with the success message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.saveToHistory();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.addExpenditure(toAdd);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                || (other instanceof AddExpenditureCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 toAdd.equals(((AddExpenditureCommand) other).toAdd));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 13,
      "sogggy": 32,
      "davidliew9": 10,
      "wenhaogoh": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/CloseBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.BudgetPageCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Closes a particular budget so the user can return to the main screen."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class CloseBudgetCommand extends BudgetPageCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"close\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Closes the current budget.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Closed budget.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the close budget command and sets the current page to be the Main Page."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the result of the command with the success message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.closeBudget();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return obj instanceof CloseBudgetCommand;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "sogggy": 16,
      "davidliew9": 9,
      "wenhaogoh": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/DeleteExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Deletes an expenditure from a specific Budget."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class DeleteExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" INDEX\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Deletes an expenditure by index.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: \" + \"INDEX\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_DELETE_EXPENDITURE_SUCCESS \u003d \"Deleted expenditure.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private final ExpenditureIndex toDelete;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Creates a DeleteExpenditureCommand to delete the specified {@code expenditure}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param expenditure the expenditure to be deleted"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public DeleteExpenditureCommand(ExpenditureIndex expenditure) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(expenditure);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.toDelete \u003d expenditure;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the delete expenditure command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the result of the command with the success message"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!model.isWithinRange(toDelete)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new CommandException(Messages.EXPENDITURE_MESSAGE_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.saveToHistory();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.deleteExpenditure(toDelete);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DELETE_EXPENDITURE_SUCCESS));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                || (other instanceof DeleteExpenditureCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 toDelete.equals(((DeleteExpenditureCommand) other).toDelete));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7,
      "davidliew9": 39,
      "wenhaogoh": 15
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/EditExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INDEX_OUT_OF_BOUNDS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class EditExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" INDEX \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"(\" + PREFIX_NAME + \"NAME) \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"(\" + PREFIX_PRICE + \"PRICE) \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Edits an expenditure.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: INDEX\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_NAME + \"NAME (Optional)\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_PRICE + \"PRICE (Optional)\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"                            \" + PREFIX_TAG + \"TAG (Optional)\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_NAME + \"White Collared Shirt \" + PREFIX_PRICE + \"25\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + PREFIX_TAG + \"clothes\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"                     \" + COMMAND_WORD + \" 2 \" + PREFIX_PRICE + \"15 \";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Edited expenditure information.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private final ExpenditureIndex expenditureIndex;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private final EditExpenditureDescriptor editExpenditureDescriptor;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Create an EditExpenditureCommand to edit the specified expenditure at {code: index}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param editExpenditureDescriptor"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureCommand(ExpenditureIndex index, EditExpenditureDescriptor editExpenditureDescriptor) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(editExpenditureDescriptor);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.expenditureIndex \u003d index;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.editExpenditureDescriptor \u003d editExpenditureDescriptor;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (model.isIndexOutOfBound(expenditureIndex)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new CommandException(MESSAGE_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Expenditure toEdit \u003d model.getExpenditureAtIndex(expenditureIndex);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Expenditure editedExpenditure \u003d createEditedExpenditure(toEdit, editExpenditureDescriptor);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.saveToHistory();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.editExpenditure(toEdit, editedExpenditure);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private static Expenditure createEditedExpenditure(Expenditure expenditureToEdit,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                                                       EditExpenditureDescriptor editExpenditureDescriptor) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Name name \u003d editExpenditureDescriptor.getName().orElse(expenditureToEdit.getName());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Price price \u003d editExpenditureDescriptor.getPrice().orElse(expenditureToEdit.getPrice());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Date date \u003d editExpenditureDescriptor.getDate().orElse(expenditureToEdit.getCreatedOn());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Set\u003cTag\u003e tags \u003d editExpenditureDescriptor.getTags().orElse(expenditureToEdit.getTags());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new Expenditure(name, price, date, tags);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static class EditExpenditureDescriptor {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        private Name name;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        private Price price;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        private Date date;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public EditExpenditureDescriptor() {}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * Constructor with given EditExpenditureDescriptor to copy from."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * @param toCopy"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public EditExpenditureDescriptor(EditExpenditureDescriptor toCopy) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            setName(toCopy.name);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            setPrice(toCopy.price);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            setDate(toCopy.date);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            setTags(toCopy.tags);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public void setName(Name name) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public void setPrice(Price price) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            this.price \u003d price;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Optional\u003cPrice\u003e getPrice() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return Optional.ofNullable(price);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public void setDate(Date date) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            this.date \u003d date;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Optional\u003cDate\u003e getDate() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return Optional.ofNullable(date);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * Sets {@code tags} to this object\u0027s {@code tags}."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public void setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            this.tags \u003d (!tags.isEmpty()) ? new HashSet\u003c\u003e(tags) : new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * if modification is attempted."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         * Returns {@code Optional#empty()} if {@code tags} is null."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "         */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 9,
      "yu-ming-chen": 7,
      "davidliew9": 125,
      "wenhaogoh": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/FindExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Filters a budget book to find specific expenditures matching a search term."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class FindExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" NAME\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Finds expenditures by name.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: \" + \"NAME\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" Shirt\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Updated list of expenditures to show entries that contain \\\u0027%1$s\\\u0027.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_NO_EXPENDITURES_FOUND \u003d \"No expenditures matching \\\u0027%s\\\u0027 were found.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Creates a FindExpenditureCommand to to find expenditures matching"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * the specified {@code name}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param name the name of the expenditure to be searched."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public FindExpenditureCommand(Name name) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Executes the find expenditure command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the result of the command with the success message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String searchTerm \u003d name.value;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model.findExpenditure(searchTerm);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, name));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                || (other instanceof FindExpenditureCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                \u0026\u0026 name.equals(((FindExpenditureCommand) other).name));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 57,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/HelpExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Format full help instructions for every command for display."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class HelpExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Shows a list of commands that is currently available.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String HELP_MESSAGE \u003d AddExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + DeleteExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + EditExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + FindExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + ListExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"\\n\" + SortExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"\\n\" + CloseBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"\\n\" + HelpExpenditureCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"\\n\" + ExitCommand.MESSAGE_USAGE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Executes the help command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new CommandResult(HELP_MESSAGE, false, false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return obj instanceof HelpExpenditureCommand;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 11,
      "yu-ming-chen": 23,
      "wenhaogoh": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/ListExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class ListExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Lists all expenditures.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Updated list of expenditures to show all entries.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String EMPTY_EXPENDITURE_MESSAGE \u003d \"You have no expenditures recorded.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // sets predicate to always return true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model.listExpenditures();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return obj instanceof ListExpenditureCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 27,
      "wenhaogoh": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/budget/SortExpenditureCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.BudgetPageCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Creates a new SortExpenditureCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortExpenditureCommand extends BudgetPageCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"sort\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Sorts expenditure by name or time.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Usage: \" + SYNTAX + \" TYPE\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Parameters: TYPE\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" time\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Sorted expenditures.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final SortType sortType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a SortBudgetCommand to to sort budgets by {@code sortType}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param sortType the type of sort."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public SortExpenditureCommand(SortType sortType) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.sortType \u003d sortType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Executes the sort expenditure command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        switch (sortType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case TIME: {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            model.sortExpenditureByCreatedDate();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case NAME: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            model.sortExpendituresByName();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                || (other instanceof SortExpenditureCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 sortType.equals(((SortExpenditureCommand) other).sortType));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 2,
      "yu-ming-chen": 49,
      "wenhaogoh": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/exceptions/CommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an error which occurs during execution of a {@link Command}."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Constructs a new {@code CommandException} with the specified detail {@code message}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param cause"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 7,
      "-": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/ClearBudgetsCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class ClearBudgetsCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Deletes all budgets.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_DELETE_BUDGET_SUCCESS \u003d \"Cleared all budgets.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.saveToHistory();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.deleteAllBudgets();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(MESSAGE_DELETE_BUDGET_SUCCESS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7,
      "wenhaogoh": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/CreateBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.MainPageCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Creates a new Budget."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class CreateBudgetCommand extends MainPageCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"create\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" \" + PREFIX_NAME + \"NAME \" + \"(\" + PREFIX_PRICE + \"THRESHOLD)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Creates a budget.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Parameters: \" + PREFIX_NAME + \"NAME\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"                            \" + PREFIX_PRICE + \"THRESHOLD \" + \"(Optional)\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"Daily Expenses \" + PREFIX_PRICE + \"200\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                     \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"Daily Expenses\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Created a new budget: %1$s\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Budget toCreate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Creates a new CreateBudgetCommand to create the spcified {@code budget}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toCreate the budget to be created"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public CreateBudgetCommand(Budget toCreate) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireNonNull(toCreate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.toCreate \u003d toCreate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the create budget command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.saveToHistory();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.addBudget(toCreate);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, toCreate));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                || (other instanceof CreateBudgetCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 toCreate.equals(((CreateBudgetCommand) other).toCreate));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "yu-ming-chen": 30,
      "davidliew9": 11,
      "wenhaogoh": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/DeleteBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class DeleteBudgetCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" INDEX\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Deletes a budget by index.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            + \"Parameters: INDEX\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_DELETE_BUDGET_SUCCESS \u003d \"Deleted budget.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private final BudgetIndex toDelete;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Creates a DeleteBudgetCommand to delete the specified {@code budget}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param budget the budget to be deleted"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public DeleteBudgetCommand(BudgetIndex budget) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(budget);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.toDelete \u003d budget;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the delete budget command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the command result along with a success message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!model.isWithinRange(toDelete)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new CommandException(Messages.BUDGET_MESSAGE_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.saveToHistory();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.deleteBudget(toDelete);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new CommandResult(MESSAGE_DELETE_BUDGET_SUCCESS);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7,
      "davidliew9": 37,
      "wenhaogoh": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/EditBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INDEX_OUT_OF_BOUNDS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class EditBudgetCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" INDEX \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + PREFIX_NAME + \"NAME \" + \"(\" + PREFIX_PRICE + \"THRESHOLD)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Edits a budget.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: INDEX\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_NAME + \"NAME \" + \"(Optional)\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"                            \" + PREFIX_PRICE + \"THRESHOLD \" + \"(Optional)\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"1 \" + PREFIX_NAME + \"Books \" + PREFIX_PRICE + \"120\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Edited budget.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final BudgetIndex budgetIndex;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final EditBudgetDescriptor editBudgetDescriptor;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Creates a EditBudgetCommand to edit the specified {@code budget}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param index the budget index of the budget to be edited"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public EditBudgetCommand(BudgetIndex index, EditBudgetDescriptor editBudgetDescriptor) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.budgetIndex \u003d index;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.editBudgetDescriptor \u003d editBudgetDescriptor;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Executes the edit budget command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the result of the command with the success message."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (model.isIndexOutOfBound(budgetIndex)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new CommandException(MESSAGE_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget toEdit \u003d model.getBudgetAtIndex(budgetIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget editedBudget \u003d createEditedBudget(toEdit, editBudgetDescriptor);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.saveToHistory();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.editBudget(toEdit, editedBudget);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Create an edited budget with the given input by the user"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param budgetToEdit the original budget to be edited"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param editBudgetDescriptor holds all the edit input from the user"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the edited budget after the edit."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private static Budget createEditedBudget(Budget budgetToEdit, EditBudgetDescriptor editBudgetDescriptor) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Name name \u003d editBudgetDescriptor.getName().orElse(budgetToEdit.getName());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Date createdOn \u003d editBudgetDescriptor.getCreatedOn().orElse(budgetToEdit.getCreatedOn());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Optional\u003cThreshold\u003e threshold \u003d editBudgetDescriptor.getThreshold().orElse(budgetToEdit.getThreshold());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ExpenditureList expenditures \u003d new ExpenditureList(budgetToEdit.getExpendituresList());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new Budget(name, createdOn, threshold, expenditures);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static class EditBudgetDescriptor {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        private Name name;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        private Date createdOn;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        private Optional\u003cThreshold\u003e threshold;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        private ExpenditureList expenditures;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public EditBudgetDescriptor() {}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setName(Name name) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setThreshold(Optional\u003cThreshold\u003e threshold) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            this.threshold \u003d threshold;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Optional\u003cOptional\u003cThreshold\u003e\u003e getThreshold() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return Optional.ofNullable(threshold);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setCreatedOn(Date createdOn) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            this.createdOn \u003d createdOn;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Optional\u003cDate\u003e getCreatedOn() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return Optional.ofNullable(createdOn);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean equals(Object o) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            EditBudgetDescriptor that \u003d (EditBudgetDescriptor) o;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return Objects.equals(name, that.name)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    \u0026\u0026 Objects.equals(createdOn, that.createdOn)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    \u0026\u0026 Objects.equals(threshold, that.threshold)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    \u0026\u0026 Objects.equals(expenditures, that.expenditures);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                || (other instanceof EditBudgetCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 budgetIndex.equals(((EditBudgetCommand) other).budgetIndex)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 editBudgetDescriptor.equals(((EditBudgetCommand) other).editBudgetDescriptor));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 10,
      "yu-ming-chen": 128,
      "wenhaogoh": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/FindBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class FindBudgetCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" NAME\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Finds budgets by name.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: NAME\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" Temasek\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Updated list of budgets to show entries that contain \\\u0027%1$s\\\u0027.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_NO_BUDGETS_FOUND \u003d \"No budgets matching \\\u0027%s\\\u0027 were found.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Creates a FindExpenditureCommand to to find expenditures matching"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * the specified {@code name}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param name the name of the expenditure to be searched."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public FindBudgetCommand(Name name) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Executes the find expenditure command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return the result of the command with the success message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String searchTerm \u003d name.value;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model.findBudget(searchTerm);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, name));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                || (other instanceof FindBudgetCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 name.equals(((FindBudgetCommand) other).name));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 11,
      "sogggy": 43,
      "wenhaogoh": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/HelpBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Format full help instructions for every command for display."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class HelpBudgetCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Shows a list of commands that is currently available.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String HELP_MESSAGE \u003d CreateBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + DeleteBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + EditBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + FindBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + ListBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"\\n\" + SortBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"\\n\" + ClearBudgetsCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"\\n\" + OpenBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"\\n\" + HelpBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"\\n\" + ExitCommand.MESSAGE_USAGE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Executes the help command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(HELP_MESSAGE, false, false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 10,
      "yu-ming-chen": 23,
      "wenhaogoh": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/ListBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class ListBudgetCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Lists all budgets.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Updated list of budgets to show all entries.\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model.listBudgets();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 8,
      "sogggy": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/OpenBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.MainPageCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Opens a budget to view and modify expenditures contained within the budget."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class OpenBudgetCommand extends MainPageCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"open\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD + \" INDEX\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Opens a budget.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Usage: \" + SYNTAX + \"\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Parameters: \" + \"INDEX\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Opened budget.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final BudgetIndex toOpen;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Creates an OpenBudgetCommand to open the specified {@code budget}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toOpen the Index of the specific budget"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public OpenBudgetCommand(BudgetIndex toOpen) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.toOpen \u003d toOpen;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Executes the open budget command, sets the current page to the budget page."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!model.isWithinRange(toOpen)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.openBudget(toOpen);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        OpenBudgetCommand that \u003d (OpenBudgetCommand) o;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Objects.equals(toOpen, that.toOpen);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 8,
      "sogggy": 33,
      "davidliew9": 13,
      "wenhaogoh": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/main/SortBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.MainPageCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Creates a new SortBudgetCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortBudgetCommand extends MainPageCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"sort\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String SYNTAX \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String DESCRIPTION \u003d \"Sorts budget by name or time.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Usage: \" + SYNTAX + \" TYPE\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Description: \" + DESCRIPTION + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            + \"Parameters: TYPE\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" time\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Sorted budgets.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final SortType sortType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Creates a SortBudegetCommand to to sort budgets by {@code sortType}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param sortType the type of sort."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public SortBudgetCommand(SortType sortType) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.sortType \u003d sortType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Executes the create budget command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param model {@code Model} which the command should operate on."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the commmand result along with a success message"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        switch (sortType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case TIME: {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            model.sortBudgetsByCreatedDate();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case NAME: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            model.sortBudgetsByName();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 2,
      "yu-ming-chen": 50,
      "wenhaogoh": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains Command Line Interface (CLI) syntax definitions common to multiple commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CliSyntax {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Prefix definitions */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"p/\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "-": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/PageParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Represents an interface through which other Parsers will implement."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public interface PageParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Command parseCommand(String commandText) throws ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 8,
      "davidliew9": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ParserUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.model.budget.Threshold.NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.math.BigDecimal;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.SortBudgetCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.mainpageparser.SortBudgetCommandParser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndexManager;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods used for parsing strings in the various *Parser classes."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserUtil {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final String MESSAGE_NON_INTEGER \u003d \"Index has to be an integer!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final String MESSAGE_OVERFLOW \u003d \"Index is out of range please stay within range of 1 - 100\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d \"Index has to be an integer greater than 0!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * trimmed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index parseIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return Index.fromOneBased(Integer.parseInt(trimmedIndex));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses {@code oneBasedIndex} into a {@code ExpenditureIndex} and returns it."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static ExpenditureIndex parseExpenditureIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (!StringUtil.isNumeric(trimmedIndex)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new ParseException(MESSAGE_NON_INTEGER);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (!StringUtil.isNonOverFlow(trimmedIndex)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new ParseException(MESSAGE_OVERFLOW);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new ExpenditureIndexManager(Integer.parseInt(trimmedIndex) - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Parses {@code args} into a {@code SortTypr} and returns it."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @throws ParseException if the specified Sort Type is invalid (unsupported sort types)."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static SortType parseSortType(String args) throws ParseException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String trimmedStringType \u003d args.trim().toLowerCase();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        switch (trimmedStringType) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case \"name\": {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return SortType.NAME;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case \"time\": {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return SortType.TIME;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(SortBudgetCommandParser.MESSAGE_INVALID_SORT_TYPE + \"\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    + SortBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Parses {@code oneBasedIndex} into a {@code BudgetIndex} and returns it."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static BudgetIndex parseBudgetIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (!StringUtil.isNumeric(trimmedIndex)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new ParseException(MESSAGE_NON_INTEGER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (!StringUtil.isNonOverFlow(trimmedIndex)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new ParseException(MESSAGE_OVERFLOW);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new BudgetIndexManager(Integer.parseInt(trimmedIndex) - 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses a {@code String expenditureName} into a {@code Name}."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code name} is invalid."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static seedu.address.model.expenditure.Name parseExpenditureName(String expenditureName)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(expenditureName);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String trimmedName \u003d expenditureName.trim();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!seedu.address.model.expenditure.Name.isValid(trimmedName)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(seedu.address.model.expenditure.Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } else if (trimmedName.length() \u003e 50) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            throw new ParseException(\"Expenditure Name is limited to 50 characters.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new seedu.address.model.expenditure.Name(trimmedName);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses a {@code String price} into a {@code Price}."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws ParseException if the given {@code Price} is invalid."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static Price parsePrice(String price) throws ParseException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(price);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String trimmedPrice \u003d price.trim();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!Price.isValid(trimmedPrice)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(Price.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String parsedPrice \u003d parseToDouble(trimmedPrice);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (Price.isZeroOrLess(parsedPrice)) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(Price.NON_ZERO_CONSTRAINTS);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (Price.isExceededValue(parsedPrice)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(Price.EXCEEDED_VALUE_ERROR);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new Price(trimmedPrice);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses a {@code String budgetName} into a {@code Name}."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws ParseException if the given {@code budgetName} is invalid."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static seedu.address.model.budget.Name parseBudgetName(String budgetName) throws ParseException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireNonNull(budgetName);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String trimmedName \u003d budgetName.trim();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!seedu.address.model.budget.Name.isValid(trimmedName)) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(seedu.address.model.budget.Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } else if (trimmedName.length() \u003e 50) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            throw new ParseException(\"Budget Name is limited to 50 characters.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new seedu.address.model.budget.Name(trimmedName);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Parses a {@code String budgetThreshold} into a {@code Threshold}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws ParseException if the given {@code budgetThreshold} is invalid."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Optional\u003cThreshold\u003e parseBudgetThreshold(String budgetThreshold) throws ParseException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(budgetThreshold);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String trimmedThreshold \u003d budgetThreshold.trim();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (trimmedThreshold \u003d\u003d NO_THRESHOLD_MESSAGE) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return new Threshold(trimmedThreshold).toOptional();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!Threshold.isValid(trimmedThreshold)) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new ParseException(Threshold.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String parsedThreshold \u003d parseToDouble(trimmedThreshold);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (Threshold.isZeroOrLess(parsedThreshold)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(Threshold.NON_ZERO_CONSTRAINTS);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (Threshold.isExceededValue(parsedThreshold)) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(Threshold.EXCEEDED_VALUE_ERROR);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new Threshold(parsedThreshold).toOptional();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static String parseToDouble(String value) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert ParserUtil.isDouble(value);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Double.toString(Double.parseDouble(value));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Checks if input string is a valid double value or not."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Overflowed input values are considered as invalid."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param input the input string."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return a boolean on whether the string is a valid double or not."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isValidDouble(String input) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final BigDecimal maxDouble \u003d new BigDecimal(Double.MAX_VALUE);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            BigDecimal bigInput \u003d new BigDecimal(input);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return bigInput.compareTo(maxDouble) \u003c 1;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Checks if input string can be parsed to Double."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param value input string."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return boolean on whether input string can be parsed to Double or not."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isDouble(String value) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            Double.parseDouble(value);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String tag} into a {@code Tag}."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code tag} is invalid."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Tag parseTag(String tag) throws ParseException {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tag);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String trimmedLowerCaseTag \u003d tag.trim().toLowerCase();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (!Tag.isValid(trimmedLowerCaseTag)) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new Tag(trimmedLowerCaseTag);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tags);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String tagName : tags) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            if (tagName.length() \u003e 15) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                throw new ParseException(\"Each tag is limited to 15 characters.\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            tagSet.add(parseTag(tagName));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        return tagSet;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 23,
      "sogggy": 76,
      "yu-ming-chen": 28,
      "davidliew9": 34,
      "wenhaogoh": 15,
      "-": 82
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/AddExpenditureCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_MORE_THAN_THREE_TAGS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.budget.AddExpenditureCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Represents a Parser that is able to parse user inputs regarding adding expenditures."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class AddExpenditureCommandParser implements Parser\u003cAddExpenditureCommand\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the AddBudgetCommand"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * and returns an AddBudgetCommand object for execution."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public AddExpenditureCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE, PREFIX_TAG);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PRICE)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                                AddExpenditureCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Name name \u003d ParserUtil.parseExpenditureName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Price price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Date date \u003d new Date(LocalDate.now().toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Set\u003cTag\u003e tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Expenditure expenditure \u003d new Expenditure(name, price, date, tags);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (tags.size() \u003e 3) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new ParseException(MESSAGE_MORE_THAN_THREE_TAGS);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new AddExpenditureCommand(expenditure);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 8,
      "sogggy": 55,
      "davidliew9": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/BudgetPageParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.RedoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.UndoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.budget.AddExpenditureCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.budget.CloseBudgetCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.DeleteExpenditureCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.EditExpenditureCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.budget.FindExpenditureCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.budget.HelpExpenditureCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.budget.ListExpenditureCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.budget.SortExpenditureCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.PageParser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Represents a Parser that is able to parse inputs occuring in the Budget Page."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class BudgetPageParser implements PageParser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /** Used for initial separation of command word and args. */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Parses a user input occurring in the Budget Page into a command for execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    HelpExpenditureCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case CloseBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            return new CloseBudgetCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        case DeleteExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return new DeleteExpenditureCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case AddExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return new AddExpenditureCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        case FindExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            return new FindExpenditureCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        case EditExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return new EditExpenditureCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        case ListExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            return new ListExpenditureCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case SortExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new SortExpenditureCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case HelpExpenditureCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new HelpExpenditureCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case UndoCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case RedoCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new RedoCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case ExitCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_UNKNOWN_COMMAND, HelpExpenditureCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 9,
      "sogggy": 44,
      "yu-ming-chen": 15,
      "davidliew9": 11,
      "wenhaogoh": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/DeleteExpenditureCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.DeleteExpenditureCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " * Represents a Parser that is able to parse user inputs regarding deleting expenditures."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class DeleteExpenditureCommandParser implements Parser\u003cDeleteExpenditureCommand\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the DeleteBudgetCommand"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * and returns a DeleteBudgetCommand object for execution."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public DeleteExpenditureCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ExpenditureIndex expenditureIndex \u003d ParserUtil.parseExpenditureIndex(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new DeleteExpenditureCommand(expenditureIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/EditExpenditureCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.EditExpenditureCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.EditExpenditureCommand.EditExpenditureDescriptor;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class EditExpenditureCommandParser implements Parser\u003cEditExpenditureCommand\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE, PREFIX_TAG);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_PRICE) \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_TAG)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                    EditExpenditureCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ExpenditureIndex index;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        index \u003d ParserUtil.parseExpenditureIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        EditExpenditureDescriptor editExpenditureDescriptor \u003d new EditExpenditureDescriptor();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            editExpenditureDescriptor.setName("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                    ParserUtil.parseExpenditureName(argMultimap.getValue(PREFIX_NAME).get()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            editExpenditureDescriptor.setPrice("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                    ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        editExpenditureDescriptor.setTags(ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new EditExpenditureCommand(index, editExpenditureDescriptor);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 7,
      "davidliew9": 55
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/FindExpenditureCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.budget.FindExpenditureCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Represents a Parser that is able to parse user inputs regarding finding expenditures."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class FindExpenditureCommandParser implements Parser\u003cFindExpenditureCommand\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the FindExpenditureCommand"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * and returns a FindExpenditureCommand object for execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public FindExpenditureCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Name name \u003d ParserUtil.parseExpenditureName(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new FindExpenditureCommand(name);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/budgetpageparser/SortExpenditureCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.budget.SortExpenditureCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.SortBudgetCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortExpenditureCommandParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_INVALID_SORT_TYPE \u003d \"Sort type is not supported.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the OpenBudgetCommand"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * and returns an OpenBudgetCommand object for execution."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public SortExpenditureCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (args.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(SortBudgetCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        SortType sortType \u003d ParserUtil.parseSortType(args);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new SortExpenditureCommand(sortType);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/exceptions/ParseException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a parse error encountered by a parser."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParseException extends IllegalValueException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Constructs a new {@code ParseException} with the specified detail {@code message}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParseException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Constructs a new {@code ParseException} with the specified detail {@code message} and {@code cause}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param cause"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParseException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 9,
      "-": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/CreateBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.CreateBudgetCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class CreateBudgetCommandParser implements Parser\u003cCreateBudgetCommand\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the OpenBudgetCommand"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * and returns an OpenBudgetCommand object for execution."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CreateBudgetCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Name name \u003d ParserUtil.parseBudgetName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Date date \u003d new Date(LocalDate.now().toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Optional\u003cThreshold\u003e threshold \u003d ParserUtil.parseBudgetThreshold(argMultimap.getValue(PREFIX_PRICE)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .orElse(\"\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget budget \u003d new Budget(name, date, threshold, new ExpenditureList());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new CreateBudgetCommand(budget);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 2,
      "yu-ming-chen": 47,
      "wenhaogoh": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/DeleteBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.main.DeleteBudgetCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class DeleteBudgetCommandParser implements Parser\u003cDeleteBudgetCommand\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public DeleteBudgetCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d ParserUtil.parseBudgetIndex(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return new DeleteBudgetCommand(budgetIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/EditBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.EditBudgetCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.EditBudgetCommand.EditBudgetDescriptor;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentTokenizer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class EditBudgetCommandParser implements Parser\u003cEditBudgetCommand\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public EditBudgetCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireNonNull(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_PRICE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_PRICE)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    EditBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        BudgetIndex budgetIndex;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        budgetIndex \u003d ParserUtil.parseBudgetIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        EditBudgetDescriptor editBudgetDescriptor \u003d new EditBudgetDescriptor();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            editBudgetDescriptor.setName(ParserUtil.parseBudgetName((argMultimap.getValue(PREFIX_NAME).get())));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            editBudgetDescriptor.setThreshold(ParserUtil"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    .parseBudgetThreshold(argMultimap.getValue(PREFIX_PRICE).get()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new EditBudgetCommand(budgetIndex, editBudgetDescriptor);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 62,
      "davidliew9": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/FindBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.main.FindBudgetCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Represents a Parser that is able to parse user inputs regarding finding expenditures."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class FindBudgetCommandParser implements Parser\u003cFindBudgetCommand\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the FindExpenditureCommand"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * and returns a FindExpenditureCommand object for execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public FindBudgetCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (userInput.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new ParseException(FindBudgetCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Name name \u003d ParserUtil.parseBudgetName(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new FindBudgetCommand(name);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 24,
      "wenhaogoh": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/MainPageParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.RedoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.UndoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.ClearBudgetsCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.CreateBudgetCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.DeleteBudgetCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.EditBudgetCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.FindBudgetCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.HelpBudgetCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.ListBudgetCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.OpenBudgetCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.SortBudgetCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.PageParser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class MainPageParser implements PageParser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case OpenBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return new OpenBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case ClearBudgetsCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new ClearBudgetsCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        case DeleteBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            return new DeleteBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case CreateBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new CreateBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case EditBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new EditBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case FindBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return new FindBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        case ListBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return new ListBudgetCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case SortBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new SortBudgetCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case HelpBudgetCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new HelpBudgetCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case UndoCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case RedoCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new RedoCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        case ExitCommand.COMMAND_WORD: {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_UNKNOWN_COMMAND, HelpBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 49,
      "yu-ming-chen": 27,
      "davidliew9": 3,
      "wenhaogoh": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/OpenBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.main.OpenBudgetCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class OpenBudgetCommandParser implements Parser\u003cOpenBudgetCommand\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the OpenBudgetCommand"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * and returns an OpenBudgetCommand object for execution."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public OpenBudgetCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        BudgetIndex budgetIndex \u003d ParserUtil.parseBudgetIndex(args);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new OpenBudgetCommand(budgetIndex);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 4,
      "sogggy": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/mainpageparser/SortBudgetCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.SortBudgetCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ArgumentMultimap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.Prefix;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortBudgetCommandParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_INVALID_SORT_TYPE \u003d \"Sort type is not supported.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the OpenBudgetCommand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * and returns an OpenBudgetCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public SortBudgetCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (args.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new ParseException(SortBudgetCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        SortType sortType \u003d ParserUtil.parseSortType(args);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new SortBudgetCommand(sortType);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Model.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /** {@code Predicate} that always evaluate to true */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    Predicate\u003cRenderable\u003e PREDICATE_SHOW_ALL_RENDERABLES \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Path getNusaveFilePath();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void setNusavePath(Path nusaveFilePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces address book data with the data in {@code addressBook}."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void setNusave(ReadOnlyNusave nusave);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    ReadOnlyNusave getNusave();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void openBudget(BudgetIndex budgetIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void closeBudget();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void addBudget(Budget budget);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void editBudget(Budget toEdit, Budget editedBudget);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    Budget getBudgetAtIndex(BudgetIndex budgetIndex);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    Expenditure getExpenditureAtIndex(ExpenditureIndex expenditureIndex);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    boolean isIndexOutOfBound(BudgetIndex budgetIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    boolean isIndexOutOfBound(ExpenditureIndex expenditureIndex);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void deleteBudget(BudgetIndex budgetIndex) throws CommandException;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void deleteAllBudgets();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void sortBudgetsByName();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void sortBudgetsByCreatedDate() throws CommandException;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void addExpenditure(Expenditure expenditure) throws CommandException;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void findBudget(String searchTerm) throws CommandException;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void listBudgets() throws CommandException;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void deleteExpenditure(ExpenditureIndex expenditure) throws CommandException;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void findExpenditure(String searchTerm) throws CommandException;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void sortExpendituresByName();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void sortExpenditureByCreatedDate();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void listExpenditures() throws CommandException;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    String calculateExpenditureValue(BudgetIndex budgetIndex);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Page getPage();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getPageName(BudgetIndex index);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getPageTitle();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getTotalExpenditureValue();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Optional\u003cThreshold\u003e getThreshold();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean isBudgetPage();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    BooleanProperty getBudgetPageProp();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    StringProperty getTotalExpenditureStringProp();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    StringProperty getThresholdStringProp();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setPage(Page page);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setThreshold(Optional\u003cThreshold\u003e threshold);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setTotalExpenditure(String expenditure);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setBudgetIndex(BudgetIndex index);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setPageTitle(String page);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    boolean isMain();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    boolean isBudget();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean isWithinRange(BudgetIndex budgetIndex);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean isWithinRange(ExpenditureIndex expenditureIndex);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /** Returns an unmodifiable view of the filtered renderable list */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    ObservableList\u003cRenderable\u003e getFilteredRenderableList();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void updateFilteredRenderableList(Predicate\u003cRenderable\u003e predicate);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void repopulateObservableList();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean canUndo();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void undo();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean canRedo();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void redo();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveToHistory();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 19,
      "sogggy": 38,
      "yu-ming-chen": 10,
      "davidliew9": 9,
      "wenhaogoh": 30,
      "-": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.model.budget.Threshold.NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.budget.FindExpenditureCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.main.FindBudgetCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.BudgetList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.history.History;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.history.HistoryManager;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.history.VersionedNusave;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.PageTitle;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.State;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.StateManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.EmptyBudgetIndex;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the in-memory model of the address book data."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Nusave nusave;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private final FilteredList\u003cRenderable\u003e filteredRenderables;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final State state;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final History\u003cVersionedNusave\u003e history;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes a ModelManager with the given addressBook and userPrefs."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ModelManager(ReadOnlyNusave nusave, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(nusave, userPrefs);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        logger.fine(\"Initializing with NUSave: \" + nusave + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.nusave \u003d new Nusave(nusave);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.filteredRenderables \u003d new FilteredList\u003c\u003e(this.nusave.getInternalList());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.state \u003d new StateManager(new EmptyBudgetIndex(), Page.MAIN, PageTitle.MAIN_PAGE_TITLE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.history \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Initializes a new ModelManager."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this(new Nusave(), new UserPrefs());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return userPrefs.getNusaveFilePath();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setNusavePath(Path nusaveFilePath) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(nusaveFilePath);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        userPrefs.setNusaveFilePath(nusaveFilePath);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Nusave \u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setNusave(ReadOnlyNusave nusave) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireNonNull(nusave);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.nusave.resetData(nusave);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ReadOnlyNusave getNusave() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusave;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Budgets \u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Opens a budget from NUSave."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void openBudget(Integer index) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(index);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        openBudget(budgetIndex);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Open a budget from NUSave."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param budgetIndex the index of the budget to be opened"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void openBudget(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(budgetIndex);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setOpenCommandState(budgetIndex);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        displayAllRenderables();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void setOpenCommandState(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        BudgetIndex actualBudgetIndex \u003d getActualBudgetIndex(budgetIndex);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        state.setBudgetIndex(actualBudgetIndex);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String pageName \u003d getPageName(actualBudgetIndex);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String newExpenditureValue \u003d calculateExpenditureValue(actualBudgetIndex);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cThreshold\u003e newThreshold \u003d getThreshold();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        state.setOpenCommandState(pageName, newExpenditureValue, newThreshold);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void closeBudget() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (state.getPage() \u003d\u003d Page.MAIN) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setCloseCommandState();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        displayAllRenderables();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void setCloseCommandState() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        state.setCloseCommandState();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private BudgetIndex getActualBudgetIndex(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndex.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int indexInFilteredList \u003d budgetIndex.getBudgetIndex().get();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert indexInFilteredList \u003e\u003d 0 \u0026\u0026 indexInFilteredList \u003c filteredRenderables.size();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget budget \u003d (Budget) filteredRenderables.get(indexInFilteredList);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int indexInBudgetList \u003d nusave.getIndexOfBudget(budget);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new BudgetIndexManager(indexInBudgetList);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Adds a budget to NUSave."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param budget the budget to be added"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void addBudget(Budget budget) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(budget);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        nusave.addBudgetToFront(budget);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        displayAllRenderables();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Deletes a budget in NUSave."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param budgetIndex the index of the budget to be deleted."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteBudget(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(budgetIndex);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndex.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d budgetIndex.getBudgetIndex().get();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert index \u003c filteredRenderables.size();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Budget budget \u003d (Budget) filteredRenderables.get(index);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        nusave.deleteBudget(budget);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        displayAllRenderables();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Edit a budget from NUSave."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param oldBudget the budget to be edited"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param editedBudget edited budget to replace the old budget"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void editBudget(Budget oldBudget, Budget editedBudget) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireAllNonNull(oldBudget, editedBudget);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        nusave.editBudget(oldBudget, editedBudget);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        displayAllRenderables();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Budget getBudgetAtIndex(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return (Budget) filteredRenderables.get(budgetIndex.getBudgetIndex().get());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public Expenditure getExpenditureAtIndex(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return (Expenditure) filteredRenderables.get(expenditureIndex.getExpenditureIndex().get());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean isIndexOutOfBound(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return budgetIndex.getBudgetIndex().get() \u003e\u003d filteredRenderables.size();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public boolean isIndexOutOfBound(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return expenditureIndex.getExpenditureIndex().get() \u003e\u003d filteredRenderables.size();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteAllBudgets() {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nusave.deleteAllBudgets();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Searches for budgets in NUSave that contains the search term."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param searchTerm the search term to be used."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void findBudget(String searchTerm) throws CommandException {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Predicate\u003cRenderable\u003e predicate \u003d renderable -\u003e renderable.contains(searchTerm);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        updateFilteredRenderableList(predicate);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (filteredRenderables.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            throw new CommandException(String.format(FindBudgetCommand.MESSAGE_NO_BUDGETS_FOUND, searchTerm));"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Lists all budgets stored in NUSave."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void listBudgets() throws CommandException {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        displayAllRenderables();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (filteredRenderables.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            throw new CommandException(\"You have no budgets recorded, try creating one with the create command!\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Sorts all budgets stored in NUSave by alphanumerical order."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void sortBudgetsByName() {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        nusave.sortBudgetListByName();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Sorts all budgets stored in NUSave based on its created date."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void sortBudgetsByCreatedDate() {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        nusave.sortBudgetListByCreatedDate();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Expenditures \u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Deletes an expenditure from the specified budget and updates the list."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param expenditureIndex the index expenditure to be deleted"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteExpenditure(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(expenditureIndex);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert expenditureIndex.getExpenditureIndex().isPresent();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d expenditureIndex.getExpenditureIndex().get();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert index \u003c filteredRenderables.size();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Expenditure expenditure \u003d (Expenditure) filteredRenderables.get(index);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cInteger\u003e budgetIndex \u003d state.getBudgetIndex();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nusave.deleteExpenditure(expenditure, budgetIndex);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setTotalExpenditure(nusave.getTotalExpenditureValue(budgetIndex));"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        displayAllRenderables();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Adds an expenditure to the specified budget."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param expenditure the expenditure to be added"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void addExpenditure(Expenditure expenditure) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(expenditure);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cInteger\u003e budgetIndex \u003d this.state.getBudgetIndex();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        nusave.addExpenditure(expenditure, this.state.getBudgetIndex());"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setTotalExpenditure(nusave.getTotalExpenditureValue(budgetIndex));"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        displayAllRenderables();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Edit an expenditure in the specified budget."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param oldExpenditure the expenditure to be edited"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param editedExpenditure edited expenditure to replace the old expenditure"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        requireAllNonNull(oldExpenditure, editedExpenditure);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cInteger\u003e budgetIndex \u003d this.state.getBudgetIndex();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        nusave.editExpenditure(oldExpenditure, editedExpenditure, budgetIndex);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setTotalExpenditure(nusave.getTotalExpenditureValue(budgetIndex));"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        displayAllRenderables();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Lists all expenditures in the specified budget."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void listExpenditures() throws CommandException {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        displayAllRenderables();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (filteredRenderables.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            throw new CommandException(\"You have no expenditures recorded, try creating one with the add command!\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Searches for expenditures in the specified budget that contains the search term."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param searchTerm the search term to be used."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void findExpenditure(String searchTerm) throws CommandException {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Predicate\u003cRenderable\u003e predicate \u003d renderable -\u003e renderable.contains(searchTerm);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        updateFilteredRenderableList(predicate);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (filteredRenderables.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            throw new CommandException(String.format(FindExpenditureCommand.MESSAGE_NO_EXPENDITURES_FOUND, searchTerm));"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Sorts all expenditures stored in the specified budget by alphanumerical order."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void sortExpendituresByName() {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        nusave.sortExpendituresByName(state);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Sorts all expenditures stored in the specified budget by created date."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void sortExpenditureByCreatedDate() {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        nusave.sortExpendituresByCreateDate(state);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        repopulateObservableList();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String calculateExpenditureValue(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cInteger\u003e indexOpt \u003d budgetIndex.getBudgetIndex();"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return nusave.getTotalExpenditureValue(indexOpt);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ObservableList \u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void repopulateObservableList() {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        nusave.repopulateObservableList(state);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StateManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean isMain() {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.state.isMain();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean isBudget() {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.state.isBudget();"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isWithinRange(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndex.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d budgetIndex.getBudgetIndex().get();"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return index \u003c filteredRenderables.size();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isWithinRange(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert expenditureIndex.getExpenditureIndex().isPresent();"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d expenditureIndex.getExpenditureIndex().get();"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return index \u003c filteredRenderables.size();"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Page getPage() {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.state.getPage();"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BooleanProperty getBudgetPageProp() {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.state.getIsBudgetPageProp();"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StringProperty getTotalExpenditureStringProp() {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return state.getInfoBoxSecondRowProp();"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StringProperty getThresholdStringProp() {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return state.getThresholdStringProp();"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getPageName(BudgetIndex index) {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.nusave.getPageName(index);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getPageTitle() {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.state.getPageTitle();"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTotalExpenditureValue() {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cInteger\u003e budgetIndex \u003d state.getBudgetIndex();"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert budgetIndex.isPresent();"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return nusave.getTotalExpenditureValue(budgetIndex);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cThreshold\u003e getThreshold() {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cInteger\u003e budgetIndex \u003d state.getBudgetIndex();"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return nusave.getThreshold(budgetIndex);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isBudgetPage() {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.state.isBudgetPage();"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setBudgetIndex(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert budgetIndex !\u003d null;"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.state.setBudgetIndex(budgetIndex);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public Optional\u003cInteger\u003e getBudgetIndex() {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.state.getBudgetIndex();"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setPage(Page page) {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert page !\u003d null;"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.state.setPage(page);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setTotalExpenditure(String expenditure) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.state.setTotalExpenditure(expenditure);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setThreshold(Optional\u003cThreshold\u003e threshold) {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (threshold.isPresent()) {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            assert getPage() \u003d\u003d Page.BUDGET;"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String thresholdStr \u003d threshold.get().toString();"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.state.setThresholdStringProp(thresholdStr);"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            assert getPage() \u003d\u003d Page.MAIN;"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            this.state.setThresholdStringProp(NO_THRESHOLD_MESSAGE);"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setPageTitle(String page) {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.state.setPageTitle(page);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Renderable List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ObservableList\u003cRenderable\u003e getFilteredRenderableList() {"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return filteredRenderables;"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private void displayAllRenderables() {"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        updateFilteredRenderableList(PREDICATE_SHOW_ALL_RENDERABLES);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void updateFilteredRenderableList(Predicate\u003cRenderable\u003e predicate) {"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        filteredRenderables.setPredicate(predicate);"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo Redo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean canUndo() {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return history.hasHistory();"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void undo() {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert canUndo();"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        saveToFuture();"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        VersionedNusave previousVersion \u003d history.getHistory();"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        loadVersionedNusave(previousVersion);"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean canRedo() {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return history.hasFuture();"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void redo() {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert canRedo();"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        VersionedNusave futureVersion \u003d history.getFuture();"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        loadVersionedNusave(futureVersion);"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Saves a deep copy of the current nusave into the history."
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveToHistory() {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        VersionedNusave toSave \u003d new VersionedNusave(state, nusave);"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        history.saveToHistory(toSave);"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        logger.info(\"Saving a version of NUSave...\");"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void saveToFuture() {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        VersionedNusave toSave \u003d new VersionedNusave(state, nusave);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        history.saveToFuture(toSave);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        logger.info(\"Saving a version of NUSave...\");"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void loadVersionedNusave(VersionedNusave versionedNusave) {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        BudgetList budgetList \u003d versionedNusave.getBudgetList();"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nusave.setBudgets(budgetList);"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Optional\u003cInteger\u003e budgetIndex \u003d versionedNusave.getBudgetIndex();"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (budgetIndex.isEmpty()) {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            closeBudget();"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Integer index \u003d budgetIndex.get();"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            openBudget(index);"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ModelManager that \u003d (ModelManager) o;"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Objects.equals(nusave, that.nusave)"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 Objects.equals(userPrefs, that.userPrefs)"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 Objects.equals(filteredRenderables, that.filteredRenderables)"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 Objects.equals(state, that.state);"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 69,
      "sogggy": 197,
      "yu-ming-chen": 45,
      "davidliew9": 32,
      "wenhaogoh": 134,
      "-": 100
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Nusave.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.BudgetList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.State;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Nusave implements ReadOnlyNusave {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final BudgetList budgetList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private final ObservableList\u003cRenderable\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private final ObservableList\u003cRenderable\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetList \u003d new BudgetList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Nusave() { }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toBeCopied"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Nusave(ReadOnlyNusave toBeCopied) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getPageName(BudgetIndex index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.budgetList.getBudgetName(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Resets the data with the new NUsave"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param newData"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void resetData(ReadOnlyNusave newData) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setBudgets(newData.getBudgetListAsObservableList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Budget \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Adds a budget to the NUSave."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void addBudgetToFront(Budget budget) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.budgetList.addToFront(budget);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.internalList.add(0, budget);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Adds a budget to the NUSave."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param budget the budget to be added."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void addBudget(Budget budget) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.budgetList.add(budget);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.internalList.add(budget);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Deletes a budget from NUSave."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteBudget(Budget toRemove) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.budgetList.remove(toRemove);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.internalList.remove(toRemove);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Edit a budget from NUSave."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param oldBudget the budget to be edited"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param editedBudget edited budget to replace the old budget"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void editBudget(Budget oldBudget, Budget editedBudget) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        int index \u003d budgetList.getIndexOfBudget(oldBudget);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.budgetList.editBudget(oldBudget, editedBudget);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.internalList.set(index, editedBudget);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setBudgets(BudgetList budgetList) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        List\u003cBudget\u003e budgets \u003d budgetList.getBudgets();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setBudgets(budgets);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setBudgets(List\u003cBudget\u003e budgets) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.budgetList.setBudgets(budgets);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.internalList.setAll(budgets);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetList getBudgetList() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return budgetList;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cThreshold\u003e getThreshold(Optional\u003cInteger\u003e budgetIndexOpt) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert budgetIndexOpt.isPresent();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int budgetIndex \u003d budgetIndexOpt.get();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.budgetList.getBudgetThreshold(budgetIndex);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteAllBudgets() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setBudgets(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public int getIndexOfBudget(Budget budget) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return budgetList.getIndexOfBudget(budget);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Expenditure \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Adds a expenditure to the NUSave budget according to its index."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void addExpenditure(Expenditure expenditure, Optional\u003cInteger\u003e budgetIndexOpt) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndexOpt.isPresent();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int budgetIndex \u003d budgetIndexOpt.get();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.internalList.add(0, expenditure);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.budgetList.addExpenditure(expenditure, budgetIndex);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Edits an expenditure to the NUSave budget according to its index."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param oldExpenditure"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param editedExpenditure"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param budgetIndexOpt"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                                Optional\u003cInteger\u003e budgetIndexOpt) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndexOpt.isPresent();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int budgetIndex \u003d budgetIndexOpt.get();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        int expenditureIndex \u003d this.internalList.indexOf(oldExpenditure);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.internalList.set(expenditureIndex, editedExpenditure);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.budgetList.editExpenditure(oldExpenditure, editedExpenditure, budgetIndex);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Deletes an expenditure from the NUSave budget according to its index."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteExpenditure(Expenditure expenditure, Optional\u003cInteger\u003e budgetIndexOpt) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndexOpt.isPresent();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int budgetIndex \u003d budgetIndexOpt.get();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        List\u003cExpenditure\u003e expenditureList \u003d budgetList.getExpendituresAsList(budgetIndex);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditureList.remove(expenditure);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.internalList.remove(expenditure);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTotalExpenditureValue(Optional\u003cInteger\u003e budgetIndexOpt) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert budgetIndexOpt.isPresent();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int budgetIndex \u003d budgetIndexOpt.get();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.budgetList.getTotalExpenditureValue(budgetIndex);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ObservableList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Sets the observable list displayed in UI based on the"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * current state."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param state State containing the current page and"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     *              budget index."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void repopulateObservableList(State state) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (state.isBudget()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            // repopulate observable list with Expenditures"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert state.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            int index \u003d state.getBudgetIndex().get();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert index \u003c budgetList.getSize();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            this.internalList.setAll(budgetList.getExpendituresAsList(index));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } else if (state.isMain()) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            // repopulate observable list with Budgets"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            this.internalList.setAll(budgetList.getBudgets());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ObservableList\u003cBudget\u003e getBudgetListAsObservableList() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return budgetList.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ObservableList\u003cRenderable\u003e getInternalList() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void sortBudgetListByName() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        budgetList.sortBudgetsListByName();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void sortBudgetListByCreatedDate() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetList.sortBudgetListByCreatedDate();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * sort current ExpenditureList by Name"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param state current state"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void sortExpendituresByName(State state) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert state.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d state.getBudgetIndex().get();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        budgetList.getExpenditures(index).sortExpendituresByName();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * sort current ExpenditureList by CreateDate"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param state current state"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void sortExpendituresByCreateDate(State state) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assert state.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        int index \u003d state.getBudgetIndex().get();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        budgetList.getExpenditures(index).sortExpendituresByCreateDate();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Nusave nusave \u003d (Nusave) o;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Objects.equals(budgetList, nusave.budgetList)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 Objects.equals(internalList, nusave.internalList)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 Objects.equals(internalUnmodifiableList, nusave.internalUnmodifiableList);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Objects.hash(budgetList, internalList, internalUnmodifiableList);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 39,
      "sogggy": 40,
      "yu-ming-chen": 46,
      "davidliew9": 19,
      "wenhaogoh": 100
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ReadOnlyNusave.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public interface ReadOnlyNusave {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    ObservableList\u003cBudget\u003e getBudgetListAsObservableList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ReadOnlyUserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Unmodifiable view of user prefs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public interface ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Path getNusaveFilePath();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 1,
      "-": 15
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Renderable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public interface Renderable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    boolean contains(String str);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/model/UserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents User\u0027s preferences."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefs implements ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private GuiSettings guiSettings \u003d new GuiSettings();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Path nusaveFilePath \u003d Paths.get(\"data\", \"nusave.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with default values."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public UserPrefs() {}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public UserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        resetData(userPrefs);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyUserPrefs newUserPrefs) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(newUserPrefs);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        setGuiSettings(newUserPrefs.getGuiSettings());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setNusaveFilePath(newUserPrefs.getNusaveFilePath());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        this.guiSettings \u003d guiSettings;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setNusaveFilePath(Path nusaveFilePath) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(nusaveFilePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.nusaveFilePath \u003d nusaveFilePath;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusaveFilePath;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof UserPrefs)) { //this handles null as well."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs o \u003d (UserPrefs) other;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings.equals(o.guiSettings)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 nusaveFilePath.equals(o.nusaveFilePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return Objects.hash(guiSettings, nusaveFilePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Gui Settings : \" + guiSettings);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        sb.append(\"\\nLocal data file location : \" + nusaveFilePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 10,
      "-": 76
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/Budget.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Budget implements Renderable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final Date createdOn;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Optional\u003cThreshold\u003e threshold;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final ExpenditureList expenditures;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param expenditures"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Budget(Name name, Date date, ExpenditureList expenditures) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireAllNonNull(name, expenditures);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.createdOn \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.expenditures \u003d expenditures;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.threshold \u003d Optional.empty();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param threshold"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param expenditures"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Budget(Name name, Date date, Optional\u003cThreshold\u003e threshold, ExpenditureList expenditures) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(name, expenditures, threshold);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.createdOn \u003d date;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.threshold \u003d threshold;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.expenditures \u003d expenditures;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deep copy of the given {@code Budget}."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toClone the {@code Budget} to be copied."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return the deep copy of the given {@code Budget}."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Budget clone(Budget toClone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(toClone);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Name nameClone \u003d Name.clone(toClone.name);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Date dateClone \u003d Date.clone(toClone.createdOn);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Optional\u003cThreshold\u003e thresholdToClone \u003d toClone.threshold;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Optional\u003cThreshold\u003e thresholdClone \u003d thresholdToClone.isEmpty()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                ? Optional.empty()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                : Threshold.clone(thresholdToClone.get()).toOptional();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        ExpenditureList expendituresClone \u003d ExpenditureList.clone(toClone.expenditures);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Budget(nameClone, dateClone, thresholdClone, expendituresClone);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Date getCreatedOn() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return createdOn;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cThreshold\u003e getThreshold() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return threshold;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public ExpenditureList getExpenditures() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return expenditures;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public List\u003cExpenditure\u003e getExpendituresList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return expenditures.getExpenditures();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public int getExpenditureSize() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return expenditures.getExpenditureSize();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTotalExpenditure() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return expenditures.getTotalExpenditure();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void addExpenditureToFront(Expenditure expenditure) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditures.addToFront(expenditure);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void addExpenditure(Expenditure expenditure) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expenditures.add(expenditure);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Edits an expenditure within the expenditures by replacing the {code: oldExpenditure}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * with a {code: newExpenditure}."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param oldExpenditure"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param editedExpenditure"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        expenditures.editExpenditure(oldExpenditure, editedExpenditure);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return name.toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!(other instanceof Budget)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget otherBudget \u003d (Budget) other;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return otherBudget.getName().equals(getName())"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 otherBudget.getCreatedOn().equals(getCreatedOn())"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 otherBudget.getThreshold().equals(getThreshold())"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 otherBudget.getExpenditures().equals(getExpenditures());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if {@code Name} contains the given {@code string}."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean contains(String string) { //Todo: Change method name to be more descriptive."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String nameLowerCase \u003d name.value.toLowerCase(); //Todo: Tell, don\u0027t ask."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nameLowerCase.contains(string.toLowerCase());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 11,
      "sogggy": 23,
      "yu-ming-chen": 18,
      "davidliew9": 10,
      "wenhaogoh": 74
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/BudgetList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.sort.SortBudgetsByCreateDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.sort.SortBudgetsByName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * A list of persons that enforces uniqueness between its elements and does not allow nulls."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * as to ensure that the person with exactly the same fields will be removed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": " *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": " *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class BudgetList implements Iterable\u003cBudget\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final List\u003cBudget\u003e budgets;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public BudgetList(List\u003cBudget\u003e budgets) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgets \u003d budgets;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deep copy of the given {@code BudgetList}."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toClone the {@code BudgetList} to be copied."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return the deep copy of the given {@code BudgetList}."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static BudgetList clone(BudgetList toClone) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(toClone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        BudgetList clone \u003d new BudgetList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (Budget budget : toClone.budgets) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            clone.add(Budget.clone(budget));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return clone;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Adds a budget to the front of the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void addToFront(Budget toAdd) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        budgets.add(0, toAdd);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Adds a budget to the back of the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toAdd the {@code Budget} to be added."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void add(Budget toAdd) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        budgets.add(toAdd);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Adds an expenditure to a the budget at index index in budgets."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param toAdd the Expenditure object to be added."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param index the index of the budget which the expenditure will be added into."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void addExpenditure(Expenditure toAdd, int index) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Budget budget \u003d budgets.get(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        budget.addExpenditureToFront(toAdd);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * Edits an expenditure to a budget at {code: index} in budgets."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param oldExpenditure"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param newExpenditure"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void editExpenditure(Expenditure oldExpenditure, Expenditure newExpenditure, int index) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Budget budget \u003d budgets.get(index);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        budget.editExpenditure(oldExpenditure, newExpenditure);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Removes the equivalent budget from the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * The budget must exist in the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void remove(Budget toRemove) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        budgets.remove(toRemove);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureList getExpenditures(int index) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Budget budget \u003d budgets.get(index);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return budget.getExpenditures();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public List\u003cExpenditure\u003e getExpendituresAsList(int index) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget budget \u003d budgets.get(index);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return budget.getExpendituresList();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public List\u003cBudget\u003e getBudgets() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return budgets;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getBudgetName(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(budgetIndex);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert budgetIndex.getBudgetIndex().isPresent();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int index \u003d budgetIndex.getBudgetIndex().get();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this.budgets.get(index).getName().value;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cThreshold\u003e getBudgetThreshold(int index) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cThreshold\u003e threshold \u003d this.budgets.get(index).getThreshold();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return threshold;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return budgets.size();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getTotalExpenditureValue(int index) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Budget budget \u003d budgets.get(index);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return budget.getTotalExpenditure();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Replaces the contents of this list with {@code budgets}."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setBudgets(List\u003cBudget\u003e budgets) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireAllNonNull(budgets);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.budgets.clear();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.budgets.addAll(budgets);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int getIndexOfBudget(Budget budget) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return this.budgets.indexOf(budget);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Edit a budget from NUSave."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param oldBudget the budget to be edited"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param editedBudget edited budget to replace the old budget"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void editBudget(Budget oldBudget, Budget editedBudget) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        int index \u003d this.budgets.indexOf(oldBudget);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.budgets.set(index, editedBudget);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public ObservableList\u003cBudget\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        ObservableList\u003cBudget\u003e internalBudgetList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        internalBudgetList.setAll(budgets);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        ObservableList\u003cBudget\u003e internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(internalBudgetList);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void sortBudgetsListByName() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        budgets.sort(new SortBudgetsByName());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void sortBudgetListByCreatedDate() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.budgets.sort(new SortBudgetsByCreateDate());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Iterator\u003cBudget\u003e iterator() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return budgets.iterator();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                || (other instanceof BudgetList // instanceof handles nulls"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                \u0026\u0026 (budgets.containsAll(((BudgetList) other).budgets))"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                \u0026\u0026 ((BudgetList) other).getBudgets().containsAll(budgets));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 35,
      "sogggy": 79,
      "yu-ming-chen": 24,
      "davidliew9": 12,
      "wenhaogoh": 40
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/Date.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class Date implements Comparable\u003cDate\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be able to be parsed by LocalDate.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Constructs a {@code Date}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param value A valid date."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Date(String value) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireNonNull(value);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deep copy of the given {@code Date}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toClone the {@code Date} to be copied."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return the deep copy of the given {@code Date}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Date clone(Date toClone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(toClone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Date(toClone.value);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Returns true if a given string is a valid date."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            LocalDate.parse(test);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                || (other instanceof Date // instanceof handles nulls"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 value.equals(((Date) other).value)); // state check"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compareTo(Date date) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return LocalDate.parse(value).compareTo(LocalDate.parse(date.value));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 60,
      "wenhaogoh": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/Name.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Name {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Names should only contain alphanumeric characters and spaces, and it should not be blank.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * The first character of the name must not be a whitespace,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructs a {@code Name}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param value A valid title."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Name(String value) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(value);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deep copy of the given {@code ExpenditureList}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toClone the {@code ExpenditureList} to be copied."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return the deep copy of the given {@code ExpenditureList}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Name clone(Name toClone) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(toClone);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Name(toClone.value);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if a given string is a valid name."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                || (other instanceof Name // instanceof handles nulls"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 value.equals(((Name) other).value)); // state check"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 5,
      "wenhaogoh": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/Threshold.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.ParserUtil.isValidDouble;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Threshold {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Thresholds can be empty or contain only numbers, and it can have at most 2 decimal places.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String NON_ZERO_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \"Sorry! Thresholds cannot be 0 or less! \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    + \"It can only exist in the range between $0.01 and $1,000,000, inclusive.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String EXCEEDED_VALUE_ERROR \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \"Sorry! Thresholds cannot exceed $1,000,000. \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    + \"It can only exist in the range between $0.01 and $1,000,000, inclusive.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"^$|-?[0-9]+(\\\\.[0-9]?[0-9])?$\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String NO_THRESHOLD_MESSAGE \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final double MAX_VALUE \u003d 1000000.00;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code Threshold}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Threshold(String threshold) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(threshold);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        checkArgument(isValid(threshold), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        value \u003d threshold;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deep copy of the given {@code Threshold}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toClone the {@code Threshold} to be copied."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return the deep copy of the given {@code Threshold}."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Threshold clone(Threshold toClone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(toClone);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Threshold(toClone.value);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if a given string is a valid threshold."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isZeroOrLess(String test) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Double.parseDouble(test) \u003c\u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isExceededValue(String test) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Double.parseDouble(test) \u003e Threshold.MAX_VALUE \u0026\u0026 isValidDouble(test);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts {@code Threshold} into an {@code Optional\u003cThreshold\u003e}."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cThreshold\u003e toOptional() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (value.isBlank()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return Optional.of(this);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                || (other instanceof Threshold // instanceof handles nulls"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 value.equals(((Threshold) other).value)); // state check"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 18,
      "wenhaogoh": 67
    }
  },
  {
    "path": "src/main/java/seedu/address/model/budget/exceptions/BudgetNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.model.budget.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Signals that the operation is unable to find the specified person."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class BudgetNotFoundException extends RuntimeException {}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/model/expenditure/Date.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.expenditure;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class Date implements Comparable\u003cDate\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be able to be parsed by LocalDate.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code Date}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param value A valid date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Date(String value) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(value);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deep copy of the given {@code Date}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toClone the {@code Date} to be copied."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return the deep copy of the given {@code Date}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Date clone(Date toClone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(toClone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Date(toClone.value);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if a given string is a valid date."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            LocalDate.parse(test);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public java.util.Date getFormattedCreatedOn() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return java.sql.Date.valueOf(LocalDate.parse(value));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                || (other instanceof Date // instanceof handles nulls"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 value.equals(((Date) other).value)); // state check"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compareTo(Date date) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return LocalDate.parse(value).compareTo(LocalDate.parse(date.value));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 6,
      "yu-ming-chen": 6,
      "wenhaogoh": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/model/expenditure/Expenditure.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.model.expenditure;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Expenditure implements Renderable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Price price;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final Date createdOn;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param price"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param createdOn"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param tags"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Expenditure(Name name, Price price, Date createdOn, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireAllNonNull(name, price, createdOn, tags);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.price \u003d price;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.createdOn \u003d createdOn;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.tags.addAll(tags);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deep copy of the given {@code Expenditure}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toClone the {@code Expenditure} to be copied."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return the deep copy of the given {@code Expenditure}."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure clone(Expenditure toClone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Name nameClone \u003d Name.clone(toClone.name);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Price priceClone \u003d Price.clone(toClone.price);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Date dateClone \u003d Date.clone(toClone.createdOn);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Set\u003cTag\u003e tagsClone \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (Tag tag : toClone.tags) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            tagsClone.add(Tag.clone(tag));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Expenditure(nameClone, priceClone, dateClone, tagsClone);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Price getPrice() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return price;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Date getCreatedOn() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return createdOn;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public java.util.Date getFormattedCreatedOn() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return createdOn.getFormattedCreatedOn();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!(other instanceof Expenditure)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Expenditure otherExpenditure \u003d (Expenditure) other;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return otherExpenditure.getName().equals(getName())"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 otherExpenditure.getPrice().equals(getPrice())"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 otherExpenditure.getCreatedOn().equals(getCreatedOn())"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 otherExpenditure.getTags().equals(getTags());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return name.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public boolean contains(String str) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String nameLowerCase \u003d name.value.toLowerCase();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return nameLowerCase.contains(str.toLowerCase());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 8,
      "sogggy": 52,
      "wenhaogoh": 35
    }
  },
  {
    "path": "src/main/java/seedu/address/model/expenditure/ExpenditureList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.expenditure;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.sort.SortExpendituresByCreateDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortExpendituresByName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class ExpenditureList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final List\u003cExpenditure\u003e expenditures;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public ExpenditureList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.expenditures \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public ExpenditureList(List\u003cExpenditure\u003e expenditures) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.expenditures \u003d expenditures;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deep copy of the given {@code ExpenditureList}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toClone the {@code ExpenditureList} to be copied."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return the deep copy of the given {@code ExpenditureList}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static ExpenditureList clone(ExpenditureList toClone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(toClone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        ExpenditureList clone \u003d new ExpenditureList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (Expenditure expenditure : toClone.expenditures) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            clone.add(Expenditure.clone(expenditure));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return clone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Adds a expenditure to the front of the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void addToFront(Expenditure toAdd) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        expenditures.add(0, toAdd);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Adds an {@code Expenditure} to the back of the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toAdd the {@code Expenditure} to be added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void add(Expenditure toAdd) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditures.add(toAdd);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public List\u003cExpenditure\u003e getExpenditures() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return expenditures;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int getExpenditureSize() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return expenditures.size();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Get total value in the expenditure list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String getTotalExpenditure() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Double resultDouble \u003d 0.0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        for (Expenditure e : expenditures) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            Price price \u003d e.getPrice();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String value \u003d price.value;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            resultDouble +\u003d Double.parseDouble(value);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return String.format(\"%.2f\", Double.valueOf(resultDouble));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Edits an expenditure within the expenditures by replacing the {code: oldExpenditure}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * with a {code: newExpenditure}."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param oldExpenditure"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param editedExpenditure"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        int index \u003d expenditures.indexOf(oldExpenditure);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        expenditures.set(index, editedExpenditure);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Sort the expenditure list by name in alphabetical order."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void sortExpendituresByName() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        expenditures.sort(new SortExpendituresByName());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Sort the expenditure list by Created date with latest on top."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void sortExpendituresByCreateDate() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.expenditures.sort(new SortExpendituresByCreateDate());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ExpenditureList that \u003d (ExpenditureList) o;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Objects.equals(expenditures, that.expenditures);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Objects.hash(expenditures);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 10,
      "yu-ming-chen": 75,
      "wenhaogoh": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/model/expenditure/Name.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.expenditure;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Name {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Names should only contain alphanumeric characters and spaces, and it should not be blank.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * The first character of the name must not be a whitespace,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructs a {@code Name}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param value A valid name."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Name(String value) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(value);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deep copy of the given {@code Name}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toClone the {@code Name} to be copied."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return the deep copy of the given {@code Name}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Name clone(Name toClone) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(toClone);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Name(toClone.value);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if a given string is a valid name."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                || (other instanceof Name // instanceof handles nulls"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 value.equals(((Name) other).value)); // state check"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 5,
      "wenhaogoh": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/model/expenditure/Price.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.expenditure;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.ParserUtil.isValidDouble;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Price {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \"Prices should only contain numbers, and it can have at most 2 decimal places.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String NON_ZERO_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \"Sorry! Prices cannot be 0 or less! It can only exist in the range between $0.01 and $10,000, inclusive.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String EXCEEDED_VALUE_ERROR \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \"Sorry! Prices cannot exceed $10,000. \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    + \"It can only exist in the range between $0.01 and $10,000, inclusive.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"-?[0-9]+(\\\\.[0-9]?[0-9])?$\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final double MAX_VALUE \u003d 10000.00;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code Price}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param price A valid price."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Price(String price) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(price);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        checkArgument(isValid(price), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        value \u003d price;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deep copy of the given {@code Price}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toClone the {@code Price} to be copied"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return the deep copy of the given {@code Price}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Price clone(Price toClone) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(toClone);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Price(toClone.value);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if a given string is a valid price."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isZeroOrLess(String test) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Double.parseDouble(test) \u003c\u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isExceededValue(String test) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Double.parseDouble(test) \u003e Price.MAX_VALUE \u0026\u0026 isValidDouble(test);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                || (other instanceof Price // instanceof handles nulls"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u0026\u0026 value.equals(((Price) other).value)); // state check"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 18,
      "wenhaogoh": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/model/history/History.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.history;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public interface History\u003cT\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean hasHistory();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    T getHistory();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean hasFuture();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    T getFuture();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveToHistory(T history);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveToFuture(T history);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/model/history/HistoryManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.history;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class HistoryManager\u003cT\u003e implements History\u003cT\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Node\u003cT\u003e history;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public HistoryManager() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        history \u003d new Node\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setHistory(Node\u003cT\u003e history) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.history \u003d history;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean hasHistory() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert history !\u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return history.hasPrevious();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public T getHistory() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert hasHistory();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        rollBack();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        T history \u003d this.history.getValue();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return history;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean hasFuture() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert history !\u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return history.hasNext();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public T getFuture() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert hasFuture();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        rollForward();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return history.getValue();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveToHistory(T toSave) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(toSave);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert history !\u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cT\u003e nodeToSave \u003d new Node\u003c\u003e(toSave);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cT\u003e nullNode \u003d new Node\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nodeToSave.connectTo(nullNode);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (history.hasPrevious()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            history.getPrevious().connectTo(nodeToSave);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        history \u003d nullNode;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveToFuture(T toSave) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(toSave);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert hasHistory();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!isNull()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cT\u003e nodeToSave \u003d new Node\u003c\u003e(toSave);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cT\u003e nullNode \u003d new Node\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nodeToSave.connectTo(nullNode);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        history.getPrevious().connectTo(nodeToSave);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        history \u003d nodeToSave;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void rollBack() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert history.hasPrevious();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        history \u003d history.getPrevious();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void rollForward() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert history.hasNext();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        history \u003d history.getNext();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private boolean isNull() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assert history !\u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return history.isNull();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        HistoryManager\u003c?\u003e that \u003d (HistoryManager\u003c?\u003e) o;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Objects.equals(history, that.history);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 15,
      "wenhaogoh": 84
    }
  },
  {
    "path": "src/main/java/seedu/address/model/history/Node.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.history;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Represents a node in a doubly- inked list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * @param \u003cT\u003e the type of the doubly-linked list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Node\u003cT\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private T value;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Node\u003cT\u003e next;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Node\u003cT\u003e previous;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs an empty {@code Node}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Node() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.value \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.next \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.previous \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code Node} with the given value"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Node(T value) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(value);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.next \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.previous \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public T getValue() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Node\u003cT\u003e getNext() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return next;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Node\u003cT\u003e getPrevious() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return previous;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean hasNext() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return !isNull() \u0026\u0026 !next.isNull();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean hasPrevious() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return previous !\u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void setNext(Node\u003cT\u003e next) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.next \u003d next;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void setPrevious(Node\u003cT\u003e previous) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.previous \u003d previous;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isNull() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return value \u003d\u003d null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return isNull() \u0026\u0026 !hasPrevious();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a bi-directional forward connection to another node."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toConnect the node to be connected to"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void connectTo(Node\u003cT\u003e toConnect) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(toConnect);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        disconnectNext();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setNext(toConnect);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        toConnect.disconnectPrevious();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        toConnect.setPrevious(this);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void disconnectPrevious() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (previous !\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Node\u003cT\u003e temp \u003d previous;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            previous \u003d null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            temp.disconnectNext();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void disconnectNext() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (next !\u003d null) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Node\u003cT\u003e temp \u003d next;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            next \u003d null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            temp.disconnectPrevious();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Node\u003c?\u003e node \u003d (Node\u003c?\u003e) o;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return Objects.equals(value, node.value);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 13,
      "wenhaogoh": 97
    }
  },
  {
    "path": "src/main/java/seedu/address/model/history/VersionedNusave.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.history;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.BudgetList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.state.State;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class VersionedNusave {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Optional\u003cInteger\u003e budgetIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final BudgetList budgetList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code VerisonedNusave}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param state the current state of NUSave"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param nusave the NUSave model to be versioned"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public VersionedNusave(State state, Nusave nusave) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireAllNonNull(state, nusave);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.budgetIndex \u003d state.getBudgetIndex();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.budgetList \u003d BudgetList.clone(nusave.getBudgetList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    };"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cInteger\u003e getBudgetIndex() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return budgetIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetList getBudgetList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return budgetList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        VersionedNusave that \u003d (VersionedNusave) o;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return Objects.equals(budgetIndex, that.budgetIndex)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                \u0026\u0026 Objects.equals(budgetList, that.budgetList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 14,
      "wenhaogoh": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/model/sort/SortBudgetsByCreateDate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class SortBudgetsByCreateDate implements Comparator\u003cBudget\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compare(Budget a, Budget b) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return b.getCreatedOn().compareTo(a.getCreatedOn());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 12,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/sort/SortBudgetsByName.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class SortBudgetsByName implements Comparator\u003cBudget\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compare(Budget a, Budget b) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return a.getName().value.toLowerCase().compareTo(b.getName().value.toLowerCase());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 12,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/sort/SortExpendituresByCreateDate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class SortExpendituresByCreateDate implements Comparator\u003cExpenditure\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compare(Expenditure a, Expenditure b) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return b.getCreatedOn().compareTo(a.getCreatedOn());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 12,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/sort/SortExpendituresByName.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class SortExpendituresByName implements Comparator\u003cExpenditure\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int compare(Expenditure a, Expenditure b) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return a.getName().value.toLowerCase().compareTo(b.getName().value.toLowerCase());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/model/sort/SortType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.sort;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public enum SortType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    TIME,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    NAME"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tag/Tag.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.tag;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Tag in the address book."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Guarantees: immutable; name is valid as declared in {@link #isValid(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum} ]+\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String tagName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code Tag}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tagName A valid tag name."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public Tag(String tagName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tagName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        checkArgument(isValid(tagName), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deep copy of the given {@code Tag}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param toClone the {@code Tag} to be copied."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return the deep copy of the given {@code Tag}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Tag clone(Tag toClone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Tag(toClone.tagName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a given string is a valid tag name."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static boolean isValid(String test) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof Tag // instanceof handles nulls"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return tagName.hashCode();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Format state as text for viewing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027[\u0027 + tagName + \u0027]\u0027;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "sogggy": 3,
      "wenhaogoh": 9,
      "-": 50
    }
  },
  {
    "path": "src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods for populating {@code AddressBook} with sample data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class SampleDataUtil {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Budget[] getSampleBudgets() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Budget[] {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"Temasek Hall Basketball\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-10\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"500\").toOptional(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new ExpenditureList(new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures())))),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"Temasek Hall Marketing\"),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-11\"),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"1000\").toOptional(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new ExpenditureList(new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures())))),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"October Budget\"),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-10\"),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"300\").toOptional(),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new ExpenditureList(new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures())))),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"Monthly Bills\"),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-12\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"200\").toOptional(),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new ExpenditureList(new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures())))),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"NUS Hackers Monthly Budget\"),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-18\"),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"600\").toOptional(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new ExpenditureList(new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures())))),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"NUS Fintech Society Monthly Budget\"),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-15\"),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"900\").toOptional(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new ExpenditureList(new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures())))),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"Tembusu College Annual DnD Fund\"),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-11\"),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"400\").toOptional(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new ExpenditureList(new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures())))),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Budget(new Name(\"Personal Expenditure\"),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new seedu.address.model.budget.Date(\"2020-10-01\"),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Threshold(\"200\").toOptional(),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    new ExpenditureList(new ArrayList\u003c\u003e(Arrays.asList(getSampleExpenditures()))))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure[] getSampleExpenditures() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Expenditure[]{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Shirt\"),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"85.50\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"White\")),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Pants\"),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"100.50\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Black\")),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Belt\"),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"50.90\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Brown\")),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Shoes\"),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"89.90\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Black\")),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Gloves\"),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"10.90\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Black\")),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Watch\"),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"369.90\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Black\")),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            new Expenditure(new seedu.address.model.expenditure.Name(\"Socks\"),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    new Price(\"3.00\"), new Date(\"2020-10-10\"), getTagSet(\"Apparel\", \"Black\")),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        };"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static ReadOnlyNusave getSampleNusave() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Nusave sampleNusave \u003d new Nusave();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (Budget budget : getSampleBudgets()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            sampleNusave.addBudgetToFront(budget);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return sampleNusave;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a tag set containing the list of strings given."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Set\u003cTag\u003e getTagSet(String... strings) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(strings)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(Tag::new)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toSet());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "sogggy": 32,
      "yu-ming-chen": 17,
      "wenhaogoh": 18,
      "-": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/state/Page.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public enum Page {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    MAIN,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    BUDGET"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/state/PageTitle.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class PageTitle {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String MAIN_PAGE_TITLE \u003d \"NUSave\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/state/State.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public interface State {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Optional\u003cInteger\u003e getBudgetIndex();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Page getPage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    BooleanProperty getIsBudgetPageProp();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    StringProperty getInfoBoxSecondRowProp();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    StringProperty getThresholdStringProp();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    boolean isBudgetPage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    String getPageTitle();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    boolean isMain();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    boolean isBudget();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void setIsBudgetPage(boolean isExpenditure);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setPage(Page page);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setTotalExpenditure(String expenditure);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setThresholdStringProp(String threshold);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setBudgetIndex(BudgetIndex index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setPageTitle(String pageTitle);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setOpenCommandState(String pageName, String newExpenditureValue, Optional\u003cThreshold\u003e newThreshold);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setCloseCommandState();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 42,
      "wenhaogoh": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/state/StateManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.model.budget.Threshold.NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.SimpleBooleanProperty;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.SimpleStringProperty;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.EmptyBudgetIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class StateManager implements State {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private BudgetIndex budgetIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Page currentPage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private BooleanProperty isBudgetPageProp \u003d new SimpleBooleanProperty(false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StringProperty infoBoxSecondRowProp \u003d new SimpleStringProperty(defaultValueTotalExpenditure());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StringProperty thresholdStringProp \u003d new SimpleStringProperty(NO_THRESHOLD_MESSAGE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String pageTitle;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructs a {@code StateManager} with the given {@code BudgetIndex} and {@code Page}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param budgetIndex current budget index NUSave is accessed in."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param currentPage current page NUSave is accessed in."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param pageTitle Title of the current page."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StateManager(BudgetIndex budgetIndex, Page currentPage, String pageTitle) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireAllNonNull(budgetIndex, currentPage, pageTitle);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetIndex \u003d budgetIndex;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.currentPage \u003d currentPage;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.pageTitle \u003d pageTitle;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //Clock timing on Budgets Page"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String defaultValueTotalExpenditure() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new SimpleDateFormat(\"hh:mm a\").format(Calendar.getInstance().getTime());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cInteger\u003e getBudgetIndex() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.budgetIndex.getBudgetIndex();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Page getPage() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.currentPage;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BooleanProperty getIsBudgetPageProp() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this.isBudgetPageProp;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StringProperty getInfoBoxSecondRowProp() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return infoBoxSecondRowProp;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StringProperty getThresholdStringProp() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return thresholdStringProp;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isBudgetPage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this.isBudgetPageProp.getValue();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public String getPageTitle() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.pageTitle;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean isMain() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return this.currentPage \u003d\u003d Page.MAIN;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean isBudget() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return this.currentPage \u003d\u003d Page.BUDGET;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setIsBudgetPage(boolean isBudgetPage) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.isBudgetPageProp.setValue(isBudgetPage);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setPage(Page page) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(page);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.currentPage \u003d page;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (page \u003d\u003d Page.BUDGET) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            setIsBudgetPage(true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            setIsBudgetPage(false);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setTotalExpenditure(String expenditure) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(expenditure);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.infoBoxSecondRowProp.setValue(expenditure);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setThresholdStringProp(String threshold) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        requireNonNull(threshold);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.thresholdStringProp.setValue(threshold);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setBudgetIndex(BudgetIndex index) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetIndex \u003d index;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setPageTitle(String pageTitle) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        requireNonNull(pageTitle);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.pageTitle \u003d pageTitle;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setOpenCommandState(String pageTitle,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                         String newExpenditureValue, Optional\u003cThreshold\u003e newThreshold) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert currentPage \u003d\u003d Page.MAIN;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setPageTitle(pageTitle);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setPage(Page.BUDGET);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setTotalExpenditure(newExpenditureValue);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (newThreshold.isPresent()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            String threshold \u003d newThreshold.get().toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            setThresholdStringProp(threshold);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setCloseCommandState() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert currentPage \u003d\u003d Page.BUDGET;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setBudgetIndex(new EmptyBudgetIndex());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setPageTitle(PageTitle.MAIN_PAGE_TITLE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setPage(Page.MAIN);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setTotalExpenditure(StateManager.defaultValueTotalExpenditure());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setThresholdStringProp(NO_THRESHOLD_MESSAGE);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        StateManager that \u003d (StateManager) o;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Objects.equals(budgetIndex, that.budgetIndex)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 currentPage \u003d\u003d that.currentPage"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 Objects.equals(pageTitle, that.pageTitle);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 10,
      "sogggy": 146,
      "wenhaogoh": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/state/budgetindex/BudgetIndex.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state.budgetindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public interface BudgetIndex {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    Optional\u003cInteger\u003e getBudgetIndex();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setIndex(int index);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/state/budgetindex/BudgetIndexManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state.budgetindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class BudgetIndexManager implements BudgetIndex {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private int budgetIndex;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Constructor for BudgetIndexManager."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param budgetIndex the index of the current budget."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public BudgetIndexManager(int budgetIndex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assert budgetIndex \u003e\u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetIndex \u003d budgetIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setIndex(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assert index \u003e\u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetIndex \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cInteger\u003e getBudgetIndex() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Optional.of(this.budgetIndex);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndexManager that \u003d (BudgetIndexManager) o;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return budgetIndex \u003d\u003d that.budgetIndex;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 6,
      "sogggy": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/state/budgetindex/EmptyBudgetIndex.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state.budgetindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class EmptyBudgetIndex implements BudgetIndex {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void setIndex(int index) throws UnsupportedOperationException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Optional\u003cInteger\u003e getBudgetIndex() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return obj instanceof EmptyBudgetIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 2,
      "sogggy": 13,
      "yu-ming-chen": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/state/expenditureindex/ExpenditureIndex.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.state.expenditureindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public interface ExpenditureIndex {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    Optional\u003cInteger\u003e getExpenditureIndex();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void setIndex(int index);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/state/expenditureindex/ExpenditureIndexManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.state.expenditureindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class ExpenditureIndexManager implements ExpenditureIndex {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private int expenditureIndex;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param expenditureIndex the index of the expenditure."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public ExpenditureIndexManager(int expenditureIndex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert expenditureIndex \u003e\u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.expenditureIndex \u003d expenditureIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public Optional\u003cInteger\u003e getExpenditureIndex() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return Optional.of(this.expenditureIndex);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void setIndex(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert index \u003e\u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.expenditureIndex \u003d index;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ExpenditureIndexManager that \u003d (ExpenditureIndexManager) o;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return expenditureIndex \u003d\u003d that.expenditureIndex;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 20,
      "davidliew9": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedBudget.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Jackson-friendly version of {@link Budget}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class JsonAdaptedBudget {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Budget\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final String threshold;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final String createdOn;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final List\u003cJsonAdaptedExpenditure\u003e expenditures \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code JsonSerializableBudget} with the given expenditures."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public JsonAdaptedBudget(@JsonProperty(\"name\") String name, @JsonProperty(\"createdOn\") String createdOn,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                             @JsonProperty(\"threshold\") String threshold,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                             @JsonProperty(\"expenditures\") List\u003cJsonAdaptedExpenditure\u003e expenditures) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.threshold \u003d threshold;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.createdOn \u003d createdOn;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.expenditures.addAll(expenditures);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts a given {@code Budget} into this class for Jackson use."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonAdaptedBudget(Budget source) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name \u003d source.getName().value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        threshold \u003d source.getThreshold().orElse(new Threshold(\"\")).value;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        createdOn \u003d source.getCreatedOn().value;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        expenditures.addAll(source.getExpendituresList().stream()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .map(JsonAdaptedExpenditure::new)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Converts this Jackson-friendly adapted budget object into the model\u0027s {@code Budget} object."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the Budget object converted from Json format."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Budget toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!Name.isValid(name)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        final Name budgetName \u003d new Name(name);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (threshold \u003d\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    Threshold.class.getSimpleName()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!Threshold.isValid(threshold)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(Threshold.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final Optional\u003cThreshold\u003e budgetThreshold \u003d new Threshold(threshold).toOptional();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (createdOn \u003d\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (!Date.isValid(createdOn)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        final Date date \u003d new Date(createdOn);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget budget \u003d new Budget(budgetName, date, budgetThreshold, new ExpenditureList());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // converts each jsonAdaptedExpenditure into an Expenditure and adds them into the budget"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (JsonAdaptedExpenditure jsonAdaptedExpenditure : expenditures) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Expenditure expenditure \u003d jsonAdaptedExpenditure.toModelType();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            budget.addExpenditure(expenditure);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return budget;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 17,
      "sogggy": 2,
      "yu-ming-chen": 19,
      "wenhaogoh": 64
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedExpenditure.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Jackson-friendly version of {@link Expenditure}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class JsonAdaptedExpenditure {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Expenditure\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final String price;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final String createdOn;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Constructs a {@code JsonAdaptedExpenditure} with the given expenditure details."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonAdaptedExpenditure(@JsonProperty(\"name\") String name, @JsonProperty(\"price\") String price,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                             @JsonProperty(\"createdOn\") String createdOn,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tags) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.price \u003d price;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.createdOn \u003d createdOn;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (tags !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            this.tags.addAll(tags);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts a given {@code Expenditure} into this class for Jackson use."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonAdaptedExpenditure(Expenditure expenditure) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        name \u003d expenditure.getName().value;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        price \u003d expenditure.getPrice().value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        createdOn \u003d expenditure.getCreatedOn().toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        tags.addAll(expenditure.getTags().stream()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .map(JsonAdaptedTag::new)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts this Jackson-friendly adapted expenditure object into the model\u0027s {@code Expenditure} object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the Expenditure object converted from Json format."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted expenditure."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Expenditure toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        final List\u003cTag\u003e expenditureTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (JsonAdaptedTag tag : tags) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            expenditureTags.add(tag.toModelType());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!Name.isValid(name)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (price \u003d\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!Price.isValid(price)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        final Price modelPrice \u003d new Price(price);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (createdOn \u003d\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!Date.isValid(createdOn)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        final Date modelCreatedOn \u003d new Date(createdOn);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(expenditureTags);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new Expenditure(modelName, modelPrice, modelCreatedOn, modelTags);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 4,
      "sogggy": 9,
      "wenhaogoh": 83
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedTag.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Jackson-friendly version of {@link Tag}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "class JsonAdaptedTag {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String tagName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonAdaptedTag(String tagName) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given {@code Tag} into this class for Jackson use."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonAdaptedTag(Tag source) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        tagName \u003d source.tagName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonValue"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getTagName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return tagName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the Tag object converted from Json format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted tag."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public Tag toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (!Tag.isValid(tagName)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Tag(tagName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "sogggy": 1,
      "-": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonNusaveStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * A class to access Nusave stored in the hard disk as a json file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class JsonNusaveStorage implements NusaveStorage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonNusaveStorage.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Constructs a {@code JsonNusaveStorage} with the given {@code filePath}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param filePath {@code Path} containing the Nusave data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonNusaveStorage(Path filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cReadOnlyNusave\u003e readNusave() throws DataConversionException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return readNusave(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cReadOnlyNusave\u003e readNusave(Path filePath) throws DataConversionException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Optional\u003cJsonSerializableNusave\u003e jsonNusave \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                filePath, JsonSerializableNusave.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (!jsonNusave.isPresent()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return Optional.of(jsonNusave.get().toModelType());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveNusave(ReadOnlyNusave nusave) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        saveNusave(nusave, filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveNusave(ReadOnlyNusave nusave, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(nusave);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        JsonUtil.saveJsonFile(new JsonSerializableNusave(nusave), filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7,
      "wenhaogoh": 68
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonSerializableNusave.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Jackson-friendly version of {@link Nusave}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class JsonSerializableNusave {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final List\u003cJsonAdaptedBudget\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Constructs a {@code JsonSerializableNusave} with the given budgets."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonSerializableNusave(@JsonProperty(\"budgets\") List\u003cJsonAdaptedBudget\u003e budgets) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.budgets.addAll(budgets);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts a given {@code ReadOnlyNusave} into this class for Jackson use."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param source future changes to this will not affect the created {@code JsonSerializableNusave}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public JsonSerializableNusave(ReadOnlyNusave source) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        budgets.addAll(source.getBudgetListAsObservableList().stream().map(JsonAdaptedBudget::new)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Converts this Nusave into the model\u0027s {@code Nusave} object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the Nusave object converted from Json format."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Nusave toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Nusave nusave \u003d new Nusave();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (JsonAdaptedBudget jsonAdaptedBudget : budgets) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Budget budget \u003d jsonAdaptedBudget.toModelType();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            nusave.addBudget(budget);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusave;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "wenhaogoh": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/NusaveStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Represents a storage for {@link seedu.address.model.Nusave}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public interface NusaveStorage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Returns the file path of the {@link seedu.address.model.Nusave} data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the {@code Path} containing the Nusave data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Path getNusaveFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Returns the Nusave data from storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return {@code Optional.empty()} if the storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws IOException if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Optional\u003cReadOnlyNusave\u003e readNusave() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Returns the Nusave data from storage at the specified file path."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param filePath the {@code Path} containing the Nusave data file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return {@code Optional.empty()} if the storage file is not found."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws IOException if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    Optional\u003cReadOnlyNusave\u003e readNusave(Path filePath) throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Saves the given {@link ReadOnlyNusave} to the storage."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param nusave cannot be null."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveNusave(ReadOnlyNusave nusave) throws IOException;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Saves the given {@link ReadOnlyNusave} to the storage specified by the filePath."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param nusave cannot be null."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param filePath the {@code Path} containing the Nusave data file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveNusave(ReadOnlyNusave nusave, Path filePath) throws IOException;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 24,
      "wenhaogoh": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Storage component"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public interface Storage extends UserPrefsStorage, NusaveStorage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 1,
      "-": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/StorageManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": " * Manages storage of NUSave data in local storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManager implements Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private NusaveStorage nusaveStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private UserPrefsStorage userPrefsStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public StorageManager(NusaveStorage nusaveStorage, UserPrefsStorage userPrefsStorage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.nusaveStorage \u003d nusaveStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefsStorage \u003d userPrefsStorage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.readUserPrefs();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefsStorage.saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Nusave methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusaveStorage.getNusaveFilePath();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cReadOnlyNusave\u003e readNusave() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return readNusave(nusaveStorage.getNusaveFilePath());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Optional\u003cReadOnlyNusave\u003e readNusave(Path filePath) throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusaveStorage.readNusave(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveNusave(ReadOnlyNusave nusave) throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        saveNusave(nusave, nusaveStorage.getNusaveFilePath());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveNusave(ReadOnlyNusave nusave, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nusaveStorage.saveNusave(nusave, filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "wenhaogoh": 15,
      "-": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/UserPrefsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a storage for {@link seedu.address.model.UserPrefs}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public interface UserPrefsStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the file path of the UserPrefs data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @return the {@code Path} containing the UserPrefs data file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getUserPrefsFilePath();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns UserPrefs data from storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     *   Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userPrefs cannot be null."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "-": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/BudgetCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class BudgetCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static final String FXML \u003d \"BudgetListCard.fxml\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public final Budget budget;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Label expenditureSize;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code BudgetCard} with the given {@code Budget} and index to display."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public BudgetCard(Budget budget, int displayedIndex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budget \u003d budget;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name.setText(budget.getName().value);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String strExpenditureSize \u003d String.valueOf(budget.getExpenditureSize());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expenditureSize.setText(strExpenditureSize + \" expenditures\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (!(other instanceof BudgetCard)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetCard card \u003d (BudgetCard) other;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u0026\u0026 budget.equals(card.budget);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "sogggy": 53,
      "wenhaogoh": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ExpenditureCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class ExpenditureCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static final String FXML \u003d \"ExpenditureListCard.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public final Expenditure expenditure;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Label createdOn;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Label price;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private FlowPane tags;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Creates a {@code Expenditure} with the given {@code Expenditure} and index to display."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ExpenditureCard(Expenditure expenditure, int displayedIndex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.expenditure \u003d expenditure;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        name.setText(expenditure.getName().value);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        createdOn.setText(getFormattedCreatedOn());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        price.setText(\"$\" + formatPrice(expenditure.getPrice().value));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expenditure.getTags().stream()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                .sorted(Comparator.comparing(tag -\u003e tag.tagName))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String getFormattedCreatedOn() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new SimpleDateFormat(\"EEE, dd MMM\").format(expenditure.getFormattedCreatedOn());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String formatPrice(String string) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return String.format(\"%.2f\", Double.valueOf(string));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (!(other instanceof ExpenditureCard)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        seedu.address.ui.ExpenditureCard card \u003d (ExpenditureCard) other;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                \u0026\u0026 expenditure.equals(card.expenditure);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 18,
      "sogggy": 8,
      "yu-ming-chen": 4,
      "-": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/HelpWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.Clipboard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.ClipboardContent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for a help page"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String USERGUIDE_URL \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            \"https://github.com/AY2021S1-CS2103T-T11-4/tp/blob/master/docs/UserGuide.md\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"HelpWindow.fxml\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button copyButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label helpMessage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root Stage to use as the root of the HelpWindow."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow(Stage root) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        helpMessage.setText(HELP_MESSAGE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows the help window."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called on the primary stage."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Showing help page about the application.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * Copies the URL to the user guide to the clipboard."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    private void copyUrl() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        final ClipboardContent url \u003d new ClipboardContent();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        url.putString(USERGUIDE_URL);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        clipboard.setContent(url);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 2,
      "-": 101
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/InfoBox.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.ParserUtil.isDouble;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.model.budget.Threshold.NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.SimpleBooleanProperty;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.SimpleStringProperty;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class InfoBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final int PRIMARY_FONT_SIZE \u003d 30;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final int SECONDARY_FONT_SIZE \u003d 23;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final int SECOND_ROW_MAX_LENGTH \u003d 7;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final Font DEFAULT_FONT \u003d Font.font(\"Doppio One Regular\", PRIMARY_FONT_SIZE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static final String FXML \u003d \"InfoBox.fxml\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StackPane datePane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StackPane timePane;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StackPane greetingPane;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Text firstRowText;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Text secondRowText;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @javafx.fxml.FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Text thirdRowText;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private String greeting;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private BooleanProperty isBudgetPage;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StringProperty secondRowString;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StringProperty thresholdString;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Creates a new InfoBox."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public InfoBox() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.isBudgetPage \u003d new SimpleBooleanProperty(false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.secondRowString \u003d new SimpleStringProperty(getDefaultSecondRowText());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.thresholdString \u003d new SimpleStringProperty(NO_THRESHOLD_MESSAGE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setMainPageInfoBoxText();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void setMainPageInfoBoxText() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        firstRowText.setText(getDefaultFirstRowText());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setMainPageSecondRowText();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        thirdRowText.setText(getDefaultThirdRowText());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String getDefaultFirstRowText() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new SimpleDateFormat(\"EEE, dd MMM\").format(Calendar.getInstance().getTime());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String getDefaultSecondRowText() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new SimpleDateFormat(\"hh:mm a\").format(Calendar.getInstance().getTime());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setMainPageSecondRowText() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Thread clock \u003d new Thread() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                for (;;) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    if (isBudgetPage.get()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        String value \u003d secondRowString.getValue();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        handleSecondRowTextIsBudgetPage(value);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        String value \u003d getDefaultSecondRowText();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        handleSecondRowTextIsMainPage(value);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        sleep(100);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    } catch (InterruptedException ex) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        //..."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        clock.start();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void handleSecondRowTextIsBudgetPage(String value) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setSecondRowFontSize(value);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String threshold \u003d thresholdString.get();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert isDouble(value);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String outputValue \u003d \"$ \" + value;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (threshold !\u003d NO_THRESHOLD_MESSAGE) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            setExpenditureColor(secondRowText, threshold, outputValue, value);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        secondRowText.setText(outputValue);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void setSecondRowFontSize(String value) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (value.length() \u003e SECOND_ROW_MAX_LENGTH) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            secondRowText.setFont("
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    Font.font(DEFAULT_FONT.getFamily(), SECONDARY_FONT_SIZE));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            secondRowText.setFont("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    Font.font(DEFAULT_FONT.getFamily(), PRIMARY_FONT_SIZE));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void setExpenditureColor(Text text, String threshold, String outputValue, String newValue) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert threshold !\u003d NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert isDouble(newValue);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert isDouble(threshold);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Double newValueDouble \u003d Double.parseDouble(newValue);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Double thresholdValueDouble \u003d Double.parseDouble(threshold);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (newValueDouble \u003e thresholdValueDouble) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            secondRowText.setFill(Color.RED);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            secondRowText.setFill(Color.DARKGREEN);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void handleSecondRowTextIsMainPage(String value) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setClockColor();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        secondRowText.setText(getDefaultSecondRowText());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void setClockColor() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        secondRowText.setFill(Color.rgb(0, 0, 0));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static String getDefaultThirdRowText() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int hour \u003d cal.get(Calendar.HOUR_OF_DAY);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String greeting \u003d \"\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (hour \u003c 12) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            greeting \u003d \"Good Morning!\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else if (hour \u003c 17) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            greeting \u003d \"Good Afternoon!\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            greeting \u003d \"Good Evening!\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return greeting;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Text getFirstRowText() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return firstRowText;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Text getSecondRowText() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return secondRowText;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Text getThirdRowText() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return thirdRowText;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public BooleanProperty getIsBudgetPageProp() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return isBudgetPage;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StringProperty getSecondRowStringProp() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return secondRowString;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StringProperty getThresholdStringProp() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return thresholdString;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 163,
      "yu-ming-chen": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ListView.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": " * Panel containing the list of persons."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class ListView extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String FXML \u003d \"RenderableListView.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(ListView.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private javafx.scene.control.ListView\u003cRenderable\u003e renderableListView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code RenderableListPanel} with the given {@code ObservableList}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ListView(ObservableList\u003cRenderable\u003e renderableList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        renderableListView.setItems(renderableList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        renderableListView.setCellFactory(listView -\u003e new RenderableListViewCell());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    class RenderableListViewCell extends ListCell\u003cRenderable\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        protected void updateItem(Renderable renderable, boolean empty) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            super.updateItem(renderable, empty);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            if (empty || renderable \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else if (renderable instanceof Budget) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                setGraphic(new BudgetCard((Budget) renderable, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else if (renderable instanceof Expenditure) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                setGraphic(new ExpenditureCard((Expenditure) renderable, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 18,
      "sogggy": 22,
      "wenhaogoh": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.ui.statebinder.InfoBoxStateBinder;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.ui.statebinder.StateBinderList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.ui.statebinder.TitleStateBinder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StateBinderList stateBinderList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private ListView listView;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private InfoBox infoBox;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Title title;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private HelpWindow helpWindow;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private StackPane renderableListPanelPlaceholder;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StackPane mainPageInfoBoxPlaceholder;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private StackPane titlePlaceholder;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Fills up all the placeholders of this window and sets stateful binders in NUSave."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void setUpGuiComponents() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        fillInnerParts();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        setStateBinders();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void fillInnerParts() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        listView \u003d new ListView(logic.getFilteredRenderableList());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        renderableListPanelPlaceholder.getChildren().add(listView.getRoot());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        infoBox \u003d new InfoBox();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        mainPageInfoBoxPlaceholder.getChildren().add(infoBox.getRoot());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        title \u003d new Title();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        titlePlaceholder.getChildren().add(title.getRoot());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandBox commandBox \u003d new CommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void setStateBinders() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        InfoBoxStateBinder infoBoxStateBinder \u003d new InfoBoxStateBinder(infoBox);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        TitleStateBinder titleStateBinder \u003d new TitleStateBinder(title);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.stateBinderList \u003d new StateBinderList(infoBoxStateBinder, titleStateBinder);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        stateBinderList.bindAll(logic);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setResultDisplay(String message) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        resultDisplay.setFeedbackToUser(message);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.show();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.focus();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ListView getRenderableListPanel() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return listView;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult commandResult \u003d logic.execute(commandText);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Result: \" + commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isShowHelp()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                handleHelp();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isExit()) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                handleExit();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            return commandResult;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Invalid command: \" + commandText);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 27,
      "wenhaogoh": 10,
      "-": 146
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/Title.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class Title extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private static final String FXML \u003d \"Title.fxml\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Label title;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Title() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public Label getTitle() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 22
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UiManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiManager implements Ui {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/NUSaveIcon.png\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private String initialMessage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UiManager} with the given {@code Logic}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public UiManager(Logic logic, String initialMessage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.initialMessage \u003d initialMessage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow \u003d new MainWindow(primaryStage, logic);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            mainWindow.setUpGuiComponents();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            mainWindow.setResultDisplay(initialMessage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "yu-ming-chen": 1,
      "wenhaogoh": 4,
      "-": 86
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/statebinder/InfoBoxStateBinder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui.statebinder;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.model.budget.Threshold.NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.binding.Bindings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.ui.InfoBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class InfoBoxStateBinder implements StateBinder {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private InfoBox infoBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public InfoBoxStateBinder(InfoBox infoBox) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.infoBox \u003d infoBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void bind(Logic logic) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindMainPageInfoBoxToPageState(logic);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindMainPageInfoBoxToExpenditureState(logic);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void bindMainPageInfoBoxToPageState(Logic logic) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindFirstRowTextToPageState(logic);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindThirdRowTextToPageState(logic);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void bindMainPageInfoBoxToExpenditureState(Logic logic) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        bindSecondRowTextToTotalExpenditure(logic);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void bindFirstRowTextToPageState(Logic logic) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        infoBox.getFirstRowText().textProperty().bind(Bindings.createStringBinding(() -\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (logic.isBudgetPage()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                return handleFirstRowTextIsBudgetPage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return handleFirstRowTextIsMainPage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }, logic.getIsBudgetPageProp()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String handleFirstRowTextIsBudgetPage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        infoBox.getFirstRowText().setTextAlignment(TextAlignment.LEFT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"Total:\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String handleFirstRowTextIsMainPage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        infoBox.getFirstRowText().setTextAlignment(TextAlignment.CENTER);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return InfoBox.getDefaultFirstRowText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private void bindSecondRowTextToTotalExpenditure(Logic logic) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        infoBox.getIsBudgetPageProp().bindBidirectional(logic.getIsBudgetPageProp());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        infoBox.getSecondRowStringProp().bindBidirectional(logic.getTotalExpenditureStringProp());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        infoBox.getThresholdStringProp().bindBidirectional(logic.getThresholdStringProp());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void bindThirdRowTextToPageState(Logic logic) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        infoBox.getThirdRowText().textProperty().bind(Bindings.createStringBinding(() -\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            if (logic.isBudgetPage()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                return handleThirdRowTextIsBudgetPage(logic);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return handleThirdRowTextIsMainPage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }, logic.getIsBudgetPageProp()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String handleThirdRowTextIsBudgetPage(Logic logic) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        infoBox.getThirdRowText().setTextAlignment(TextAlignment.RIGHT);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Optional\u003cThreshold\u003e thresholdOptional \u003d logic.getThreshold();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        if (thresholdOptional.isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assert thresholdOptional.isPresent();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Double thresholdVal \u003d Double.parseDouble(thresholdOptional.get().toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return \"/\" + String.format(\"%.2f\", thresholdVal);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String handleThirdRowTextIsMainPage() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        infoBox.getThirdRowText().setTextAlignment(TextAlignment.CENTER);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return InfoBox.getDefaultThirdRowText();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 84
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/statebinder/StateBinder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui.statebinder;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public interface StateBinder {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void bind(Logic logic);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/statebinder/StateBinderList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui.statebinder;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class StateBinderList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private List\u003cStateBinder\u003e stateBinderList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Constructor for StateBinderList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * @param stateBinders all stateBinder objects that will update Ui text dynamically."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StateBinderList(StateBinder ... stateBinders) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.stateBinderList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        stateBinderList.addAll(Arrays.asList(stateBinders));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void bindAll(Logic logic) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        stateBinderList.stream().forEach(stateBinder -\u003e stateBinder.bind(logic));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/statebinder/TitleStateBinder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.ui.statebinder;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import javafx.beans.binding.Bindings;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.ui.Title;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class TitleStateBinder implements StateBinder {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Title title;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public TitleStateBinder(Title title) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void bind(Logic logic) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        title.getTitle().textProperty().bind(Bindings.createStringBinding(() -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            logic.isBudgetPage(); //this expression must be called to always trigger change in title"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return logic.getPageTitle();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }, logic.getIsBudgetPageProp()));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 21
    }
  },
  {
    "path": "src/main/resources/view/BudgetListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cHBox id\u003d\"budget-card\" styleClass\u003d\"card\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "  \u003cGridPane id\u003d\"budget-card-box\" styleClass\u003d\"card-box\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"65.0\" prefHeight\u003d\"65.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \u003cHBox spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "          \u003cminWidth\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "          \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003cVBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "          \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          \u003cLabel fx:id\u003d\"expenditureSize\" styleClass\u003d\"expenditure-size\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 5,
      "sogggy": 28,
      "wenhaogoh": 5
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "  \u003cTextField id\u003d\"command-text-field\" fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 1,
      "-": 8
    }
  },
  {
    "path": "src/main/resources/view/DarkTheme.css",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    src: url(\"/fonts/Lato-Light.ttf\");"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    src: url(\"/fonts/Lato-Regular.ttf\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    src: url(\"/fonts/Roboto-Medium.ttf\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    src: url(\"/fonts/DoppioOne-Regular.ttf\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": ".root {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: linear-gradient(from 25% 25% to 70% 70% , #918fdb, #D6A3DC);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#command-text-field {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato-Light\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-text-fill: #636363;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-radius: 20px;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "#result-display-text-area {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato-Light\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-background-radius: 20px;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-border-radius: 20px;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.25), 10, 0, 2, 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-wrap-text: true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#result-display-text-area .scroll-pane .content {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#result-display-text-area .scroll-pane .viewport {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#result-display-text-area .scroll-bar, #result-display-text-area .scroll-bar .thumb {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".info-box {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: #B3AADC;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-opacity: 60%;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-radius: 20;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".main-info {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato Regular\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-font-size: 20px;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#time {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Doppio One Regular\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-font-size: 30px;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "#title {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 30px;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-wrap-text: true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    -fx-text-alignment: right;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ".list-view {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-padding: 0em 0.583em 0.8em 0em;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": ".list-cell:selected .created-on{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ".list-cell:selected .expenditure-size{"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: #E7E7E7;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-radius: 10px;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .thumb {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: #561179;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-radius: 10px;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-button, .scroll-bar .decrement-button {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-shape: \" \";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-padding: 1 4 1 4;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 8 1 8 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".card-box {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-radius: 20px;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-background-color: white;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.25), 10, 0, 2, 2);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".card .cell_big_label {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato Regular\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-text-fill: black;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".card #price {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 24px;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-text-fill: #6F47C2;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ".created-on {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato-Light\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ".expenditure-size {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-font-family: \"Lato-Light\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "#tags {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-hgap: 5;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-vgap: 3;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "#tags .label {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-family: \"Lato-Light\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-background-color: #AF8FF1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-padding: 2 4 2 4;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    -fx-background-radius: 30px;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    -fx-font-size: 10;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 8,
      "sogggy": 9,
      "wenhaogoh": 59,
      "-": 80
    }
  },
  {
    "path": "src/main/resources/view/ExpenditureListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cHBox id\u003d\"expenditure-card\" fx:id\u003d\"cardPane\" styleClass\u003d\"card\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    \u003cGridPane id\u003d\"expenditure-card-box\" styleClass\u003d\"card-box\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"65.0\" prefHeight\u003d\"65.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u003cHBox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        \u003cminWidth\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    \u003c/Label\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    \u003cVBox\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        \u003cHBox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                            \u003cLabel fx:id\u003d\"createdOn\" styleClass\u003d\"created-on\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                \u003cpadding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                    \u003cInsets bottom\u003d\"0\" left\u003d\"0\" right\u003d\"7\" top\u003d\"0\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                \u003c/padding\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                \u003cminWidth\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                    \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                                \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                            \u003c/Label\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                            \u003cFlowPane fx:id\u003d\"tags\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                \u003c/HBox\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u003cRegion prefWidth\u003d\"0.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u003cLabel id\u003d\"price\" fx:id\u003d\"price\" styleClass\u003d\"cell_big_label\" text\u003d\"price\" \u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 34,
      "sogggy": 20,
      "wenhaogoh": 5
    }
  },
  {
    "path": "src/main/resources/view/InfoBox.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cVBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" opacity\u003d\"0.66\" prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cStackPane prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"main-info\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cText id\u003d\"date\" fx:id\u003d\"firstRowText\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Date\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"160.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cStackPane prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"main-info\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cText id\u003d\"time\" fx:id\u003d\"secondRowText\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Time\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"160.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cStackPane prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"main-info\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cText id\u003d\"greeting\" fx:id\u003d\"thirdRowText\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Good Evening\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"160.0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                  \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003c/StackPane.margin\u003e\u003c/Text\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "sogggy": 31,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"650\" onCloseRequest\u003d\"#handleExit\" title\u003d\"NUSave\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cicons\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "\u003c!--    \u003cImage url\u003d\"@/images/NUSaveIcon.png\" /\u003e--\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/icons\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"30\" right\u003d\"30\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minHeight\u003d\"100\" prefHeight\u003d\"150\" VBox.vgrow\u003d\"SOMETIMES\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"30\" right\u003d\"30\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        \u003cStackPane fx:id\u003d\"infoBoxPlaceholder\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"30\" right\u003d\"30\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "          \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "             \u003cchildren\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003cStackPane fx:id\u003d\"mainPageInfoBoxPlaceholder\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" opacity\u003d\"0.77\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"info-box\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003cStackPane fx:id\u003d\"titlePlaceholder\" id\u003d\"title-placeholder\" styleClass\u003d\"pane-with-border\" alignment\u003d\"BOTTOM_RIGHT\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "               \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "             \u003c/children\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "          \u003c/HBox\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        \u003cVBox fx:id\u003d\"renderableList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"30\" right\u003d\"30\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "          \u003cStackPane fx:id\u003d\"renderableListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1,
      "sogggy": 18,
      "yu-ming-chen": 1,
      "wenhaogoh": 1,
      "-": 39
    }
  },
  {
    "path": "src/main/resources/view/RenderableListView.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "  \u003cListView fx:id\u003d\"renderableListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "sogggy": 7,
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/main/resources/view/ResultDisplay.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" text\u003d\"Welcome to NUSave!\" id\u003d\"result-display-text-area\"/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "wenhaogoh": 1,
      "-": 6
    }
  },
  {
    "path": "src/main/resources/view/Title.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "      \u003cLabel id\u003d\"title\" fx:id\u003d\"title\" StackPane.alignment\u003d\"BOTTOM_RIGHT\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "sogggy": 6,
      "wenhaogoh": 2
    }
  },
  {
    "path": "src/test/data/JsonNusaveStorageTest/invalidAndValidBudgetNusave.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  \"budgets\" : [ {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"name\" : \"NUS Hackers Monthly Budget\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"createdOn\" : \"2020-10-18\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"threshold\" : \"1000\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"expenditures\" : [ {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Shirt\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"85.50\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-10\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ \"Apparel\", \"White\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Pants\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"100.50\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-10\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ \"Apparel\", \"Black\" ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  },"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\": \"Temasek Hall Basketball Budget\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\": \"10-10-2020\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"threshold\": \"1000\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"expenditures\": ["
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          \"name\": \"Shirt\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          \"price\": \"85.50\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          \"createdOn\": \"2020-10-10\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          \"tags\": ["
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \"Apparel\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \"White\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        },"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          \"name\": \"Pants\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          \"price\": \"100.50\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          \"createdOn\": \"2020-10-10\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          \"tags\": ["
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \"Apparel\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            \"Black\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "          ]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 44
    }
  },
  {
    "path": "src/test/data/JsonNusaveStorageTest/invalidBudgetNusave.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  \"budgets\" : [ {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"name\" : \"NUS Hackers Monthly Budget\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"createdOn\" : \"20-10-2010\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"threshold\" : \"1000\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"expenditures\" : [ {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Shirt\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"85.50\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-10\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ \"Apparel\", \"White\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Pants\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"100.50\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-10\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ \"Apparel\", \"Black\" ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 19
    }
  },
  {
    "path": "src/test/data/JsonNusaveStorageTest/notJsonFormatNusave.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "this file is not in json format!"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 1
    }
  },
  {
    "path": "src/test/data/JsonNusaveStorageTest/nusave.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  \"budgets\" : [ {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"name\" : \"NUS Hackers Monthly Budget\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"createdOn\" : \"2020-10-18\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"threshold\" : \"1000\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"expenditures\" : [ {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Shirt\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"85.50\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-10\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ \"Apparel\", \"White\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Pants\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"100.50\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-10\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ \"Apparel\", \"Black\" ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 19
    }
  },
  {
    "path": "src/test/data/JsonSerializableNusaveTest/invalidBudgetNusave.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  \"budgets\" : [ {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"name\" : \"Subway\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"createdOn\" : \"10-10-2010\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"threshold\" : \"80\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"expenditures\" : [ {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Cold Cut Trio\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"7.50\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-04\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Cookie\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"1.50\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-03\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Clam Chowder\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"3.00\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-02\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"name\" : \"KFC\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"createdOn\" : \"2020-10-09\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"threshold\" : \"80\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"expenditures\" : [ {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Zinger\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"8.00\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-07\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Cheese Fries\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"4.00\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-06\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Bandito\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"6.50\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-05\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"name\" : \"McDonalds\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"createdOn\" : \"2020-10-10\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"threshold\" : \"100\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"expenditures\" : [ {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"McMuffin\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"4.50\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-10\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"McChicken\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"2.00\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-09\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"McSpicy\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"7.00\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-08\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  } ]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 63
    }
  },
  {
    "path": "src/test/data/JsonSerializableNusaveTest/typicalBudgetsNusave.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  \"budgets\" : [ {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"name\" : \"Subway\","
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"createdOn\" : \"2020-10-08\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"threshold\" : \"80\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"expenditures\" : [ {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Cold Cut Trio\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"7.50\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-04\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Cookie\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"1.50\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-03\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Clam Chowder\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"3.00\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-02\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"name\" : \"KFC\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"createdOn\" : \"2020-10-09\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"threshold\" : \"80\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"expenditures\" : [ {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Zinger\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"8.00\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-07\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Cheese Fries\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"4.00\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-06\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"Bandito\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"6.50\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-05\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"name\" : \"McDonalds\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"createdOn\" : \"2020-10-10\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"threshold\" : \"100\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    \"expenditures\" : [ {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"McMuffin\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"4.50\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-10\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"McChicken\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"2.00\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-09\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"name\" : \"McSpicy\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"price\" : \"7.00\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"createdOn\" : \"2020-10-08\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "      \"tags\" : [ ]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "  } ]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 63
    }
  },
  {
    "path": "src/test/java/seedu/address/commons/util/AppUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppUtilTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getImage_exitingImage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertNotNull(AppUtil.getImage(\"/images/NUSaveIcon.png\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getImage_nullGiven_throwsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_true_nothingHappens() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true, \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String errorMessage \u003d \"error message\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 1,
      "-": 35
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/LogicManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import static seedu.address.testutil.TypicalPersons.AMY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.model.Model;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.storage.JsonAddressBookStorage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//public class LogicManagerTest {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @TempDir"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public Path temporaryFolder;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private Logic logic;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @BeforeEach"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void setUp() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        JsonAddressBookStorage addressBookStorage \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void execute_invalidCommandFormat_throwsParseException() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String invalidCommand \u003d \"uicfhmowqewca\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void execute_commandExecutionError_throwsCommandException() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String deleteCommand \u003d \"delete 9\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void execute_validCommand_success() throws Exception {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String listCommand \u003d ListCommand.COMMAND_WORD;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void execute_storageThrowsIoException_throwsCommandException() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        JsonAddressBookStorage addressBookStorage \u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        JsonUserPrefsStorage userPrefsStorage \u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        // Execute add command"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//                + ADDRESS_DESC_AMY;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        ModelManager expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        expectedModel.addPerson(expectedPerson);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * Executes the command and confirms that"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - no exceptions are thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private void assertCommandSuccess(String inputCommand, String expectedMessage,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//            Model expectedModel) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        CommandResult result \u003d logic.execute(inputCommand);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertEquals(expectedMessage, result.getFeedbackToUser());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * Executes the command, confirms that a ParseException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private void assertParseException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * Executes the command, confirms that a CommandException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private void assertCommandException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * Executes the command, confirms that the exception is thrown and that the result message is correct."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//            String expectedMessage) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * Executes the command and confirms that"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - the {@code expectedException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * @see #assertCommandSuccess(String, String, Model)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//            String expectedMessage, Model expectedModel) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     * A stub class to throw an {@code IOException} when the save method is called."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//            super(filePath);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        @Override"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//            throw DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 162
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CommandTestUtil.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class CommandTestUtil {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * - the {@code actualModel} matches {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param actualModel"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param expectedResult"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param expectedModel"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedResult,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                                            Model expectedModel) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult result \u003d command.execute(actualModel);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            assertEquals(expectedResult, result);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedModel, actualModel);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        } catch (CommandException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new AssertionError(\"Execution of command should not fail.\", e);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * that takes a string {@code expectedMessage}."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param actualModel"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param expectedMessage"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param expectedModel"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                                            Model expectedModel) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * - a {@code CommandException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param actualModel"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * @param expectedMessage"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static void assertCommandFailure(Command command, Model actualModel,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                                            String expectedMessage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // we are unable to defensively copy the model for comparison later, so we can"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // only do so by copying its components."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Nusave expectedNusave \u003d new Nusave(actualModel.getNusave());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        List\u003cRenderable\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredRenderableList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(expectedNusave, actualModel.getNusave());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(expectedFilteredList, actualModel.getFilteredRenderableList());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 12,
      "davidliew9": 15,
      "-": 43
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ExitCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public ExitCommandTest() throws CommandException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //@Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //public void execute_exit_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //    CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //    assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 5,
      "yu-ming-chen": 3,
      "-": 11
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/RedoCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class RedoCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Model model \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Model expectedModel \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute_deleteAllBudgets_undidCorrectly() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.saveToHistory();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.deleteAllBudgets();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.undo();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expectedModel.deleteAllBudgets();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute_noActionsToUndo_undidCorrectly() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_FAILURE, expectedModel);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 30
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/UndoCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class UndoCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Model model \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final Model expectedModel \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute_deleteAllBudgets_undidCorrectly() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.saveToHistory();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.deleteAllBudgets();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute_noActionsToUndo_undidCorrectly() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_FAILURE, expectedModel);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 27
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/budget/AddExpenditureCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.TypicalExpenditure;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "class AddExpenditureCommandTest {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void equalTest() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        AddExpenditureCommand command \u003d new AddExpenditureCommand(TypicalExpenditure.getKfcBanditoExpenditure());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // same object -\u003e return true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(command.equals(command));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different type -\u003e return false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(command.equals(5));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // null -\u003e return false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(command.equals(null));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        AddExpenditureCommand differentExpenditureCommand \u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                new AddExpenditureCommand(TypicalExpenditure.getKfcBanditoExpenditure());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different obj same expenditure to add -\u003e true"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(command.equals(differentExpenditureCommand));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void constructor_nullExpenditure_throwsNullPointerException() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AddExpenditureCommand(null));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute_budgetCreatedByModel_addSuccessful() throws Exception {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ModelStubAcceptingExpenditureAdd modelStub \u003d new ModelStubAcceptingExpenditureAdd();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Expenditure validExpenditure \u003d TypicalExpenditure.getKfcZingerExpenditure();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        CommandResult commandResult \u003d new AddExpenditureCommand(validExpenditure).execute(modelStub);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(String.format(AddExpenditureCommand.MESSAGE_SUCCESS, validExpenditure),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(new ExpenditureList(new ArrayList\u003c\u003e(Arrays.asList(validExpenditure))), modelStub.expenditureAdd);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setNusavePath(Path nusaveFilePath) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setNusave(ReadOnlyNusave nusave) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public ReadOnlyNusave getNusave() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void openBudget(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void closeBudget() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void addBudget(Budget budget) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void editBudget(Budget oldBudget, Budget editedBudget) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Budget getBudgetAtIndex(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Expenditure getExpenditureAtIndex(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isIndexOutOfBound(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public boolean isIndexOutOfBound(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void deleteBudget(BudgetIndex budget) throws CommandException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void deleteAllBudgets() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortBudgetsByName() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortBudgetsByCreatedDate() throws CommandException {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void addExpenditure(Expenditure expenditure) throws CommandException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void findBudget(String searchTerm) throws CommandException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void listBudgets() throws CommandException {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void deleteExpenditure(ExpenditureIndex expenditure) throws CommandException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void findExpenditure(String searchTerm) throws CommandException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortExpendituresByName() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortExpenditureByCreatedDate() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void listExpenditures() throws CommandException {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String calculateExpenditureValue(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Page getPage() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String getPageName(BudgetIndex index) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String getPageTitle() {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String getTotalExpenditureValue() {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Optional\u003cThreshold\u003e getThreshold() {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isBudgetPage() {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public BooleanProperty getBudgetPageProp() {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public StringProperty getTotalExpenditureStringProp() {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public StringProperty getThresholdStringProp() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setPage(Page page) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setThreshold(Optional\u003cThreshold\u003e threshold) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setTotalExpenditure(String expenditure) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setBudgetIndex(BudgetIndex index) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setPageTitle(String page) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isMain() {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isBudget() {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isWithinRange(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isWithinRange(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public ObservableList\u003cRenderable\u003e getFilteredRenderableList() {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void updateFilteredRenderableList(Predicate\u003cRenderable\u003e predicate) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void repopulateObservableList() {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean canUndo() {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void undo() {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean canRedo() {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void redo() {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void saveToHistory() {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * A Model stub that always accept the expenditure being added."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private class ModelStubAcceptingExpenditureAdd extends ModelStub {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        final ExpenditureList expenditureAdd \u003d new ExpenditureList();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void addExpenditure(Expenditure expenditure) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            requireNonNull(expenditure);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            expenditureAdd.add(expenditure);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void saveToHistory() {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 365,
      "davidliew9": 10
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/budget/CloseBudgetCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class CloseBudgetCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        model \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void execute_budgetIndexWithinRange_budgetOpened() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String expectedMessage \u003d String.format(CloseBudgetCommand.MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        CloseBudgetCommand command \u003d new CloseBudgetCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        expectedModel.closeBudget();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 30
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/budget/DeleteExpenditureCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static seedu.address.testutil.TypicalBudgets.getTypicalNusave;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndexManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "class DeleteExpenditureCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void constructor_nullBudget_throwsNullPointerException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003enew DeleteExpenditureCommand(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void execute_validIndex_deleteSuccessful() throws CommandException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        model.openBudget(budgetIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ExpenditureIndex expenditureIndex \u003d new ExpenditureIndexManager(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        DeleteExpenditureCommand deleteExpenditureCommand \u003d new DeleteExpenditureCommand(expenditureIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        String expectedMessage \u003d DeleteExpenditureCommand.MESSAGE_DELETE_EXPENDITURE_SUCCESS;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        CommandResult expectedResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        CommandResult commandResult \u003d deleteExpenditureCommand.execute(model);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(expectedResult, commandResult);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void execute_invalidIndex_throwsCommandException() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        model.openBudget(budgetIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ExpenditureIndex outOfBounds \u003d new ExpenditureIndexManager(model.getFilteredRenderableList().size() + 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        DeleteExpenditureCommand deleteExpenditureCommand \u003d new DeleteExpenditureCommand(outOfBounds);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e deleteExpenditureCommand.execute(model));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void execute_nullModel_throwsNullPointerException() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        model.openBudget(budgetIndex);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ExpenditureIndex expenditureIndex \u003d new ExpenditureIndexManager(0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        DeleteExpenditureCommand deleteExpenditureCommand \u003d new DeleteExpenditureCommand(expenditureIndex);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e deleteExpenditureCommand.execute(null));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 62
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/budget/EditExpenditureCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static seedu.address.testutil.TypicalBudgets.getTypicalNusave;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.EditExpenditureCommand.EditExpenditureDescriptor;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndexManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class EditExpenditureCommandTest {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void execute_editAllField_success() throws CommandException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        model.openBudget(budgetIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        EditExpenditureDescriptor descriptor \u003d new EditExpenditureDescriptor();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        descriptor.setName(new Name(\"McMuffin\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        descriptor.setDate(new Date(\"2020-10-09\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        descriptor.setPrice(new Price(\"10\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ExpenditureIndex expenditureIndex \u003d new ExpenditureIndexManager(0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        EditExpenditureCommand command \u003d new EditExpenditureCommand(expenditureIndex, descriptor);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        String expectedMessage \u003d EditExpenditureCommand.MESSAGE_SUCCESS;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        CommandResult expectedResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        CommandResult commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(expectedResult, commandResult);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public void write_editOutOfBound_commandExceptionThrown() throws CommandException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        model.openBudget(budgetIndex);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        EditExpenditureDescriptor descriptor \u003d new EditExpenditureDescriptor();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        descriptor.setName(new Name(\"McMuffin\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        descriptor.setDate(new Date(\"2020-10-09\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        descriptor.setPrice(new Price(\"10\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        descriptor.setTags(new HashSet\u003c\u003e());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        EditExpenditureDescriptor descriptor2 \u003d new EditExpenditureDescriptor(descriptor);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ExpenditureIndex expenditureIndex \u003d new ExpenditureIndexManager(6);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        EditExpenditureCommand command \u003d new EditExpenditureCommand(expenditureIndex, descriptor2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e command.execute(model));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 69
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/budget/FindExpenditureCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalExpenditure;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class FindExpenditureCommandTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void equals() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Name firstPredicate \u003d new Name(\"first\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Name secondPredicate \u003d new Name(\"second\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindExpenditureCommand findFirstCommand \u003d new FindExpenditureCommand(firstPredicate);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindExpenditureCommand findSecondCommand \u003d new FindExpenditureCommand(secondPredicate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommand));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindExpenditureCommand findFirstCommandCopy \u003d new FindExpenditureCommand(firstPredicate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommandCopy));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertFalse(findFirstCommand.equals(1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertFalse(findFirstCommand.equals(null));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertFalse(findFirstCommand.equals(findSecondCommand));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void execute_matchingKeyword_oneBudgetFound() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String keyword \u003d TypicalExpenditure.SUBWAY_SOUP_NAME;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model.setPage(Page.BUDGET);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel.setPage(Page.BUDGET);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String expectedMessage \u003d String.format(FindExpenditureCommand.MESSAGE_SUCCESS, keyword);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindExpenditureCommand command \u003d new FindExpenditureCommand(new Name(keyword));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel.updateFilteredRenderableList(x -\u003e x.contains(keyword));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void execute_nonMatchingKeyword_noExpenditureFound() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String keyword \u003d \"No Expenditure will match this search\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model.setPage(Page.BUDGET);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel.setPage(Page.BUDGET);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String expectedMessage \u003d String.format(FindExpenditureCommand.MESSAGE_NO_EXPENDITURES_FOUND, keyword);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindExpenditureCommand command \u003d new FindExpenditureCommand(new Name(keyword));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel.updateFilteredRenderableList(x -\u003e x.contains(keyword));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(Collections.emptyList(), expectedModel.getFilteredRenderableList());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 82,
      "sogggy": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/budget/HelpExpenditureCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.commands.budget.HelpExpenditureCommand.HELP_MESSAGE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "class HelpExpenditureCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute_help_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE, false, false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertCommandSuccess(new HelpExpenditureCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 23
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/budget/ListExpenditureCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class ListExpenditureCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void execute_listIsNotFiltered_showsSameList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertCommandSuccess(new ListExpenditureCommand(), model,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                ListExpenditureCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 29
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/budget/SortExpenditureCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.OpenBudgetCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "class SortExpenditureCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void setUp() throws CommandException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        model \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        OpenBudgetCommand command \u003d new OpenBudgetCommand(new BudgetIndexManager(1));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        command.execute(model);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        command.execute(expectedModel);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute_sortBudgetByTime_showsSortedList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        SortExpenditureCommand command \u003d new SortExpenditureCommand(SortType.TIME);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        command.execute(expectedModel);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertCommandSuccess(new SortExpenditureCommand(SortType.TIME), model,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                SortExpenditureCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute_sortBudgetByName_showsSortedList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        SortExpenditureCommand command \u003d new SortExpenditureCommand(SortType.NAME);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        command.execute(expectedModel);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertCommandSuccess(new SortExpenditureCommand(SortType.NAME), model,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                SortExpenditureCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 45
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/main/ClearBudgetsCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class ClearBudgetsCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute_emptyNusave_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertCommandSuccess(new ClearBudgetsCommand(), model, ClearBudgetsCommand.MESSAGE_DELETE_BUDGET_SUCCESS,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                expectedModel);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute_nonEmptyNusave_success() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        model.addBudget(TypicalBudget.getMcDonaldsBudget());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertCommandSuccess(new ClearBudgetsCommand(), model, ClearBudgetsCommand.MESSAGE_DELETE_BUDGET_SUCCESS,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                expectedModel);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 30
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/main/CreateBudgetCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.BudgetList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "class CreateBudgetCommandTest {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void equalTest() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        CreateBudgetCommand command \u003d new CreateBudgetCommand(TypicalBudget.getMcDonaldsBudget());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // same object -\u003e return true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(command.equals(command));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different type -\u003e return false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(command.equals(5));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // null -\u003e return false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(command.equals(null));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        CreateBudgetCommand differentBudgetCommand \u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                new CreateBudgetCommand(TypicalBudget.getMcDonaldsBudget());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different obj same budget to add -\u003e true"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(command.equals(differentBudgetCommand));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void constructor_nullBudget_throwsNullPointerException() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new CreateBudgetCommand(null));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute_budgetCreatedByModel_createSuccessful() throws Exception {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ModelStubAcceptingBudgetCreated modelStub \u003d new ModelStubAcceptingBudgetCreated();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget validBudget \u003d TypicalBudget.getMcDonaldsBudget();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        CommandResult commandResult \u003d new CreateBudgetCommand(validBudget).execute(modelStub);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(String.format(CreateBudgetCommand.MESSAGE_SUCCESS, validBudget),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(new BudgetList(Arrays.asList(validBudget)), modelStub.budgetCreated);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setNusavePath(Path nusaveFilePath) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setNusave(ReadOnlyNusave nusave) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public ReadOnlyNusave getNusave() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void openBudget(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void closeBudget() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void addBudget(Budget budget) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void editBudget(Budget oldBudget, Budget editedBudget) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Budget getBudgetAtIndex(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Expenditure getExpenditureAtIndex(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isIndexOutOfBound(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public boolean isIndexOutOfBound(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void deleteBudget(BudgetIndex budget) throws CommandException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void deleteAllBudgets() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortBudgetsByName() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortBudgetsByCreatedDate() throws CommandException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void addExpenditure(Expenditure expenditure) throws CommandException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void findBudget(String searchTerm) throws CommandException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void listBudgets() throws CommandException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void deleteExpenditure(ExpenditureIndex expenditure) throws CommandException {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void findExpenditure(String searchTerm) throws CommandException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortExpendituresByName() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortExpenditureByCreatedDate() {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void listExpenditures() throws CommandException {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String calculateExpenditureValue(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Page getPage() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String getPageName(BudgetIndex index) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String getPageTitle() {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String getTotalExpenditureValue() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Optional\u003cThreshold\u003e getThreshold() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isBudgetPage() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public BooleanProperty getBudgetPageProp() {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public StringProperty getTotalExpenditureStringProp() {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public StringProperty getThresholdStringProp() {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setPage(Page page) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setThreshold(Optional\u003cThreshold\u003e threshold) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setTotalExpenditure(String expenditure) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setBudgetIndex(BudgetIndex index) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setPageTitle(String page) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isMain() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isBudget() {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isWithinRange(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isWithinRange(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public ObservableList\u003cRenderable\u003e getFilteredRenderableList() {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void updateFilteredRenderableList(Predicate\u003cRenderable\u003e predicate) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void repopulateObservableList() {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean canUndo() {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void undo() {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean canRedo() {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void redo() {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void saveToHistory() {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * A Model stub that always accept a Budget being created."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private class ModelStubAcceptingBudgetCreated extends ModelStub {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        final BudgetList budgetCreated \u003d new BudgetList();"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void addBudget(Budget budget) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            requireNonNull(budget);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            budgetCreated.add(budget);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void saveToHistory() {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 365,
      "davidliew9": 10
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/main/DeleteBudgetCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static seedu.address.testutil.TypicalBudgets.getTypicalNusave;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "class DeleteBudgetCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void constructor_nullBudget_throwsNullPointerException() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new DeleteBudgetCommand(null));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void execute_validIndex_deleteSuccessful() throws CommandException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        DeleteBudgetCommand deleteBudgetCommand \u003d new DeleteBudgetCommand(budgetIndex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        String expectedMessage \u003d DeleteBudgetCommand.MESSAGE_DELETE_BUDGET_SUCCESS;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        CommandResult expectedResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        CommandResult commandResult \u003d deleteBudgetCommand.execute(model);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(expectedResult, commandResult);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void execute_invalidIndex_throwsCommandException() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex outOfBounds \u003d new BudgetIndexManager(model.getNusave().getBudgetListAsObservableList().size() + 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        DeleteBudgetCommand deleteBudgetCommand \u003d new DeleteBudgetCommand(outOfBounds);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e deleteBudgetCommand.execute(model));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void execute_nullModel_throwsNullPointerException() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        DeleteBudgetCommand deleteBudgetCommand \u003d new DeleteBudgetCommand(budgetIndex);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e deleteBudgetCommand.execute(null));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 54
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/main/EditBudgetCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import javafx.beans.property.BooleanProperty;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Renderable;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.BudgetList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.BudgetBuilder;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.TypicalExpenditures;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "class EditBudgetCommandTest {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void equalTest() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        EditBudgetCommand command \u003d new EditBudgetCommand(new BudgetIndexManager(0),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                new EditBudgetCommand.EditBudgetDescriptor());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // same object -\u003e return true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(command.equals(command));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different type -\u003e return false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(command.equals(5));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // null -\u003e return false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(command.equals(null));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        EditBudgetCommand differentBudgetCommand \u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                new EditBudgetCommand(new BudgetIndexManager(0), new EditBudgetCommand.EditBudgetDescriptor());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different obj same budget to add -\u003e true"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(command.equals(differentBudgetCommand));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute_editAllField_success() throws CommandException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        EditBudgetCommand.EditBudgetDescriptor descriptor \u003d new EditBudgetCommand.EditBudgetDescriptor();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        descriptor.setName(new Name(\"KFC\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        descriptor.setCreatedOn(new Date(\"2020-10-09\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        descriptor.setThreshold(new Threshold(\"80\").toOptional());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget editedBudget \u003d new BudgetBuilder().withName(\"KFC\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                .withThreshold(\"80\").withCreatedOn(\"2020-10-09\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                .withExpenditures(TypicalExpenditures.getMcDonaldsExpenditures()).build();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ModelStubAcceptingBudgetEdited modelStub \u003d new ModelStubAcceptingBudgetEdited();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        CommandResult commandResult \u003d new EditBudgetCommand(new BudgetIndexManager(0), descriptor).execute(modelStub);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(String.format(EditBudgetCommand.MESSAGE_SUCCESS),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        BudgetList expectedList \u003d new BudgetList(Arrays.asList(editedBudget, TypicalBudget.getKfcBudget(),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                TypicalBudget.getSubwayBudget()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(expectedList, modelStub.budgetList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void write_editOutOfBound_commandExceptionThrown() throws CommandException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        EditBudgetCommand.EditBudgetDescriptor descriptor \u003d new EditBudgetCommand.EditBudgetDescriptor();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        descriptor.setName(new Name(\"KFC\"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        descriptor.setCreatedOn(new Date(\"2020-10-09\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        descriptor.setThreshold(new Threshold(\"80\").toOptional());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ModelStubAcceptingBudgetEdited modelStub \u003d new ModelStubAcceptingBudgetEdited();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        EditBudgetCommand command \u003d new EditBudgetCommand(new BudgetIndexManager(6), descriptor);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertThrows(CommandException.class, ()-\u003e command.execute(modelStub));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Path getNusaveFilePath() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setNusavePath(Path nusaveFilePath) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setNusave(ReadOnlyNusave nusave) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public ReadOnlyNusave getNusave() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void openBudget(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void closeBudget() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void addBudget(Budget budget) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void editBudget(Budget oldBudget, Budget editedBudget) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Budget getBudgetAtIndex(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public Expenditure getExpenditureAtIndex(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isIndexOutOfBound(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        public boolean isIndexOutOfBound(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void deleteBudget(BudgetIndex budget) throws CommandException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void deleteAllBudgets() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortBudgetsByName() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortBudgetsByCreatedDate() throws CommandException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void addExpenditure(Expenditure expenditure) throws CommandException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void findBudget(String searchTerm) throws CommandException {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void listBudgets() throws CommandException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void deleteExpenditure(ExpenditureIndex expenditure) throws CommandException {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void findExpenditure(String searchTerm) throws CommandException {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortExpendituresByName() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void sortExpenditureByCreatedDate() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void listExpenditures() throws CommandException {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void editExpenditure(Expenditure oldExpenditure, Expenditure editedExpenditure) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String calculateExpenditureValue(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Page getPage() {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String getPageName(BudgetIndex index) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String getPageTitle() {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public String getTotalExpenditureValue() {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Optional\u003cThreshold\u003e getThreshold() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isBudgetPage() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public BooleanProperty getBudgetPageProp() {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public StringProperty getTotalExpenditureStringProp() {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public StringProperty getThresholdStringProp() {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setPage(Page page) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setThreshold(Optional\u003cThreshold\u003e threshold) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setTotalExpenditure(String expenditure) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setBudgetIndex(BudgetIndex index) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void setPageTitle(String page) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isMain() {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isBudget() {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isWithinRange(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isWithinRange(ExpenditureIndex expenditureIndex) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public ObservableList\u003cRenderable\u003e getFilteredRenderableList() {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void updateFilteredRenderableList(Predicate\u003cRenderable\u003e predicate) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void repopulateObservableList() {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean canUndo() {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void undo() {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean canRedo() {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void redo() {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void saveToHistory() {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * A Model stub that always accept the budget being edited."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private class ModelStubAcceptingBudgetEdited extends ModelStub {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        private BudgetList budgetList \u003d new BudgetList();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ModelStubAcceptingBudgetEdited() {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            budgetList.addToFront(TypicalBudget.getSubwayBudget());"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            budgetList.addToFront(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            budgetList.addToFront(TypicalBudget.getMcDonaldsBudget());"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void editBudget(Budget oldBudget, Budget editedBudget) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            budgetList.editBudget(oldBudget, editedBudget);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public boolean isIndexOutOfBound(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return budgetIndex.getBudgetIndex().get() \u003e\u003d budgetList.getSize();"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public Budget getBudgetAtIndex(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return budgetList.getBudgets().get(budgetIndex.getBudgetIndex().get());"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        public void saveToHistory() {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 2,
      "yu-ming-chen": 400,
      "davidliew9": 10
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/main/FindBudgetCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class FindBudgetCommandTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void equals() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Name firstPredicate \u003d new Name(\"first\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Name secondPredicate \u003d new Name(\"second\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindBudgetCommand findFirstCommand \u003d new FindBudgetCommand(firstPredicate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindBudgetCommand findSecondCommand \u003d new FindBudgetCommand(secondPredicate);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommand));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindBudgetCommand findFirstCommandCopy \u003d new FindBudgetCommand(firstPredicate);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommandCopy));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertFalse(findFirstCommand.equals(1));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertFalse(findFirstCommand.equals(null));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertFalse(findFirstCommand.equals(findSecondCommand));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void execute_matchingKeyword_oneBudgetFound() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String keyword \u003d TypicalBudget.SUBWAY_NAME;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String expectedMessage \u003d String.format(FindBudgetCommand.MESSAGE_SUCCESS, keyword);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindBudgetCommand command \u003d new FindBudgetCommand(new Name(keyword));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel.updateFilteredRenderableList(x -\u003e x.contains(keyword));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void execute_nonMatchingKeyword_noBudgetFound() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String keyword \u003d \"No Budgets will match this search\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String expectedMessage \u003d String.format(FindBudgetCommand.MESSAGE_NO_BUDGETS_FOUND, keyword);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindBudgetCommand command \u003d new FindBudgetCommand(new Name(keyword));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel.updateFilteredRenderableList(x -\u003e x.contains(keyword));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertCommandFailure(command, expectedModel, expectedMessage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(Collections.emptyList(), expectedModel.getFilteredRenderableList());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 75
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/main/HelpBudgetCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.commands.main.HelpBudgetCommand.HELP_MESSAGE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "class HelpBudgetCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_help_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE, false, false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertCommandSuccess(new HelpBudgetCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 7,
      "-": 15
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/main/ListBudgetCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class ListBudgetCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        model \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void execute_listIsNotFiltered_showsSameList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertCommandSuccess(new ListBudgetCommand(), model, ListBudgetCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 28
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/main/OpenBudgetCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class OpenBudgetCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        model \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex firstBudgetIndex \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex secondBudgetIndex \u003d new BudgetIndexManager(1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        OpenBudgetCommand firstOpenBudgetCommand \u003d new OpenBudgetCommand(firstBudgetIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        OpenBudgetCommand secondOpenBudgetCommand \u003d new OpenBudgetCommand(secondBudgetIndex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertTrue(firstOpenBudgetCommand.equals(firstOpenBudgetCommand));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        OpenBudgetCommand openBudgetCommandCopy \u003d new OpenBudgetCommand(firstBudgetIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertTrue(firstOpenBudgetCommand.equals(openBudgetCommandCopy));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertFalse(firstOpenBudgetCommand.equals(1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertFalse(firstOpenBudgetCommand.equals(null));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        // different command -\u003e returns false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertFalse(firstOpenBudgetCommand.equals(secondOpenBudgetCommand));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void execute_budgetIndexWithinRange_budgetOpened() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex toOpen \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String expectedMessage \u003d String.format(OpenBudgetCommand.MESSAGE_SUCCESS, toOpen);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        OpenBudgetCommand command \u003d new OpenBudgetCommand(toOpen);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        expectedModel.openBudget(toOpen);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void execute_budgetIndexOutOfRange_exceptionThrown() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex toOpen \u003d new BudgetIndexManager(10);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        OpenBudgetCommand command \u003d new OpenBudgetCommand(toOpen);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(CommandException.class, ()-\u003e command.execute(model));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 69
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/main/SortBudgetCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.commands.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.sort.SortType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "class SortBudgetCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        model \u003d new ModelManager(TypicalBudgets.getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute_sortBudgetByTime_showsSortedList() throws CommandException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        SortBudgetCommand command \u003d new SortBudgetCommand(SortType.TIME);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        command.execute(expectedModel);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertCommandSuccess(new SortBudgetCommand(SortType.TIME), model,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                SortBudgetCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute_sortBudgetByName_showsSortedList() throws CommandException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        SortBudgetCommand command \u003d new SortBudgetCommand(SortType.NAME);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        command.execute(expectedModel);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertCommandSuccess(new SortBudgetCommand(SortType.NAME), model,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                SortBudgetCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 41
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/budgetpageparser/AddExpenditureCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_MORE_THAN_THREE_TAGS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.budget.AddExpenditureCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.testutil.TypicalExpenditure;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class AddExpenditureCommandParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private AddExpenditureCommandParser parser \u003d new AddExpenditureCommandParser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void parse_allFieldPresent_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertParseSuccess(parser, \" n/McMuffin p/4.50 t/breakfast t/delicious\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                new AddExpenditureCommand(TypicalExpenditure.getMcMuffinExpenditureWithTags()));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void parse_allFieldExceptTagsPresent_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertParseSuccess(parser, \" n/McMuffin p/4.50\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                new AddExpenditureCommand(TypicalExpenditure.getMcMuffinExpenditureWithCurrentCreatedOn()));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void parse_nameNotPresent_throwParseException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertParseFailure(parser, \" p/100 t/breakfast\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddExpenditureCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void parse_priceNotPresent_throwParseException() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertParseFailure(parser, \" n/McMuffin t/breakfast\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddExpenditureCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void parse_moreThan3Tags_throwParseException() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertParseFailure(parser, \" n/McMuffin p/4.50 t/breakfast t/delicious t/123 t/456\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                MESSAGE_MORE_THAN_THREE_TAGS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 45
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/budgetpageparser/BudgetPageParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.RedoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.UndoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.budget.AddExpenditureCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.budget.CloseBudgetCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.budget.DeleteExpenditureCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.budget.FindExpenditureCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.budget.HelpExpenditureCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.budget.ListExpenditureCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.commands.budget.SortExpenditureCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.testutil.ExpenditureBuilder;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class BudgetPageParserTest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void parseCommand_validCloseBudgetInput_returnsCorrectly() throws ParseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String input \u003d \"close\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Command command \u003d new BudgetPageParser().parseCommand(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(new CloseBudgetCommand(), command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void parseCommand_validDeleteExpenditureInput_returnsCorrectly() throws ParseException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String input \u003d \"delete 1\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Command command \u003d new BudgetPageParser().parseCommand(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(new DeleteExpenditureCommand(ParserUtil.parseExpenditureIndex(\"1\")), command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void parseCommand_validAddExpenditureInput_returnsCorrectly() throws ParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String input \u003d \"add n/Test p/10\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Command command \u003d new BudgetPageParser().parseCommand(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(new AddExpenditureCommand(new ExpenditureBuilder().withName(\"Test\").withPrice(\"10\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withCreatedOn(LocalDate.now().toString()).build()), command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void parseCommand_validFindExpenditureInput_returnsCorrectly() throws ParseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String input \u003d \"find hello\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Command command \u003d new BudgetPageParser().parseCommand(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(new FindExpenditureCommand(ParserUtil.parseExpenditureName(\"hello\")), command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void parseCommand_validListExpenditureInput_returnsCorrectly() throws ParseException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String input \u003d \"list\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Command command \u003d new BudgetPageParser().parseCommand(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(new ListExpenditureCommand(), command);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void parseCommand_validSortExpenditureInput_returnsCorrectly() throws ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String input \u003d \"sort name\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Command command \u003d new BudgetPageParser().parseCommand(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(new SortExpenditureCommand(ParserUtil.parseSortType(\"name\")), command);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void parseCommand_validHelpExpenditureInput_returnsCorrectly() throws ParseException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String input \u003d \"help\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Command command \u003d new BudgetPageParser().parseCommand(input);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(new HelpExpenditureCommand(), command);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void parseCommand_validUndoExpenditureInput_returnsCorrectly() throws ParseException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String input \u003d \"undo\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Command command \u003d new BudgetPageParser().parseCommand(input);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(new UndoCommand(), command);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void parseCommand_validRedoExpenditureInput_returnsCorrectly() throws ParseException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String input \u003d \"redo\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Command command \u003d new BudgetPageParser().parseCommand(input);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(new RedoCommand(), command);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void parseCommand_validExitExpenditureInput_returnsCorrectly() throws ParseException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String input \u003d \"exit\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Command command \u003d new BudgetPageParser().parseCommand(input);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(new ExitCommand(), command);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 96
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/budgetpageparser/FindExpenditureCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.parser.budgetpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.budget.FindExpenditureCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalExpenditure;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class FindExpenditureCommandParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_NAME \u003d \"Invalid;\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final Name VALID_NAME \u003d TypicalExpenditure.MC_MUFFIN.getName();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void parse_validInput_returnFindBudgetCommand() throws ParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindExpenditureCommand expected \u003d new FindExpenditureCommand(VALID_NAME);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindExpenditureCommand actual \u003d new FindExpenditureCommandParser().parse(VALID_NAME.value);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void parse_invalidInput_throwParseException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(ParseException.class, () -\u003e new FindExpenditureCommandParser().parse(INVALID_NAME));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void parse_nullInput_throwsNullPointerException() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new FindExpenditureCommandParser().parse(null));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/mainpageparser/CreateBudgetCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.CreateBudgetCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "class CreateBudgetCommandParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private CreateBudgetCommandParser parser \u003d new CreateBudgetCommandParser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void parse_allFieldPresent_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertParseSuccess(parser, \" n/McDonalds p/100\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                new CreateBudgetCommand(TypicalBudget.getEmptyMcDonaldsBudget()));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public void parse_nameNotPresent_throwParseException() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertParseFailure(parser, \" p/100\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateBudgetCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 7,
      "yu-ming-chen": 19
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/mainpageparser/EditBudgetCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.logic.commands.main.EditBudgetCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "class EditBudgetCommandParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private EditBudgetCommandParser parser \u003d new EditBudgetCommandParser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void parse_allFieldPresent_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        EditBudgetCommand.EditBudgetDescriptor expectedDescriptor \u003d new EditBudgetCommand.EditBudgetDescriptor();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        expectedDescriptor.setName(new Name(\"KFC\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        expectedDescriptor.setThreshold(new Threshold(\"123.0\").toOptional());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertParseSuccess(parser, \" 1 n/KFC p/123\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                new EditBudgetCommand(new BudgetIndexManager(0), expectedDescriptor));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 23
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/mainpageparser/FindBudgetCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.commands.main.FindBudgetCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class FindBudgetCommandParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_NAME \u003d \"Invalid;\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final Name VALID_NAME \u003d TypicalBudget.KFC.getName();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void parse_validInput_returnFindBudgetCommand() throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindBudgetCommand expected \u003d new FindBudgetCommand(VALID_NAME);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        FindBudgetCommand actual \u003d new FindBudgetCommandParser().parse(VALID_NAME.value);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void parse_invalidInput_throwParseException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(ParseException.class, () -\u003e new FindBudgetCommandParser().parse(INVALID_NAME));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void parse_nullInput_throwsNullPointerException() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new FindBudgetCommandParser().parse(null));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 35
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/mainpageparser/OpenBudgetCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.logic.parser.mainpageparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.main.OpenBudgetCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class OpenBudgetCommandParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final BudgetIndex INVALID_BUDGET_INDEX \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final BudgetIndex VALID_BUDGET_INDEX \u003d new BudgetIndexManager(1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String VALID_ONE_BASED_INDEX \u003d \"2\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void parse_validInput_returnCloseBudgetCommand() throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        OpenBudgetCommand expected \u003d new OpenBudgetCommand(VALID_BUDGET_INDEX);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        OpenBudgetCommand actual \u003d new OpenBudgetCommandParser()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                .parse(VALID_ONE_BASED_INDEX);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void parse_invalidInput_throwParseException() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(ParseException.class, () -\u003e new OpenBudgetCommandParser().parse(INVALID_BUDGET_INDEX.toString()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void parse_nullInput_throwsNullPointerException() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new OpenBudgetCommandParser().parse(null));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 36
    }
  },
  {
    "path": "src/test/java/seedu/address/model/ModelManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.model.budget.Threshold.NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalBudget.KFC;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalBudget.KFC_THRESHOLD;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalBudget.MC_DONALDS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalBudget.SUBWAY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalBudget.SUBWAY_NAME;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalBudget.getMcDonaldsBudget;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalBudget.getSubwayBudget;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalBudgets.getTypicalNusave;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.KFC_TOTAL_PRICE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.KFC_ZINGER;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.MC_MUFFIN;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.SUBWAY_COLD_CUT_TRIO;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.SUBWAY_COLD_CUT_TRIO_NAME;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.SUBWAY_COOKIE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.SUBWAY_COOKIE_NAME;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.SUBWAY_SOUP;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.SUBWAY_TOTAL_PRICE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.getKfcZingerExpenditure;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.getMcMuffinExpenditure;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.getSubwayCookieExpenditure;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.ENUM_PAGE_MAIN;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.SUBWAY_PAGE_TITLE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndexManager;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManagerTest {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new UserPrefs(), modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new GuiSettings(), modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(new Nusave(), new Nusave(modelManager.getNusave()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setGuiSettings() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(guiSettings, modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getNusaveFilePath_validPath_getsNusaveFilePath() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Path path \u003d Paths.get(\"data\", \"nusave.json\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(path, modelManager.getNusaveFilePath());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setNusavePath_nullPath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.setNusavePath(null));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setNusavePath_validPath_setsNusavePath() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Path path \u003d Paths.get(\"address/book/file/path\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.setNusavePath(path);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(path, modelManager.getNusaveFilePath());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setNusave_nullNusave_throwsNullPointerException() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.setNusave(null));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setNusave_validNusave_setsNusave() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ReadOnlyNusave nusave \u003d new Nusave();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.setNusave(nusave);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(nusave, modelManager.getNusave());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getNusave() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ReadOnlyNusave nusaveToCheck \u003d getTypicalNusave();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ReadOnlyNusave nusave \u003d modelManager.getNusave();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(nusaveToCheck, nusave);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void openBudget_nullBudget_throwsAssertionError() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(2);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e modelManager.openBudget(budgetIndex));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void openBudget_validOpenBudget_opensBudget() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(modelManager.getBudgetIndex().get(), 0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(modelManager.getPage(), Page.BUDGET);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertTrue(modelManager.isBudgetPage());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void closeBudget_validCloseBudget_closesBudget() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.closeBudget();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(modelManager.getBudgetIndex(), Optional.empty());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(modelManager.getPage(), Page.MAIN);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertTrue(modelManager.isMain());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void addBudget_nullBudget_throwsNullPointerException() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.addBudget(null));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void addBudget_validBudget_addsBudget() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int size \u003d modelManager.getNusave().getBudgetListAsObservableList().size();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(3, size);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void deleteBudget_nullBudget_throwsAssertionError() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e modelManager.deleteBudget(new BudgetIndexManager(0)));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void deleteBudget_validBudget_deletesBudget() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.deleteBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        int size \u003d modelManager.getNusave().getBudgetListAsObservableList().size();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(2, size);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void editBudget_validBudget_deletesBudget() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex indexToEdit \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Budget oldBudget \u003d modelManager.getBudgetAtIndex(indexToEdit);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        Budget newBudget \u003d SUBWAY;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.editBudget(oldBudget, newBudget);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(newBudget, modelManager.getBudgetAtIndex(indexToEdit));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void isIndexOutOfBound_outOfBoundIndex_true() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertTrue(modelManager.isIndexOutOfBound(new BudgetIndexManager(3)));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void isIndexOutOfBound_withinBoundIndex_false() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertFalse(modelManager.isIndexOutOfBound(new BudgetIndexManager(0)));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void deleteAllBudgets() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.deleteAllBudgets();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(0, modelManager.getNusave().getBudgetListAsObservableList().size());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void findBudget_validInput() throws CommandException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.findBudget(SUBWAY_NAME);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(1, modelManager.getFilteredRenderableList().size());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY, modelManager.getFilteredRenderableList().get(0));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void findBudget_searchTermNoMatch() throws CommandException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e modelManager.findBudget(SUBWAY_COLD_CUT_TRIO_NAME));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void listBudget_validUse() throws CommandException {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.findBudget(SUBWAY_NAME);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.listBudgets();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY, modelManager.getFilteredRenderableList().get(0));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(KFC, modelManager.getFilteredRenderableList().get(1));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(MC_DONALDS, modelManager.getFilteredRenderableList().get(2));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void listBudget_noBudgets() throws CommandException {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e modelManager.listBudgets());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void sortBudgetsByName() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.addBudget(getSubwayBudget());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.addBudget(getMcDonaldsBudget());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.sortBudgetsByName();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(KFC, modelManager.getNusave().getBudgetListAsObservableList().get(0));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(MC_DONALDS, modelManager.getNusave().getBudgetListAsObservableList().get(1));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(MC_DONALDS, modelManager.getNusave().getBudgetListAsObservableList().get(2));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY, modelManager.getNusave().getBudgetListAsObservableList().get(3));"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY, modelManager.getNusave().getBudgetListAsObservableList().get(4));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void sortBudgetsByCreatedDate() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.addBudget(getMcDonaldsBudget());"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.sortBudgetsByCreatedDate();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(MC_DONALDS, modelManager.getNusave().getBudgetListAsObservableList().get(0));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(MC_DONALDS, modelManager.getNusave().getBudgetListAsObservableList().get(1));"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(KFC, modelManager.getNusave().getBudgetListAsObservableList().get(2));"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY, modelManager.getNusave().getBudgetListAsObservableList().get(3));"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void deleteExpenditure() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.deleteExpenditure(new ExpenditureIndexManager(1));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(2, modelManager.getFilteredRenderableList().size());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_SOUP, modelManager.getFilteredRenderableList().get(0));"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_COLD_CUT_TRIO, modelManager.getFilteredRenderableList().get(1));"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void addExpenditure() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.addExpenditure(getMcMuffinExpenditure());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(4, modelManager.getFilteredRenderableList().size());"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(MC_MUFFIN, modelManager.getFilteredRenderableList().get(0));"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_SOUP, modelManager.getFilteredRenderableList().get(1));"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_COOKIE, modelManager.getFilteredRenderableList().get(2));"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_COLD_CUT_TRIO, modelManager.getFilteredRenderableList().get(3));"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void editExpenditure() {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.editExpenditure(getSubwayCookieExpenditure(), getKfcZingerExpenditure());"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(3, modelManager.getFilteredRenderableList().size());"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_SOUP, modelManager.getFilteredRenderableList().get(0));"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(KFC_ZINGER, modelManager.getFilteredRenderableList().get(1));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_COLD_CUT_TRIO, modelManager.getFilteredRenderableList().get(2));"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void findExpenditure_validInput() throws CommandException {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.findExpenditure(SUBWAY_COOKIE_NAME);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(1, modelManager.getFilteredRenderableList().size());"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_COOKIE, modelManager.getFilteredRenderableList().get(0));"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void findExpenditure_searchTermNoMatch() throws CommandException {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e modelManager.findExpenditure(SUBWAY_NAME));"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void listExpenditure_validUse() throws CommandException {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.findExpenditure(SUBWAY_COOKIE_NAME);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.listExpenditures();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_SOUP, modelManager.getFilteredRenderableList().get(0));"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_COOKIE, modelManager.getFilteredRenderableList().get(1));"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_COLD_CUT_TRIO, modelManager.getFilteredRenderableList().get(2));"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void listExpenditures_noExpenditures() throws CommandException {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e modelManager.listExpenditures());"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void sortExpendituresByName() {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.sortExpendituresByName();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_SOUP, modelManager.getFilteredRenderableList().get(0));"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_COLD_CUT_TRIO, modelManager.getFilteredRenderableList().get(1));"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_COOKIE, modelManager.getFilteredRenderableList().get(2));"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void sortExpenditureByCreatedDate() {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.sortExpenditureByCreatedDate();"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_COLD_CUT_TRIO, modelManager.getFilteredRenderableList().get(0));"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_COOKIE, modelManager.getFilteredRenderableList().get(1));"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_SOUP, modelManager.getFilteredRenderableList().get(2));"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void calculateExpenditureValue() {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String expenditureValue \u003d"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                modelManager.calculateExpenditureValue(new BudgetIndexManager(modelManager.getBudgetIndex().get()));"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_TOTAL_PRICE, expenditureValue);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void repopulateObservableList() {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void isMain() {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(true, modelManager.isMain());"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void isBudget() {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(false, modelManager.isBudget());"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void isWithinRange_validBudgetIndex_true() {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex validBudgetIndex \u003d new BudgetIndexManager(2);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(true, modelManager.isWithinRange(validBudgetIndex));"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void isWithinRange_budgetIndexIsMoreThanListSize_false() {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex invalidBudgetIndex \u003d new BudgetIndexManager(3);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(false, modelManager.isWithinRange(invalidBudgetIndex));"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void isWithinRange_validExpenditureIndex_true() {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ExpenditureIndex expenditureIndex \u003d new ExpenditureIndexManager(1);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertTrue(modelManager.isWithinRange(expenditureIndex));"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void isWithinRange_expenditureIndexIsMoreThanListSize_false() {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ExpenditureIndex expenditureIndex \u003d new ExpenditureIndexManager(5);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertFalse(modelManager.isWithinRange(expenditureIndex));"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getPage() {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(ENUM_PAGE_MAIN, modelManager.getPage());"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getPageName() {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_NAME, modelManager.getPageName(new BudgetIndexManager(0)));"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getPageTitle() {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_PAGE_TITLE, modelManager.getPageName(new BudgetIndexManager(0)));"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getTotalExpenditureValue() {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(1));"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(KFC_TOTAL_PRICE, modelManager.getTotalExpenditureValue());"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getThreshold() {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(1));"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(new Threshold(KFC_THRESHOLD), modelManager.getThreshold().get());"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void isBudgetPageTest_isMainPage_false() {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertFalse(modelManager.isBudgetPage());"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void isBudgetPageTest_isBudgetPage_true() {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(2));"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertTrue(modelManager.isBudgetPage());"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setBudgetIndex() {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.setBudgetIndex(new BudgetIndexManager(1));"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(1, modelManager.getBudgetIndex().get());"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setPage() {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.setPage(Page.MAIN);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(ENUM_PAGE_MAIN, modelManager.getPage());"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setThreshold_mainPageValidInput_success() {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.setThreshold(Optional.empty());"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(NO_THRESHOLD_MESSAGE, modelManager.getThresholdStringProp().getValue());"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setThreshold_mainPageInvalidInput_throwsAssertionError() {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e modelManager.setThreshold(new Threshold(\"100\").toOptional()));"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setThreshold_budgetPageValidInput_success() {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.setThreshold(new Threshold(\"100\").toOptional());"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(\"100\", modelManager.getThresholdStringProp().getValue());"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setThreshold_budgetPageInvalidInput_throwsAssertionError() {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e modelManager.setThreshold(Optional.empty()));"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setPageTitle() {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.setPageTitle(getSubwayBudget().getName().value);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY_PAGE_TITLE, modelManager.getPageTitle());"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setTotalExpenditure() {"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.openBudget(new BudgetIndexManager(0));"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        modelManager.deleteExpenditure(new ExpenditureIndexManager(0));"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(\"9.00\", modelManager.getTotalExpenditureValue());"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getFilteredRenderableList() {"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(SUBWAY, modelManager.getFilteredRenderableList().get(0));"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(KFC, modelManager.getFilteredRenderableList().get(1));"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(MC_DONALDS, modelManager.getFilteredRenderableList().get(2));"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void updateFilteredRenderableList() {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_sameObject_true() {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(true, modelManager.equals(modelManager));"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_null_false() {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager(getTypicalNusave(), new UserPrefs());"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(false, modelManager.equals(null));"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 457,
      "-": 66
    }
  },
  {
    "path": "src/test/java/seedu/address/model/NusaveTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import static seedu.address.testutil.TypicalBudgets.BUDGET_LIST;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import static seedu.address.testutil.TypicalBudgets.getTypicalNusave;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import static seedu.address.testutil.TypicalExpenditures.getTypicalExpenditures;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import static seedu.address.testutil.TypicalState.TYPICAL_MAIN_PAGE_STATE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import java.util.Collections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import seedu.address.model.budget.BudgetList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import seedu.address.state.State;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//class NusaveTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    private final Nusave nusave \u003d new Nusave();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void constructor() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(Collections.emptyList(), nusave.getBudgetListAsObservableList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    void getPageName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        nusave.resetData(getTypicalNusave());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(nusave.getPageName(new BudgetIndexManager(0)), \"McDonalds\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    void resetData_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertThrows(NullPointerException.class, () -\u003e nusave.resetData(null));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void resetData_withValidReadOnlyAddressBook_replacesData() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        Nusave newData \u003d getTypicalNusave();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        nusave.resetData(newData);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(nusave.getBudgetListAsObservableList(), newData.getBudgetListAsObservableList());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    void addExpenditure() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        nusave.resetData(getTypicalNusave());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        ExpenditureList list \u003d getTypicalExpenditures();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        nusave.addExpenditure(list.getExpenditures().get(0), Optional.of(0));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(nusave.getInternalList().get(0), list.getExpenditures().get(0));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    void editExpenditure() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        nusave.resetData(getTypicalNusave());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        ExpenditureList list \u003d getTypicalExpenditures();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        nusave.addExpenditure(list.getExpenditures().get(0), Optional.of(0));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        nusave.editExpenditure(list.getExpenditures().get(0), list.getExpenditures().get(1), Optional.of(0));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(nusave.getInternalList().get(0), list.getExpenditures().get(1));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    void getTotalExpenditureValue_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertThrows(NullPointerException.class, () -\u003e nusave.getTotalExpenditureValue(null));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    void repopulateObservableList_isMainPage_validInput() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        nusave.resetData(getTypicalNusave());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        State state \u003d TYPICAL_MAIN_PAGE_STATE;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        nusave.repopulateObservableList(state);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        ObservableList\u003cRenderable\u003e internalList \u003d FXCollections.unmodifiableObservableList("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//                FXCollections.observableArrayList(BUDGET_LIST.getBudgets()));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(nusave.getInternalList(), internalList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    void getBudgetList() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        nusave.resetData(getTypicalNusave());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        BudgetList budgetList \u003d nusave.getBudgetList();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertEquals(budgetList, BUDGET_LIST);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    void getInternalList() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 95
    }
  },
  {
    "path": "src/test/java/seedu/address/model/UserPrefsTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//public class UserPrefsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        UserPrefs userPref \u003d new UserPrefs();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 15
    }
  },
  {
    "path": "src/test/java/seedu/address/model/budget/BudgetListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.testutil.TypicalExpenditure;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "class BudgetListTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private final BudgetList budgetList \u003d TypicalBudgets.getFastFoodBudgets();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void testClone_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e budgetList.clone(null));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void testClone_validBudgetList_success() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetList cloneList \u003d TypicalBudgets.getFastFoodBudgets();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertTrue(budgetList.clone(cloneList) !\u003d cloneList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void addToFront_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e budgetList.addToFront(null));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void addToFront_budgetInList_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        budgetList.addToFront(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(budgetList.getBudgetName(budgetIndex), TypicalBudget.KFC_NAME);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void add_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e budgetList.add(null));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void add_budgetInList_success() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        budgetList.add(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(3);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(budgetList.getBudgetName(budgetIndex), TypicalBudget.KFC_NAME);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void addExpenditure_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e budgetList.addExpenditure(null, 0));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void addExpenditure_validExpenditure_success() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Expenditure toAdd \u003d TypicalExpenditure.getMcMuffinExpenditure();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        budgetList.addExpenditure(toAdd, index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertTrue(budgetList.getBudgets().get(1).getExpenditureSize() \u003d\u003d 4);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void editExpenditure_null_indexOutOfBoundsException() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                budgetList.editExpenditure(null, null, 1));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void editExpenditure_validExpenditure_success() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Expenditure oldExpenditure \u003d budgetList.getBudgets().get(0).getExpendituresList().get(0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Expenditure newExpenditure \u003d TypicalExpenditure.getKfcBanditoExpenditure();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        budgetList.editExpenditure(oldExpenditure, newExpenditure, 0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(budgetList.getBudgets().get(0)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "                .getExpendituresList().get(0).getName(), TypicalExpenditure.getKfcBanditoExpenditure().getName());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void remove_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e budgetList.remove(null));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void remove_validBudget_success() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Budget toRemove \u003d budgetList.getBudgets().get(0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        budgetList.remove(toRemove);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertTrue(!budgetList.getBudgets().contains(toRemove));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getExpenditures_indexOutOfBoundsException() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e budgetList.getExpenditures(4));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getExpenditures_validIndex_success() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertTrue(budgetList.getExpenditures(1) !\u003d null);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getExpendituresAsList_indexOutOfBoundsException() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e budgetList.getExpendituresAsList(4));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getExpendituresAsList_validIndex_success() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertTrue(budgetList.getExpendituresAsList(1) !\u003d null);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getBudgets() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertTrue(budgetList.getBudgets() !\u003d null);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getBudgetName() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        String budgetName \u003d budgetList.getBudgetName(budgetIndex);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(budgetName, TypicalBudget.SUBWAY_NAME);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getBudgetName_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e budgetList.getBudgetName(null));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getBudgetThreshold() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Optional\u003cThreshold\u003e threshold \u003d budgetList.getBudgetThreshold(0);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(threshold.get().value, TypicalBudget.SUBWAY_THRESHOLD);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        int size \u003d budgetList.getSize();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(size, 3);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getTotalExpenditureValue() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String totalValue \u003d TypicalBudget.getSubwayBudget().getTotalExpenditure();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(budgetList.getTotalExpenditureValue(0), totalValue);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void setBudgets_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e budgetList.setBudgets(null));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void setBudgets_validBudgets_success() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        List\u003cBudget\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        budgetList.setBudgets(budgets);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(budgetList.getBudgets(), budgets);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getIndexOfBudget() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Budget budget \u003d budgetList.getBudgets().get(0);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(budgetList.getIndexOfBudget(budget), 0);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void editBudget() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Budget oldBudget \u003d budgetList.getBudgets().get(0);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Budget newBudget \u003d TypicalBudget.getMcDonaldsBudget();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        budgetList.editBudget(oldBudget, newBudget);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(budgetList.getBudgets().get(0), newBudget);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ObservableList\u003cBudget\u003e internalBudgetList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        internalBudgetList.setAll(budgetList.getBudgets());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        ObservableList\u003cBudget\u003e internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(internalBudgetList);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(budgetList.asUnmodifiableObservableList(), internalUnmodifiableList);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void sortBudgetsListByName() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        String name \u003d TypicalBudget.KFC_NAME;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        budgetList.sortBudgetsListByName();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(budgetList.getBudgets().get(0).getName().value, name);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void iterator() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Iterator\u003cBudget\u003e first \u003d TypicalBudgets.getFastFoodBudgets().iterator();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Iterator\u003cBudget\u003e second \u003d budgetList.iterator();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertTrue(first !\u003d second);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void equals() {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertTrue(budgetList.equals(budgetList));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertFalse(budgetList.equals(5));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertFalse(budgetList.equals(null));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        BudgetList newList \u003d TypicalBudgets.getFastFoodBudgets();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertTrue(budgetList.equals(newList));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void sortBudgetListByCreatedDate() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        String name \u003d TypicalBudget.MC_DONALDS_NAME;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        budgetList.sortBudgetListByCreatedDate();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        assertEquals(budgetList.getBudgets().get(0).getName().value, name);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "davidliew9": 223
    }
  },
  {
    "path": "src/test/java/seedu/address/model/budget/BudgetTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.budget;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.BudgetBuilder;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.TypicalExpenditure;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.TypicalExpenditures;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "class BudgetTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Budget mcDonalds;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        mcDonalds \u003d TypicalBudget.getMcDonaldsBudget();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void equalsTest() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(mcDonalds.equals(mcDonalds));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different type -\u003e returns false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcDonalds.equals(5));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcDonalds.equals(null));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different budget -\u003e returns false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcDonalds.equals(new BudgetBuilder(TypicalBudget.getKfcBudget()).build()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different createdOn -\u003e returns false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget editedMcdonalds \u003d new BudgetBuilder(mcDonalds)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                .withCreatedOn(\"2020-08-08\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcDonalds.equals(editedMcdonalds));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        editedMcdonalds \u003d new BudgetBuilder(mcDonalds).withName(\"Pizza Hut\").build();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcDonalds.equals(editedMcdonalds));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different threshold -\u003e returns false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        editedMcdonalds \u003d new BudgetBuilder(mcDonalds).withThreshold(\"10\").build();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcDonalds.equals(editedMcdonalds));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different expenditures -\u003e returns false"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        editedMcdonalds \u003d new BudgetBuilder(mcDonalds).withExpenditures(TypicalExpenditures.KFC_EXPENDITURES).build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcDonalds.equals(editedMcdonalds));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        editedMcdonalds \u003d new BudgetBuilder(mcDonalds).build();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(editedMcdonalds.equals(editedMcdonalds));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void constructorTest() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget mcDonalds \u003d new Budget(new Name(\"McDonalds\"), new Date(\"2020-10-10\"),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                TypicalExpenditures.getMcDonaldsExpenditures());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Budget expectedBudget \u003d new BudgetBuilder(mcDonalds).build();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(mcDonalds, expectedBudget);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void getName() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(new Name(\"McDonalds\"), mcDonalds.getName());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void getCreatedOn() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(new Date(\"2020-10-10\"), mcDonalds.getCreatedOn());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void getThreshold() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(new Threshold(\"100\"), mcDonalds.getThreshold().get());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void getExpenditures() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ExpenditureList expectedExpenditureList \u003d TypicalExpenditures.getMcDonaldsExpenditures();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(expectedExpenditureList, mcDonalds.getExpenditures());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void getExpenditureSize() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(3, mcDonalds.getExpenditureSize());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void getTotalExpenditure() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(TypicalExpenditures.getMcDonaldsExpenditures().getTotalExpenditure(),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                mcDonalds.getTotalExpenditure());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void addExpenditure() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        mcDonalds.addExpenditure(TypicalExpenditure.getMcMuffinExpenditure());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(4, mcDonalds.getExpenditureSize());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(TypicalBudget.getMcDonaldsBudget().toString(), mcDonalds.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void contains() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(mcDonalds.contains(\"MC\"));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 118
    }
  },
  {
    "path": "src/test/java/seedu/address/model/expenditure/ExpenditureListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.model.expenditure;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "class ExpenditureListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void testClone() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void addToFront() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void add() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getExpenditures() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getExpenditureSize() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void getTotalExpenditure() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void editExpenditure() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void sortExpendituresByName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    void sortExpendituresByCreateDate() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 42
    }
  },
  {
    "path": "src/test/java/seedu/address/model/expenditure/ExpenditureTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.model.expenditure;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.ExpenditureBuilder;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.testutil.TypicalExpenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "class ExpenditureTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Expenditure mcMuffin;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        mcMuffin \u003d TypicalExpenditure.getMcMuffinExpenditure();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void equalsTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(mcMuffin.equals(mcMuffin));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different type -\u003e returns false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcMuffin.equals(5));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcMuffin.equals(null));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different expenditure -\u003e returns false"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcMuffin.equals(new ExpenditureBuilder(TypicalExpenditure.getKfcBanditoExpenditure()).build()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different createdOn -\u003e returns false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Expenditure editedMcmuffin \u003d new ExpenditureBuilder(mcMuffin).withCreatedOn(\"2020-10-13\").build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcMuffin.equals(editedMcmuffin));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        editedMcmuffin \u003d new ExpenditureBuilder(mcMuffin).withName(\"McSpicy\").build();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcMuffin.equals(editedMcmuffin));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different price -\u003e returns false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        editedMcmuffin \u003d new ExpenditureBuilder(mcMuffin).withPrice(\"12.00\").build();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcMuffin.equals(editedMcmuffin));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // different tags -\u003e returns false"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        editedMcmuffin \u003d new ExpenditureBuilder(mcMuffin).withTags(\"Burger\").build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertFalse(mcMuffin.equals(editedMcmuffin));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        // same value -\u003e return true"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        editedMcmuffin \u003d new ExpenditureBuilder(mcMuffin).build();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(mcMuffin.equals(editedMcmuffin));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void getName() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(new Name(\"McMuffin\"), mcMuffin.getName());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void getPrice() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(new Price(\"4.50\"), mcMuffin.getPrice());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void getCreatedOn() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(new Date(\"2020-10-10\"), mcMuffin.getCreatedOn());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void getFormattedCreatedOn() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(java.sql.Date.valueOf(LocalDate.parse(\"2020-10-10\")),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                mcMuffin.getFormattedCreatedOn());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void getTags() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(new HashSet\u003c\u003e(), mcMuffin.getTags());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(\"McMuffin\", mcMuffin.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    void contains() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(mcMuffin.contains(\"MC\"));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 97
    }
  },
  {
    "path": "src/test/java/seedu/address/model/history/HistoryManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.history;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class HistoryManagerTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void hasHistory_withoutHistory_returnsFalse() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertFalse(historyManager.hasHistory());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void hasHistory_nullHistory_throwsAssertionError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.setHistory(null);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e historyManager.hasHistory());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void hasFuture_withoutFuture_returnsFalse() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertFalse(historyManager.hasFuture());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void hasFuture_nullHistory_throwsAssertionError() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.setHistory(null);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e historyManager.hasFuture());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void getHistory_withoutHistory_throwsAssertionError() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e historyManager.getHistory());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void getHistory_withHistory_returnsCorrectly() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.saveToHistory(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(TypicalBudget.getKfcBudget(), historyManager.getHistory());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void getFuture_withFuture_returnsCorrectly() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e next \u003d new Node\u003c\u003e(TypicalBudget.getMcDonaldsBudget());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        node.connectTo(next);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.setHistory(node);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(TypicalBudget.getMcDonaldsBudget(), historyManager.getFuture());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void getFuture_withoutHistory_throwsAssertionError() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e historyManager.getFuture());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveToHistory_nullParameters_throwsNullPointerException() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e historyManager.saveToHistory(null));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveToHistory_validInput_savesSuccessfully() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.saveToHistory(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(TypicalBudget.getKfcBudget(), historyManager.getHistory());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveToHistory_nullHistory_throwsAssertionError() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.setHistory(null);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e historyManager.saveToHistory(TypicalBudget.getKfcBudget()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveToFuture_nullParameters_throwsNullPointerException() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e historyManager.saveToFuture(null));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveToFuture_hasFutureAfterSaving_savesSuccessfully() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e previous \u003d new Node\u003c\u003e(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        previous.connectTo(node);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.setHistory(node);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.saveToFuture(TypicalBudget.getMcDonaldsBudget());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.setHistory(previous);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(TypicalBudget.getMcDonaldsBudget(), historyManager.getFuture());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void saveToFuture_hasNoFutureAfterSaving_throwsAssertionError() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e previous \u003d new Node\u003c\u003e(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        previous.connectTo(node);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.setHistory(node);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.saveToFuture(TypicalBudget.getMcDonaldsBudget());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e historyManager.getFuture());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void equals_sameHistoryManager_returnsTrue() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertTrue(historyManager.equals(historyManager));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void equals_validHistoryManager_returnsTrue() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.saveToHistory(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManagerToCompare \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        historyManager.saveToHistory(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertTrue(historyManager.equals(historyManagerToCompare));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void equals_withNull_returnsFalse() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        HistoryManager\u003cBudget\u003e historyManager \u003d new HistoryManager\u003c\u003e();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertFalse(historyManager.equals(null));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 138
    }
  },
  {
    "path": "src/test/java/seedu/address/model/history/NodeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.history;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class NodeTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void constructor_nullParameters_throwsNullPointerException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Node\u003cBudget\u003e(null));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void getValue_withValidBudget_returnsCorrectly() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget value \u003d TypicalBudget.getKfcBudget();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e(value);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(value, node.getValue());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void getNext_withoutNext_returnsCorrectly() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget value \u003d TypicalBudget.getKfcBudget();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e(value);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(null, node.getNext());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void getPrevious_withoutPrevious_returnsCorrectly() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget value \u003d TypicalBudget.getKfcBudget();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e(value);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(null, node.getPrevious());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void hasNext_withoutNext_returnsFalse() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertFalse(node.hasNext());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void hasPrevious_withoutNext_returnsFalse() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget value \u003d TypicalBudget.getKfcBudget();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e(value);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertFalse(node.hasPrevious());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void connectTo_withValidBudget_returnsCorrectly() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget value \u003d TypicalBudget.getKfcBudget();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e(value);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget nextValue \u003d TypicalBudget.getMcDonaldsBudget();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e nextNode \u003d new Node\u003c\u003e(nextValue);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        node.connectTo(nextNode);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(nextNode, node.getNext());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(node, nextNode.getPrevious());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void isNull_withValue_returnsFalse() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget value \u003d TypicalBudget.getKfcBudget();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e(value);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertFalse(node.isNull());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void isEmpty_withEmptyNode_returnsTrue() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertTrue(node.isEmpty());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void equals_withSameNode_returnsTrue() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget value \u003d TypicalBudget.getKfcBudget();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e(value);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertTrue(node.equals(node));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void equals_withValidNode_returnsTrue() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget value \u003d TypicalBudget.getKfcBudget();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e(value);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget valueToCompare \u003d TypicalBudget.getKfcBudget();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e nodeToCompare \u003d new Node\u003c\u003e(valueToCompare);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertTrue(node.equals(nodeToCompare));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void equals_withNull_returnsFalse() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Budget value \u003d TypicalBudget.getKfcBudget();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Node\u003cBudget\u003e node \u003d new Node\u003c\u003e(value);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertFalse(node.equals(null));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 99
    }
  },
  {
    "path": "src/test/java/seedu/address/model/history/VersionedNusaveTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.model.history;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.state.State;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.testutil.TypicalState;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "class VersionedNusaveTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Nusave VALID_NUSAVE \u003d TypicalBudgets.getTypicalNusave();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final State VALID_MAIN_PAGE_STATE \u003d TypicalState.getTypicalMainPageState();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final State VALID_BUDGET_PAGE_STATE_AT_INDEX_ONE \u003d TypicalState.getKfcBudgetPageState();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void constructor_nullParameters_throwsNullPointerException() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new VersionedNusave(null, VALID_NUSAVE));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new VersionedNusave(VALID_MAIN_PAGE_STATE, null));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void getBudgetIndex_withIndexOneState_returnsCorrectly() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        VersionedNusave versionedNusave \u003d new VersionedNusave(VALID_BUDGET_PAGE_STATE_AT_INDEX_ONE, VALID_NUSAVE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(versionedNusave.getBudgetIndex(), VALID_BUDGET_PAGE_STATE_AT_INDEX_ONE.getBudgetIndex());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void getBudgetIndex_withEmptyIndexState_returnsCorrectly() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        VersionedNusave versionedNusave \u003d new VersionedNusave(VALID_MAIN_PAGE_STATE, VALID_NUSAVE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(versionedNusave.getBudgetIndex(), VALID_MAIN_PAGE_STATE.getBudgetIndex());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void getBudgetList_withValidNusave_returnsCorrectly() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        VersionedNusave versionedNusave \u003d new VersionedNusave(VALID_MAIN_PAGE_STATE, VALID_NUSAVE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertEquals(versionedNusave.getBudgetList(), VALID_NUSAVE.getBudgetList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void equals_withSameNusave_returnsTrue() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        VersionedNusave versionedNusave \u003d new VersionedNusave(VALID_MAIN_PAGE_STATE, VALID_NUSAVE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertTrue(versionedNusave.equals(versionedNusave));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void equals_withValidNusave_returnsTrue() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        VersionedNusave versionedNusave \u003d new VersionedNusave(VALID_MAIN_PAGE_STATE, VALID_NUSAVE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        VersionedNusave toCompare \u003d new VersionedNusave(TypicalState.getTypicalMainPageState(),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                TypicalBudgets.getTypicalNusave());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertTrue(versionedNusave.equals(toCompare));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    void equals_withNull_returnsFalse() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        VersionedNusave versionedNusave \u003d new VersionedNusave(VALID_MAIN_PAGE_STATE, VALID_NUSAVE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        assertFalse(versionedNusave.equals(null));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 63
    }
  },
  {
    "path": "src/test/java/seedu/address/model/tag/TagTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.tag;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class TagTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Tag(null));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_invalidTagName_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidTagName \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void isValidTagName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // null tag name"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e Tag.isValid(null));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "-": 25
    }
  },
  {
    "path": "src/test/java/seedu/address/state/StateManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.state;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.model.budget.Threshold.NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.state.StateManager.defaultValueTotalExpenditure;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.ENUM_PAGE_BUDGET;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.ENUM_PAGE_MAIN;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.MAIN_PAGE_BUDGET_INDEX;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.MAIN_PAGE_TITLE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.MAIN_THRESHOLD_VALUE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.MCDONALDS_BUDGET_INDEX;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.MCDONALDS_BUDGET_PAGE_STATE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.MCDONALDS_PAGE_TITLE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.SUBWAY_BUDGET_INDEX;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.SUBWAY_PAGE_TITLE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.TYPICAL_MAIN_PAGE_STATE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.getKfcBudgetPageState;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.getMcdonaldsBudgetPageState;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.getSubwayBudgetPageState;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.testutil.TypicalState.getTypicalMainPageState;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class StateManagerTest {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final BudgetIndex VALID_BUDGET_INDEX \u003d new BudgetIndexManager(1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final Page VALID_PAGE \u003d Page.MAIN;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String VALID_PAGE_TITLE \u003d PageTitle.MAIN_PAGE_TITLE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final StateManager VALID_STATE_MANAGER \u003d new StateManager(VALID_BUDGET_INDEX,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            VALID_PAGE, VALID_PAGE_TITLE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void constructor_nullParameters_throwsNullPointerException() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new StateManager("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                null, VALID_PAGE, VALID_PAGE_TITLE));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new StateManager("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_BUDGET_INDEX, null, VALID_PAGE_TITLE));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new StateManager("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_BUDGET_INDEX, VALID_PAGE, null));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void isMain_currentPageMain_true() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertTrue(new StateManager(VALID_BUDGET_INDEX, Page.MAIN, VALID_PAGE_TITLE).isMain());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void isMain_currentPageBudget_false() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertFalse(new StateManager(VALID_BUDGET_INDEX, Page.BUDGET, VALID_PAGE_TITLE).isMain());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void isBudget_currentPageBudget_true() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertTrue(new StateManager(VALID_BUDGET_INDEX, Page.BUDGET, VALID_PAGE_TITLE).isBudget());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void isBudget_currentPageMain_false() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertFalse(new StateManager(VALID_BUDGET_INDEX, Page.MAIN, VALID_PAGE_TITLE).isBudget());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void setPage_nullPage_throwsNullPointerException() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e VALID_STATE_MANAGER.setPage(null));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void setTotalExpenditure_nullString_throwsNullPointerException() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e VALID_STATE_MANAGER.setTotalExpenditure(null));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void setBudgetIndex_nullBudgetIndex_throwsNullPointerException() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e VALID_STATE_MANAGER.setBudgetIndex(null));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void setPageName_nullString_throwsNullPointerException() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e VALID_STATE_MANAGER.setPageTitle(null));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getBudgetIndex_mainPage_equal() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State mainPageState \u003d getTypicalMainPageState();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(mainPageState.getBudgetIndex(), MAIN_PAGE_BUDGET_INDEX.getBudgetIndex());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getBudgetIndex_budgetPage_equal() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State budgetPageState \u003d getMcdonaldsBudgetPageState();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(budgetPageState.getBudgetIndex(), MCDONALDS_BUDGET_INDEX.getBudgetIndex());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getPage_mainPage_equal() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State mainPageState \u003d getTypicalMainPageState();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(mainPageState.getPage(), ENUM_PAGE_MAIN);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getPage_budgetPage_equal() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State budgetPageState \u003d getKfcBudgetPageState();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(budgetPageState.getPage(), ENUM_PAGE_BUDGET);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getPageTitle_mainPage_equal() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State mainPageState \u003d getTypicalMainPageState();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(mainPageState.getPageTitle(), MAIN_PAGE_TITLE);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getPageTitle_budgetPage_equal() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State budgetPageState \u003d getSubwayBudgetPageState();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(budgetPageState.getPageTitle(), SUBWAY_PAGE_TITLE);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setOpenCommandState_mainPage_equal() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State mainPageState \u003d getTypicalMainPageState();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        mainPageState.setBudgetIndex(MCDONALDS_BUDGET_INDEX);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        mainPageState.setOpenCommandState(MCDONALDS_PAGE_TITLE, defaultValueTotalExpenditure(),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                Optional.of(MAIN_THRESHOLD_VALUE));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(MCDONALDS_BUDGET_PAGE_STATE, mainPageState);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setOpenCommandState_budgetPage_throwsAssertion() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State budgetPageState \u003d getMcdonaldsBudgetPageState();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e budgetPageState.setOpenCommandState("
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                MCDONALDS_PAGE_TITLE, defaultValueTotalExpenditure(),"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                Optional.of(MAIN_THRESHOLD_VALUE)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setCloseCommandState_mainPage_equal() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State budgetPageState \u003d getMcdonaldsBudgetPageState();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        budgetPageState.setCloseCommandState();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(budgetPageState, TYPICAL_MAIN_PAGE_STATE);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setCloseCommandState_budgetPage_throwsAssertion() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State mainPageState \u003d getTypicalMainPageState();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e mainPageState.setCloseCommandState());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_samebudgetState_true() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State budgetPageState \u003d getMcdonaldsBudgetPageState();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(budgetPageState.equals(MCDONALDS_BUDGET_PAGE_STATE), true);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_sameObject_true() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(MCDONALDS_BUDGET_PAGE_STATE.equals(MCDONALDS_BUDGET_PAGE_STATE), true);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_nullObject_false() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(getKfcBudgetPageState().equals(null), false);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_differentBudgetIndex_false() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State budgetPageState \u003d getMcdonaldsBudgetPageState();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        budgetPageState.setBudgetIndex(SUBWAY_BUDGET_INDEX);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(budgetPageState.equals(MCDONALDS_BUDGET_PAGE_STATE), false);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_differentPage_false() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State budgetPageState \u003d getMcdonaldsBudgetPageState();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        budgetPageState.setPage(ENUM_PAGE_MAIN);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(budgetPageState.equals(MCDONALDS_BUDGET_PAGE_STATE), false);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_differentPageTitle_false() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        State budgetPageState \u003d getMcdonaldsBudgetPageState();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        budgetPageState.setPageTitle(SUBWAY_PAGE_TITLE);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(budgetPageState.equals(MCDONALDS_BUDGET_PAGE_STATE), false);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getIsBudgetPageProp() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(false, getTypicalMainPageState().getIsBudgetPageProp().getValue());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getInfoBoxSecondProp() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        String time \u003d new SimpleDateFormat(\"hh:mm a\").format(Calendar.getInstance().getTime());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(time, getTypicalMainPageState().getInfoBoxSecondRowProp().getValue());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getThresholdStringProp() {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(NO_THRESHOLD_MESSAGE, getTypicalMainPageState().getThresholdStringProp().getValue());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getIsBudgetPage() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(false, TYPICAL_MAIN_PAGE_STATE.isBudgetPage());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 67,
      "sogggy": 149
    }
  },
  {
    "path": "src/test/java/seedu/address/state/budgetindex/BudgetIndexManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.state.budgetindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class BudgetIndexManagerTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final int VALID_BUDGET_INDEX \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final int INVALID_BUDGET_INDEX \u003d -1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void constructor_invalidInput_throwsAssertionError() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e new BudgetIndexManager(INVALID_BUDGET_INDEX));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setIndex_validInput() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex actual \u003d new BudgetIndexManager(1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        actual.setIndex(VALID_BUDGET_INDEX);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex expected \u003d new BudgetIndexStub().getTypicalBudgetIndex();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void setIndex_invalidInput_throwsAssertionError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e new BudgetIndexManager(VALID_BUDGET_INDEX)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                .setIndex(INVALID_BUDGET_INDEX));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getIndex() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex expected \u003d new BudgetIndexStub().getTypicalBudgetIndex();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expected.getBudgetIndex(), Optional.of(0));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_sameObject_true() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexStub().getTypicalBudgetIndex();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(true, budgetIndex.equals(budgetIndex));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_null_false() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        BudgetIndex budgetIndex \u003d new BudgetIndexStub().getTypicalBudgetIndex();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(false, budgetIndex.equals(null));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    class BudgetIndexStub {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        public final BudgetIndex getTypicalBudgetIndex() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return new BudgetIndexManager(VALID_BUDGET_INDEX);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 19,
      "sogggy": 37
    }
  },
  {
    "path": "src/test/java/seedu/address/state/budgetindex/EmptyBudgetIndexTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.state.budgetindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class EmptyBudgetIndexTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void setIndex_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e new EmptyBudgetIndex().setIndex(1));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void getBudgetIndex() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(Optional.empty(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                new EmptyBudgetIndex().getBudgetIndex());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 22
    }
  },
  {
    "path": "src/test/java/seedu/address/state/expenditureindex/ExpenditureIndexManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.state.expenditureindex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class ExpenditureIndexManagerTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final int VALID_EXPENDITURE_INDEX \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final int INVALID_EXPENDITURE_INDEX \u003d -1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void constructor_invalidInput_throwsAssertionError() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e new ExpenditureIndexManager(INVALID_EXPENDITURE_INDEX));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setIndex_validInput() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ExpenditureIndex actual \u003d new ExpenditureIndexManager(1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        actual.setIndex(VALID_EXPENDITURE_INDEX);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ExpenditureIndex expected \u003d new ExpenditureIndexStub().getTypicalExpenditureIndex();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void setIndex_invalidInput_throwsAssertionError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e new ExpenditureIndexManager(VALID_EXPENDITURE_INDEX)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                .setIndex(INVALID_EXPENDITURE_INDEX));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void getIndex() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ExpenditureIndex expected \u003d new ExpenditureIndexStub().getTypicalExpenditureIndex();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(expected.getExpenditureIndex(), Optional.of(0));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_sameObject_true() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ExpenditureIndex expenditureIndex \u003d new ExpenditureIndexStub().getTypicalExpenditureIndex();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(true, expenditureIndex.equals(expenditureIndex));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    void equals_null_false() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        ExpenditureIndex expenditureIndex \u003d new ExpenditureIndexStub().getTypicalExpenditureIndex();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        assertEquals(false, expenditureIndex.equals(null));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    class ExpenditureIndexStub {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        public final ExpenditureIndex getTypicalExpenditureIndex() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            return new ExpenditureIndexManager(VALID_EXPENDITURE_INDEX);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 56
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedBudgetTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class JsonAdaptedBudgetTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_NAME_BLANK \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_NAME_NON_ALPHANUMERIC \u003d \"@Household Expenses\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_DATE_FORMAT \u003d \"10-10-2010\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_THRESHOLD_MORE_THAN_TWO_DECIMAL_PLACES \u003d \"2.500\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_THRESHOLD_NON_NUMERIC \u003d \"abc\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final Budget MC_DONALDS \u003d TypicalBudget.getMcDonaldsBudget();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String VALID_NAME \u003d MC_DONALDS.getName().toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String VALID_DATE \u003d MC_DONALDS.getCreatedOn().toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String VALID_THRESHOLD \u003d MC_DONALDS.getThreshold().get().toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final List\u003cJsonAdaptedExpenditure\u003e VALID_EXPENDITURES \u003d MC_DONALDS.getExpendituresList().stream()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            .map(JsonAdaptedExpenditure::new).collect(Collectors.toList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void toModelType_validBudgetDetails_returnsBudget() throws IllegalValueException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Budget budget \u003d TypicalBudget.getMcDonaldsBudget();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedBudget jsonAdaptedBudget \u003d new JsonAdaptedBudget(budget);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(TypicalBudget.getMcDonaldsBudget(), jsonAdaptedBudget.toModelType());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_nullName_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(null, VALID_DATE, VALID_THRESHOLD, VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidNameBlank_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(INVALID_NAME_BLANK, VALID_DATE,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_THRESHOLD, VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidNameNonAlphaNumeric_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(INVALID_NAME_NON_ALPHANUMERIC, VALID_DATE, VALID_THRESHOLD,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_nullDate_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(VALID_NAME, null, VALID_THRESHOLD, VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidDate_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(VALID_NAME, INVALID_DATE_FORMAT,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_THRESHOLD, VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidThresholdMoreThanTwoDecimalPlaces_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(VALID_NAME, VALID_DATE,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            INVALID_THRESHOLD_MORE_THAN_TWO_DECIMAL_PLACES, VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidThresholdNonNumeric_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedBudget budget \u003d new JsonAdaptedBudget(VALID_NAME, VALID_DATE,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            INVALID_THRESHOLD_NON_NUMERIC, VALID_EXPENDITURES);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, budget::toModelType);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 78,
      "wenhaogoh": 4
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedExpenditureTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalExpenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class JsonAdaptedExpenditureTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_NAME_BLANK \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_NAME_NON_ALPHANUMERIC \u003d \"@pple Pie\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_PRICE_BLANK \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_PRICE_MORE_THAN_TWO_DECIMAL_PLACES \u003d \"2.000\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_PRICE_NON_NUMERIC \u003d \"abc\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_DATE_BLANK \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_DATE_WRONG_FORMAT \u003d \"08-10-2020\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_TAG \u003d \"#Snacks\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final Expenditure MC_MUFFIN \u003d TypicalExpenditure.getMcMuffinExpenditure();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String VALID_NAME \u003d MC_MUFFIN.getName().value;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String VALID_PRICE \u003d MC_MUFFIN.getPrice().value;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String VALID_DATE \u003d MC_MUFFIN.getCreatedOn().value;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d MC_MUFFIN.getTags().stream().map(JsonAdaptedTag::new)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_validExpenditureDetails_returnsExpenditure() throws IllegalValueException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME, VALID_PRICE, VALID_DATE, null);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(TypicalExpenditure.MC_MUFFIN, expenditure.toModelType());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_nullName_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(null,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_PRICE, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidNameBlank_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(INVALID_NAME_BLANK,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_PRICE, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidNameNonNumeric_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(INVALID_NAME_NON_ALPHANUMERIC,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_PRICE, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_nullPrice_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                null, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidPriceBlank_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                INVALID_PRICE_BLANK, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidPriceMoreThanTwoDecimalPlaces_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                INVALID_PRICE_MORE_THAN_TWO_DECIMAL_PLACES, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidPriceNonNumeric_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                INVALID_PRICE_NON_NUMERIC, VALID_DATE, VALID_TAGS);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_nullDate_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_PRICE, null, VALID_TAGS);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidDateBlank_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_PRICE, INVALID_DATE_BLANK, VALID_TAGS);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidDateWrongFormat_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_PRICE, INVALID_DATE_WRONG_FORMAT, VALID_TAGS);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidTags_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedExpenditure expenditure \u003d new JsonAdaptedExpenditure(VALID_NAME,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                VALID_PRICE, VALID_DATE, invalidTags);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, expenditure::toModelType);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 117
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedTagTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class JsonAdaptedTagTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String VALID_TAG \u003d \"entertainment\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static final String INVALID_TAG \u003d \"#household\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void constructor_nullParameter_throwsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new JsonAdaptedTag(new Tag(null)));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void getTagName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedTag tag \u003d new JsonAdaptedTag(VALID_TAG);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(tag.getTagName(), VALID_TAG);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_invalidTag_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedTag tag \u003d new JsonAdaptedTag(INVALID_TAG);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, tag::toModelType);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    void toModelType_validTag_returnsTag() throws IllegalValueException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Tag tag \u003d new Tag(VALID_TAG);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonAdaptedTag jsonAdaptedTag \u003d new JsonAdaptedTag(tag);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(tag, jsonAdaptedTag.toModelType());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 39
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonNusaveStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static seedu.address.testutil.TypicalBudgets.getTypicalNusave;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalBudget;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class JsonNusaveStorageTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonNusaveStorageTest\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void readNusave_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e readNusave(null));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private java.util.Optional\u003cReadOnlyNusave\u003e readNusave(String filePath) throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return new JsonNusaveStorage(Paths.get(filePath)).readNusave(addToTestDataPathIfNotNull(filePath));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return prefsFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                : null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void read_missingFile_emptyResult() throws Exception {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertFalse(readNusave(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void read_notJsonFormat_throwDataConversionException() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(DataConversionException.class, () -\u003e readNusave(\"notJsonFormatNusave.json\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void readAddressBook_invalidBudgetNusave_throwDataConversionException() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(DataConversionException.class, () -\u003e readNusave(\"invalidBudgetNusave.json\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void readAddressBook_invalidAndValidBudgetNusave_throwDataConversionException() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(DataConversionException.class, () -\u003e readNusave(\"invalidAndValidBudgetNusave.json\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void readAndSaveNusave_allInOrder_success() throws Exception {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Path filePath \u003d testFolder.resolve(\"TempNusave.json\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Nusave original \u003d getTypicalNusave();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonNusaveStorage jsonNusaveStorage \u003d new JsonNusaveStorage(filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // Save in new file and read back"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        jsonNusaveStorage.saveNusave(original, filePath);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        ReadOnlyNusave readBack \u003d jsonNusaveStorage.readNusave(filePath).get();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(original, new Nusave(readBack));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // Modify data, overwrite exiting file, and read back"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        original.addBudget(TypicalBudget.getMcDonaldsBudget());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        original.deleteBudget(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        jsonNusaveStorage.saveNusave(original, filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        readBack \u003d jsonNusaveStorage.readNusave(filePath).get();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(original, new Nusave(readBack));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // Save and read without specifying file path"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        original.addBudget(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        jsonNusaveStorage.saveNusave(original); // file path not specified"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        readBack \u003d jsonNusaveStorage.readNusave().get(); // file path not specified"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(original, new Nusave(readBack));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e saveNusave(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     * Saves {@code addressBook} at the specified {@code filePath}."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private void saveNusave(ReadOnlyNusave nusave, String filePath) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            new JsonNusaveStorage(Paths.get(filePath))"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    .saveNusave(nusave, addToTestDataPathIfNotNull(filePath));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void saveAddressBook_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e saveNusave(new Nusave(), null));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 109
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonSerializableNusaveTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "class JsonSerializableNusaveTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableNusaveTest\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static final Path TYPICAL_BUDGETS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalBudgetsNusave.json\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static final Path INVALID_BUDGETS_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidBudgetNusave.json\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void toModelType_typicalPersonsFile_success() throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonSerializableNusave dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_BUDGETS_FILE,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                JsonSerializableNusave.class).get();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Nusave nusaveFromFile \u003d dataFromFile.toModelType();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Nusave typicalBudgetsNusave \u003d TypicalBudgets.getTypicalNusave();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        // assertEquals(typicalBudgetsNusave, nusaveFromFile);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonSerializableNusave dataFromFile \u003d JsonUtil.readJsonFile(INVALID_BUDGETS_FILE,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                JsonSerializableNusave.class).get();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertThrows(IllegalValueException.class, dataFromFile::toModelType);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 37
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/StorageManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.model.ReadOnlyNusave;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import seedu.address.testutil.TypicalBudgets;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManagerTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        JsonNusaveStorage nusaveStorage \u003d new JsonNusaveStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        storageManager \u003d new StorageManager(nusaveStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void prefsReadSave() throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "         * Note: This is an integration test that verifies the StorageManager is properly wired to the"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "         * {@link JsonUserPrefsStorage} class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs original \u003d new UserPrefs();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        storageManager.saveUserPrefs(original);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, retrieved);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void nusaveReadSave() throws Exception {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "         * Note: This is an integration test that verifies the StorageManager is properly wired to the"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "         * {@link JsonNusaveStorage} class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "         * More extensive testing of UserPref saving/reading is done in {@link JsonNusaveStorageTest} class."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Nusave nuSave \u003d TypicalBudgets.getTypicalNusave();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        storageManager.saveNusave(nuSave);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        ReadOnlyNusave retrieved \u003d storageManager.readNusave().get();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(nuSave, new Nusave(retrieved));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void getNusaveFilePath() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertNotNull(storageManager.getNusaveFilePath());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 14,
      "-": 54
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/BudgetBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.budget.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class BudgetBuilder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"McDonalds\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String DEFAULT_CREATED_ON \u003d \"2020-10-10\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DEFAULT_THRESHOLD \u003d \"100\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final ExpenditureList DEFAULT_EXPENDITURES \u003d TypicalExpenditures.getMcDonaldsExpenditures();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Date createdOn;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Optional\u003cThreshold\u003e threshold;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private ExpenditureList expenditures;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code BudgetBuilder} with a threshold using the default details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetBuilder() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        createdOn \u003d new Date(DEFAULT_CREATED_ON);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        threshold \u003d new Threshold(DEFAULT_THRESHOLD).toOptional();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditures \u003d DEFAULT_EXPENDITURES;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code BudgetBuilder} with the data of {@code budgetToCopy}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetBuilder(Budget budgetToCopy) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name \u003d budgetToCopy.getName();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        createdOn \u003d budgetToCopy.getCreatedOn();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        threshold \u003d budgetToCopy.getThreshold();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditures \u003d budgetToCopy.getExpenditures();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code name} of the {@code Budget} that we are building."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetBuilder withName(String name) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Sets the {@code createdOn} of the {@code Budget} that we are building."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public BudgetBuilder withCreatedOn(String createdOn) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.createdOn \u003d new Date(createdOn);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code threshold} of the {@code Budget} that we are building."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public BudgetBuilder withThreshold(String threshold) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.threshold \u003d new Threshold(threshold).toOptional();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code expenditures} of the {@code Budget} that we are building."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public BudgetBuilder withExpenditures(ExpenditureList expenditures) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.expenditures \u003d expenditures;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Budget build() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new Budget(name, createdOn, threshold, expenditures);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 17,
      "wenhaogoh": 60
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/EditExpenditureDescriptorBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.logic.commands.budget.EditExpenditureCommand.EditExpenditureDescriptor;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class EditExpenditureDescriptorBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    private EditExpenditureDescriptor descriptor;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureDescriptorBuilder() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.descriptor \u003d new EditExpenditureDescriptor();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureDescriptorBuilder(EditExpenditureDescriptor descriptor) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.descriptor \u003d new EditExpenditureDescriptor(descriptor);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param expenditure"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureDescriptorBuilder(Expenditure expenditure) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.descriptor \u003d new EditExpenditureDescriptor();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.descriptor.setName(expenditure.getName());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.descriptor.setPrice(expenditure.getPrice());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.descriptor.setDate(expenditure.getCreatedOn());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.descriptor.setTags(expenditure.getTags());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureDescriptorBuilder withName(String name) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.descriptor.setName(new Name(name));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param price"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureDescriptorBuilder withPrice(String price) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.descriptor.setPrice(new Price(price));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureDescriptorBuilder withDate(String date) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.descriptor.setDate(new Date(date));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @param tags"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureDescriptorBuilder withTags(String... tags) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        this.descriptor.setTags(tagSet);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public EditExpenditureDescriptor build() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "        return descriptor;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 82
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/ExpenditureBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.expenditure.Price;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * A utility class to help with building Expenditure objects."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class ExpenditureBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"BREAKFAST\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String DEFAULT_PRICE \u003d \"12.50\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static final String DEFAULT_CREATED_ON \u003d \"2020-10-13\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Price price;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Date createdOn;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code ExpenditureBuilder} with the default details."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        price \u003d new Price(DEFAULT_PRICE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        createdOn \u003d new Date(DEFAULT_CREATED_ON);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a {@code ExpenditureBuilder} with the data of {@code expenditureToCopy}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder(Expenditure expenditureToCopy) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        name \u003d expenditureToCopy.getName();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        price \u003d expenditureToCopy.getPrice();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        createdOn \u003d expenditureToCopy.getCreatedOn();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e(expenditureToCopy.getTags());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code name} of the {@code Expenditure} that we are building."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder withName(String name) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code price} of the {@code Expenditure} that we are building."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder withPrice(String price) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.price \u003d new Price(price);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code createdOn} of the {@code Expenditure} that we are building."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder withCreatedOn(String createdOn) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.createdOn \u003d new Date(createdOn);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the {@code tags} of the {@code Expenditure} that we are building."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExpenditureBuilder withTags(String ... tags) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.tags \u003d SampleDataUtil.getTagSet(tags);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Expenditure build() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new Expenditure(name, price, createdOn, tags);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 1,
      "wenhaogoh": 80
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/StateBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.State;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.StateManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class StateBuilder {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final BudgetIndex DEFAULT_BUDGET_INDEX \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final Page MAIN_PAGE \u003d Page.MAIN;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final Page BUDGET_PAGE \u003d Page.BUDGET;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String DEFAULT_PAGE_TITLE \u003d \"NUSave\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private BudgetIndex budgetIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private Page currentPage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private String pageTitle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Creates a {@code StateBuilder} with a threshold using the default details."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StateBuilder() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        budgetIndex \u003d DEFAULT_BUDGET_INDEX;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        currentPage \u003d MAIN_PAGE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.pageTitle \u003d DEFAULT_PAGE_TITLE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Sets the {@code budgetIndex} of the {@code State} that we are building."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StateBuilder withBudgetIndex(BudgetIndex budgetIndex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.budgetIndex \u003d budgetIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Sets the {@code currentPage} of the {@code State} that we are building."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StateBuilder withCurrentPage(Page currentPage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.currentPage \u003d currentPage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     * Sets the {@code pageTitle} of the {@code State} that we are building."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public StateBuilder withPageTitle(String pageTitle) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        this.pageTitle \u003d pageTitle;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public State build() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new StateManager(budgetIndex, currentPage, pageTitle);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 55
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalBudget.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.budget.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class TypicalBudget {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_DONALDS_NAME \u003d \"McDonalds\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_DONALDS_THRESHOLD \u003d \"100\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_DONALDS_CREATED_ON \u003d \"2020-10-10\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_NAME \u003d \"KFC\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_THRESHOLD \u003d \"80\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_CREATED_ON \u003d \"2020-10-09\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_NAME \u003d \"Subway\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_THRESHOLD \u003d \"80\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_CREATED_ON \u003d \"2020-10-08\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Budget MC_DONALDS \u003d new BudgetBuilder().withName(MC_DONALDS_NAME)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withThreshold(MC_DONALDS_THRESHOLD).withCreatedOn(MC_DONALDS_CREATED_ON)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            .withExpenditures(TypicalExpenditures.getMcDonaldsExpenditures()).build();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Budget KFC \u003d new BudgetBuilder().withName(KFC_NAME)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withThreshold(KFC_THRESHOLD).withCreatedOn(KFC_CREATED_ON)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            .withExpenditures(TypicalExpenditures.getKfcExpenditures()).build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Budget SUBWAY \u003d new BudgetBuilder().withName(SUBWAY_NAME)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withThreshold(SUBWAY_THRESHOLD).withCreatedOn(SUBWAY_CREATED_ON)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            .withExpenditures(TypicalExpenditures.getSubwayExpenditures()).build();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Budget getMcDonaldsBudget() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new BudgetBuilder().withName(MC_DONALDS_NAME)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withThreshold(MC_DONALDS_THRESHOLD).withCreatedOn(MC_DONALDS_CREATED_ON)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                .withExpenditures(TypicalExpenditures.getMcDonaldsExpenditures()).build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Budget getKfcBudget() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new BudgetBuilder().withName(KFC_NAME)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withThreshold(KFC_THRESHOLD).withCreatedOn(KFC_CREATED_ON)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                .withExpenditures(TypicalExpenditures.getKfcExpenditures()).build();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static Budget getSubwayBudget() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new BudgetBuilder().withName(SUBWAY_NAME)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withThreshold(SUBWAY_THRESHOLD).withCreatedOn(SUBWAY_CREATED_ON)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                .withExpenditures(TypicalExpenditures.getSubwayExpenditures()).build();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static Budget getEmptyMcDonaldsBudget() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return new BudgetBuilder().withName(MC_DONALDS_NAME)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                .withThreshold(\"100.0\").withCreatedOn(LocalDate.now().toString())"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                .withExpenditures(new ExpenditureList()).build();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "yu-ming-chen": 15,
      "wenhaogoh": 41
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalBudgets.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalBudget.KFC;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalBudget.MC_DONALDS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalBudget.SUBWAY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import seedu.address.model.Nusave;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.BudgetList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class TypicalBudgets {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final BudgetList FAST_FOOD_BUDGETS \u003d new BudgetList("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            new ArrayList\u003c\u003e(Arrays.asList("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    MC_DONALDS,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    KFC,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    SUBWAY"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            )));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private TypicalBudgets() {} // prevents instantiation"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static BudgetList getFastFoodBudgets() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        BudgetList budgetList \u003d new BudgetList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        budgetList.addToFront(TypicalBudget.getMcDonaldsBudget());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        budgetList.addToFront(TypicalBudget.getKfcBudget());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        budgetList.addToFront(TypicalBudget.getSubwayBudget());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return budgetList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Nusave getTypicalNusave() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Nusave nusave \u003d new Nusave();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        nusave.setBudgets(getFastFoodBudgets());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return nusave;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 4,
      "yu-ming-chen": 1,
      "wenhaogoh": 31
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalExpenditure.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.Expenditure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class TypicalExpenditure {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_MUFFIN_NAME \u003d \"McMuffin\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_MUFFIN_PRICE \u003d \"4.50\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_MUFFIN_CREATED_ON \u003d \"2020-10-10\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_CHICKEN_NAME \u003d \"McChicken\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_CHICKEN_PRICE \u003d \"2.00\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_CHICKEN_CREATED_ON \u003d \"2020-10-09\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_SPICY_NAME \u003d \"McSpicy\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_SPICY_PRICE \u003d \"7.00\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String MC_SPICY_CREATED_ON \u003d \"2020-10-08\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String MCDONALDS_TOTAL_PRICE \u003d \"13.50\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_ZINGER_NAME \u003d \"Zinger\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_ZINGER_PRICE \u003d \"8.00\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_ZINGER_CREATED_ON \u003d \"2020-10-07\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_CHEESE_FRIES_NAME \u003d \"Cheese Fries\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_CHEESE_FRIES_PRICE \u003d \"4.00\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_CHEESE_FRIES_CREATED_ON \u003d \"2020-10-06\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_BANDITO_NAME \u003d \"Bandito\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_BANDITO_PRICE \u003d \"6.50\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String KFC_BANDITO_CREATED_ON \u003d \"2020-10-05\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String KFC_TOTAL_PRICE \u003d \"18.50\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_COLD_CUT_TRIO_NAME \u003d \"Cold Cut Trio\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_COLD_CUT_TRIO_PRICE \u003d \"7.50\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_COLD_CUT_TRIO_CREATED_ON \u003d \"2020-10-04\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_COOKIE_NAME \u003d \"Cookie\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_COOKIE_PRICE \u003d \"1.50\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_COOKIE_CREATED_ON \u003d \"2020-10-03\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_SOUP_NAME \u003d \"Clam Chowder\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_SOUP_PRICE \u003d \"3.00\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final String SUBWAY_SOUP_CREATED_ON \u003d \"2020-10-02\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String SUBWAY_TOTAL_PRICE \u003d \"12.00\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure MC_MUFFIN \u003d new ExpenditureBuilder().withName(MC_MUFFIN_NAME)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withPrice(MC_MUFFIN_PRICE).withCreatedOn(MC_MUFFIN_CREATED_ON).build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure MC_CHICKEN \u003d new ExpenditureBuilder().withName(MC_CHICKEN_NAME)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withPrice(MC_CHICKEN_PRICE).withCreatedOn(MC_CHICKEN_CREATED_ON).build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure MC_SPICY \u003d new ExpenditureBuilder().withName(MC_SPICY_NAME)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withPrice(MC_SPICY_PRICE).withCreatedOn(MC_SPICY_CREATED_ON).build();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure KFC_ZINGER \u003d new ExpenditureBuilder().withName(KFC_ZINGER_NAME)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withPrice(KFC_ZINGER_PRICE).withCreatedOn(KFC_ZINGER_CREATED_ON).build();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure KFC_CHEESE_FRIES \u003d new ExpenditureBuilder().withName(KFC_CHEESE_FRIES_NAME)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withPrice(KFC_CHEESE_FRIES_PRICE).withCreatedOn(KFC_CHEESE_FRIES_CREATED_ON).build();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure KFC_BANDITO \u003d new ExpenditureBuilder().withName(KFC_BANDITO_NAME)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withPrice(KFC_BANDITO_PRICE).withCreatedOn(KFC_BANDITO_CREATED_ON).build();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure SUBWAY_COLD_CUT_TRIO \u003d new ExpenditureBuilder().withName(SUBWAY_COLD_CUT_TRIO_NAME)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withPrice(SUBWAY_COLD_CUT_TRIO_PRICE).withCreatedOn(SUBWAY_COLD_CUT_TRIO_CREATED_ON).build();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure SUBWAY_COOKIE \u003d new ExpenditureBuilder().withName(SUBWAY_COOKIE_NAME)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withPrice(SUBWAY_COOKIE_PRICE).withCreatedOn(SUBWAY_COOKIE_CREATED_ON).build();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final Expenditure SUBWAY_SOUP \u003d new ExpenditureBuilder().withName(SUBWAY_SOUP_NAME)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            .withPrice(SUBWAY_SOUP_PRICE).withCreatedOn(SUBWAY_SOUP_CREATED_ON).build();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure getMcMuffinExpenditure() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new ExpenditureBuilder().withName(MC_MUFFIN_NAME)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withPrice(MC_MUFFIN_PRICE).withCreatedOn(MC_MUFFIN_CREATED_ON).build();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static Expenditure getMcMuffinExpenditureWithTags() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new ExpenditureBuilder().withName(MC_MUFFIN_NAME)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                .withPrice(MC_MUFFIN_PRICE).withCreatedOn(LocalDate.now().toString())"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                .withTags(\"breakfast\", \"delicious\").build();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static Expenditure getMcMuffinExpenditureWithCurrentCreatedOn() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new ExpenditureBuilder().withName(MC_MUFFIN_NAME)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                .withPrice(MC_MUFFIN_PRICE).withCreatedOn(LocalDate.now().toString()).build();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure getMcChickenExpenditure() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new ExpenditureBuilder().withName(MC_CHICKEN_NAME)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withPrice(MC_CHICKEN_PRICE).withCreatedOn(MC_CHICKEN_CREATED_ON).build();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure getMcSpicyExpenditure() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new ExpenditureBuilder().withName(MC_SPICY_NAME)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withPrice(MC_SPICY_PRICE).withCreatedOn(MC_SPICY_CREATED_ON).build();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure getKfcZingerExpenditure() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new ExpenditureBuilder().withName(KFC_ZINGER_NAME)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withPrice(KFC_ZINGER_PRICE).withCreatedOn(KFC_ZINGER_CREATED_ON).build();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure getKfcCheeseFriesExpenditure() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new ExpenditureBuilder().withName(KFC_CHEESE_FRIES_NAME)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withPrice(KFC_CHEESE_FRIES_PRICE).withCreatedOn(KFC_CHEESE_FRIES_CREATED_ON).build();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure getKfcBanditoExpenditure() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new ExpenditureBuilder().withName(KFC_BANDITO_NAME)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withPrice(KFC_BANDITO_PRICE).withCreatedOn(KFC_BANDITO_CREATED_ON).build();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure getSubwayColdCutTrioExpenditure() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new ExpenditureBuilder().withName(SUBWAY_COLD_CUT_TRIO_NAME)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withPrice(SUBWAY_COLD_CUT_TRIO_PRICE).withCreatedOn(SUBWAY_COLD_CUT_TRIO_CREATED_ON).build();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure getSubwayCookieExpenditure() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new ExpenditureBuilder().withName(SUBWAY_COOKIE_NAME)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withPrice(SUBWAY_COOKIE_PRICE).withCreatedOn(SUBWAY_COOKIE_CREATED_ON).build();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static Expenditure getSubwaySoupExpenditure() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new ExpenditureBuilder().withName(SUBWAY_SOUP_NAME)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                .withPrice(SUBWAY_SOUP_PRICE).withCreatedOn(SUBWAY_SOUP_CREATED_ON).build();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 19,
      "yu-ming-chen": 8,
      "wenhaogoh": 99
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalExpenditureIndexes.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndex;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "import seedu.address.state.expenditureindex.ExpenditureIndexManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "public class TypicalExpenditureIndexes {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final ExpenditureIndex FIRST_EXPENDITURE \u003d new ExpenditureIndexManager(1);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final ExpenditureIndex SECOND_EXPENDITURE \u003d new ExpenditureIndexManager(2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "    public static final ExpenditureIndex THIRD_EXPENDITURE \u003d new ExpenditureIndexManager(3);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidliew9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidliew9": 10
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalExpenditures.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.KFC_BANDITO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.KFC_CHEESE_FRIES;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.KFC_ZINGER;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.MC_CHICKEN;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.MC_MUFFIN;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.MC_SPICY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.SUBWAY_COLD_CUT_TRIO;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.SUBWAY_COOKIE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static seedu.address.testutil.TypicalExpenditure.SUBWAY_SOUP;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import seedu.address.model.expenditure.ExpenditureList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class TypicalExpenditures {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final ExpenditureList MC_DONALDS_EXPENDITURES \u003d new ExpenditureList("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            new ArrayList\u003c\u003e(Arrays.asList("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    MC_MUFFIN,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    MC_CHICKEN,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    MC_SPICY"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            )));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final ExpenditureList KFC_EXPENDITURES \u003d new ExpenditureList("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            new ArrayList\u003c\u003e(Arrays.asList("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    KFC_ZINGER,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    KFC_CHEESE_FRIES,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    KFC_BANDITO"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            )));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static final ExpenditureList SUBWAY_EXPENDITURES \u003d new ExpenditureList("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            new ArrayList\u003c\u003e(Arrays.asList("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    SUBWAY_COLD_CUT_TRIO,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    SUBWAY_COOKIE,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    SUBWAY_SOUP"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            )));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private TypicalExpenditures() {} // prevents instantiation"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static ExpenditureList getMcDonaldsExpenditures() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        ExpenditureList expenditureList \u003d new ExpenditureList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditureList.addToFront(TypicalExpenditure.getMcMuffinExpenditure());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditureList.addToFront(TypicalExpenditure.getMcChickenExpenditure());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditureList.addToFront(TypicalExpenditure.getMcSpicyExpenditure());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return expenditureList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static ExpenditureList getKfcExpenditures() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        ExpenditureList expenditureList \u003d new ExpenditureList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditureList.addToFront(TypicalExpenditure.getKfcZingerExpenditure());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditureList.addToFront(TypicalExpenditure.getKfcCheeseFriesExpenditure());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditureList.addToFront(TypicalExpenditure.getKfcBanditoExpenditure());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return expenditureList;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static ExpenditureList getSubwayExpenditures() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        ExpenditureList expenditureList \u003d new ExpenditureList();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditureList.addToFront(TypicalExpenditure.getSubwayColdCutTrioExpenditure());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditureList.addToFront(TypicalExpenditure.getSubwayCookieExpenditure());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        expenditureList.addToFront(TypicalExpenditure.getSubwaySoupExpenditure());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return expenditureList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 1,
      "yu-ming-chen": 1,
      "wenhaogoh": 64
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalIndexes.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class containing a list of {@code Index} objects to be used in tests."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class TypicalIndexes {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidliew9"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "davidliew9": 1,
      "-": 12
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalState.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sogggy"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import static seedu.address.model.budget.Threshold.NO_THRESHOLD_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.model.budget.Threshold;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.Page;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.State;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndex;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.BudgetIndexManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sogggy"
        },
        "content": "import seedu.address.state.budgetindex.EmptyBudgetIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sogggy"
        },
        "content": "public class TypicalState {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final BudgetIndex MAIN_PAGE_BUDGET_INDEX \u003d new EmptyBudgetIndex();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final BudgetIndex MCDONALDS_BUDGET_INDEX \u003d new BudgetIndexManager(0);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final BudgetIndex KFC_BUDGET_INDEX \u003d new BudgetIndexManager(1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final BudgetIndex SUBWAY_BUDGET_INDEX \u003d new BudgetIndexManager(2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final Page ENUM_PAGE_MAIN \u003d Page.MAIN;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final Page ENUM_PAGE_BUDGET \u003d Page.BUDGET;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String MAIN_PAGE_TITLE \u003d \"NUSave\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String MCDONALDS_PAGE_TITLE \u003d \"McDonalds\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String KFC_PAGE_TITLE \u003d \"KFC\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String SUBWAY_PAGE_TITLE \u003d \"Subway\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final Threshold MAIN_THRESHOLD_VALUE \u003d new Threshold(NO_THRESHOLD_MESSAGE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final Threshold MCDONALDS_THRESHOLD_VALUE \u003d new Threshold(\"150\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final String MCDONALDS_EXPENDITURE_VALUE \u003d \"100\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final State TYPICAL_MAIN_PAGE_STATE \u003d new StateBuilder().withBudgetIndex(MAIN_PAGE_BUDGET_INDEX)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            .withCurrentPage(ENUM_PAGE_MAIN).withPageTitle(MAIN_PAGE_TITLE).build();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final State MCDONALDS_BUDGET_PAGE_STATE \u003d new StateBuilder().withBudgetIndex(MCDONALDS_BUDGET_INDEX)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            .withCurrentPage(ENUM_PAGE_BUDGET).withPageTitle(MCDONALDS_PAGE_TITLE).build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final State KFC_BUDGET_PAGE_STATE \u003d new StateBuilder().withBudgetIndex(KFC_BUDGET_INDEX)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            .withCurrentPage(ENUM_PAGE_BUDGET).withPageTitle(KFC_PAGE_TITLE).build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static final State SUBWAY_BUDGET_PAGE_STATE \u003d new StateBuilder().withBudgetIndex(SUBWAY_BUDGET_INDEX)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sogggy"
        },
        "content": "            .withCurrentPage(ENUM_PAGE_BUDGET).withPageTitle(SUBWAY_PAGE_TITLE).build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    private TypicalState() {} // prevents instantiation"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static State getTypicalMainPageState() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new StateBuilder().withBudgetIndex(new EmptyBudgetIndex())"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                .withCurrentPage(Page.MAIN).withPageTitle(\"NUSave\").build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static State getMcdonaldsBudgetPageState() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new StateBuilder().withBudgetIndex(new BudgetIndexManager(0))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                .withCurrentPage(Page.BUDGET).withPageTitle(\"McDonalds\").build();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static State getKfcBudgetPageState() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new StateBuilder().withBudgetIndex(new BudgetIndexManager(1))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                .withCurrentPage(Page.BUDGET).withPageTitle(\"KFC\").build();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sogggy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    public static State getSubwayBudgetPageState() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sogggy"
        },
        "content": "        return new StateBuilder().withBudgetIndex(new BudgetIndexManager(2))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sogggy"
        },
        "content": "                .withCurrentPage(Page.BUDGET).withPageTitle(\"Subway\").build();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sogggy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sogggy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sogggy": 64
    }
  }
]
