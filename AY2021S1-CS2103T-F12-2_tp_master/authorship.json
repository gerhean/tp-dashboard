[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "[![CI Status](https://github.com/AY2021S1-CS2103T-F12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S1-CS2103T-F12-2/tp/actions)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "![Ui](docs/images/Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "StudyBananas is a **desktop study companion app that helps students centralize all their study tasks and set up focused study sessions in one place, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "For detailed documentation of this project, refer to the [StudyBananas Website](https://ay2021s1-cs2103t-f12-2.github.io/tp/)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "## About Us"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "For details on our project team members, do check out the [AboutUs](https://github.com/AY2021S1-CS2103T-F12-2/tp/blob/master/docs/AboutUs.md) page."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "## User Guide"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Curious to know how to use StudyBananas? We\u0027ve got you! You may refer to the [User Guide](https://github.com/AY2021S1-CS2103T-F12-2/tp/blob/master/docs/UserGuide.md) for more details."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "## Developer Guide"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "If you would like to contribute to this project, do head over to [Developer Guide](https://github.com/AY2021S1-CS2103T-F12-2/tp/blob/master/docs/DeveloperGuide.md) to get started!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "## Acknowledgments"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "This project is morphed from the AddressBook-Level3 project, created by the [SE-EDU initiative](https://se-education.org)."
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 16,
      "-": 3
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: About Us"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "You may reach us through the following email addresses:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "* Joe Teddy Yosua Sanjaya: joe.teddy@u.nus.edu"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "* Yu Bowei: e0425419@u.nus.edu"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "* Eddy Chu: e0418218@u.nus.edu"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "* Ngo Duc Binh: e0271216@u.nus.edu"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "* Petrick Jerico Gustendi: e0425802@u.nus.edu"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "## Project team"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### Joe Teddy Yosua Sanjaya"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cimg src\u003d\"images/cupofjoee.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "[[github](https://github.com/cupofjoee)]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "[[portfolio](team/joeteddy.md)]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "* Responsibilities: Dev Ops"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "### Yu Bowei"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cimg src\u003d\"images/bowei-yu.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "[[github](http://github.com/bowei-yu)]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "[[portfolio](team/yubowei.md)]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "* Responsibilities: UI"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "### Eddy Chu"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cimg src\u003d\"images/chuyiting.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "[[github](http://github.com/chuyiting)] "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "[[portfolio](team/eddychu.md)]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* Responsibilities: Data"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "### Ngo Duc Binh"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cimg src\u003d\"images/ducbinh2611.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "[[github](http://github.com/ducbinh2611)]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "[[portfolio](team/ducbinh.md)]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "* Responsibilities: Dev Ops + Threading"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "### Petrick Jerico Gustendi"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "\u003cimg src\u003d\"images/petrickjerico.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "[[github](http://github.com/petrickjerico)]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "[[portfolio](team/petrickjerico.md)]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "* Responsibilities: UI"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 3,
      "petrickjerico": 9,
      "cupofjoee": 9,
      "bowei-yu": 6,
      "chuyiting": 3,
      "-": 36
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: Developer Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## **Setting up, getting started**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide [_Setting up and getting started_](SettingUp.md)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "## **Design**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "### Architecture"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup methods where necessary."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`UI`**](#ui-component): The UI of the App."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`Logic`**](#logic-component): The command executor."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`Model`**](#model-component): Holds the data of the App in memory."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* defines its *API* in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "![Class Diagram of the Logic Component](images/LogicClassDiagram.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "**How the architecture components interact with each other**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "### UI component"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the UI Component](images/UiClassDiagram.png)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "**API** :"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "### Logic component"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Logic Component](images/LogicClassDiagram.png)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "**API** :"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "1. `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "1. This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "1. The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "### Model component"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Model Component](images/ModelClassDiagram.png)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user’s preferences."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the address book data."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "![BetterModelClassDiagram](images/BetterModelClassDiagram.png)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "### Storage component"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Storage Component](images/StorageClassDiagram.png)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the address book data in json format and read it back."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "### Common classes"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "## **Implementation**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "### \\[Proposed\\] Undo/redo feature"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "#### Proposed Implementation"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` — Saves the current address book state in its history."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` — Restores the previous address book state from its history."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState0](images/UndoRedoState0.png)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState1](images/UndoRedoState1.png)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState2](images/UndoRedoState2.png)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState3](images/UndoRedoState3.png)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "than attempting to perform the undo."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoSequenceDiagram](images/UndoSequenceDiagram.png)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState4](images/UndoRedoState4.png)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState5](images/UndoRedoState5.png)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "![CommitActivityDiagram](images/CommitActivityDiagram.png)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "#### Design consideration:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "##### Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "  * Pros: Easy to implement."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "  * Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "  itself."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "  * Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "_{more aspects and alternatives to be added}_"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "### \\[Proposed\\] Data archiving"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data archiving feature will be implemented}_"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "## **Documentation, logging, testing, configuration, dev-ops**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "* [Documentation guide](Documentation.md)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "* [Testing guide](Testing.md)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "* [Logging guide](Logging.md)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "* [Configuration guide](Configuration.md)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "* [DevOps guide](DevOps.md)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "## **Appendix: Requirements**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "### Product scope"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "**Target user profile**:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* is a student, at upper secondary or tertiary education level"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* has a need to keep track of study tasks and test their understanding of what is learnt"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing to mouse interactions"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**Value proposition**: "
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* manage study tasks and test learnt knowledge faster than a typical mouse/GUI driven app"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* centralize all study tasks and set up focused study sessions in one place"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "### User stories"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| Priority | As a …                                                         | I want to …                                                                                 | So that I can…                                                                     |"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "| -------- | -------------------------------------------------------------- | ------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- |"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* * *`  | Student                                                        | take advantage of the flashcard learning technique                                          | memorize important facts/parts of the notes more efficiently and organizedly.      |"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* * *`  | Learner who takes advantage of flashcard learning              | be able to create custom flashcards                                                         | store my notes in the form of flashcards which optimises my flashcard learning.    |"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* * *`  | User                                                           | delete my flashcards which are no longer in use                                             | manage my own flashcards.                                                          |"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* * *`  | Student who learns by tests                                    | test myself                                                                                 | learn more effectively.                                                            |"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* * *`  | Hard-working flashcard-learning user                           | create tests with the flashcard notes created by myself                                     | see how good my learning outcome is.                                               |"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* * *`  | User who learns by quizzing his/herself a lot                  | look back on my quiz attempts                                                               | evaluate how much more efforts I need to put in the section.                       |"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* * *`  | Student who regularly revises my concepts using flashcards     | see the detailed answering history for my past quiz attempts                                | evaluate which concepts are still unclear to me and spend more time on those.      |"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* * *`  | Student who regularly revises my concepts using flashcards     | see my quiz statistics                                                                      | know which part I do well and where I need improvement on in an objective manner.  |"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* * *`  | Student who has tons of homework and exams                     | have a to-do list that organizes my study plan                                              | plan my schedule more effectively.                                                 |"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* * *`  | Student who has a lot of homework and assignments              | create a homework to-do list                                                                | keep track of what tasks I need to complete.                                       |"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* * *`  | Student who frequently forgets my own homework and assignments | list out all the homework                                                                   | view what to do.                                                                   |"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "| `* * *`  | Student who wants to look up certain homework and assignments  | search or filter the list of homeworks and assignments                                      | see the information for a specific homework.                                       |"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* *`    | Savvy learner who wishes to track my study sessions            | schedule my study plan                                                                      | play myself more effectively.                                                      |"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* *`    | Savvy learner who wishes to track my study sessions            | put my todo task in my schedule                                                             | plan my todo tasks more organizedly without missing any deadlines.                 |"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* *`    | Extremely organised learner                                    | have a timer which runs during the scheduled period of time                                 | make the best use of my time                                                       |"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `* *`    | Student who organises the schedule carefully                   | leave feedback for each of my study session                                                 | know my learning efficiency during each session and make my new plans based on it. |"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "| `*`      | Super busy student                                             | have AI to schedule my todo lists based on my past studying statistics automatically for me | rely on the AI to make the best use of my time.                                    |"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "*{More to be added}*"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "### Use cases"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "(For all use cases below, the **System** is the `StudyBananas` and the **Actor** is the `user`, unless specified otherwise)  "
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC01 create a set of flashcards"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**MSS:**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "1. User adds a new empty set of flashcards with a given name."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "2. User \u003cins\u003e UC02 create and add an individual flashcard into a set \u003c/ins\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "3. Repeat 2 until all flashcards for the set are added."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**Extensions:**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- 1a. Missing parameter - empty set name. "
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   * a1. StudyBananas shows a missing parameter error message"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "      Use case ends"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC02 Create and add an individual flashcard into a set"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**MSS:**"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "1. User defines the question and answer of the flashcard."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "2. User \u003cins\u003e UC03 see all existing flashcard sets \u003c/ins\u003e"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "3. User adds the flashcard to the set using the flashcard set index"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**Extensions:**"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 1a. Missing parameter - question, answer or index of the flashcard set."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   * a1. Shows missing parameter error message."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "      Use case ends"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC03 see all existing flashcard sets"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "1. User requests for the list of flashcards"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "2. StudyBananas shows the list of flashcards"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC04 delete a flashcard set"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**MSS:**"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "1. User \u003cins\u003e UC03 see all existing flashcard sets \u003c/ins\u003e"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "2. User enters the index to delete the set."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " "
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**Extensions**:"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 1a. There are no existing flashcard sets"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 2a. Invalid index"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "  * a1. StudyBananas shows an error message"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    Use case ends"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    "
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC05 see all flashcards in a flashcard set"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**MSS**:"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "1. User \u003cins\u003e UC03 see all existing flashcard sets \u003c/ins\u003e"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "2. User requests for the list of flashcards using a given flashcard set index"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "3. StudyBananas shows the list of flashcards for the requested flashcard set"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**Extensions**:"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 1a. Flashcard set is not present at entered index"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* a1. StudyBananas shows an error to indicate the invalid index"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC06 delete an individual flashcard from a set    "
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**MSS**:"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "1. User \u003cins\u003e UC05 see all flashcards in a set. \u003c/ins\u003e"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "2. User enter the index of the set and the individual flashcard to delete it."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**Extensions**:"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 1a. The list is empty."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 2a. The given index is invalid."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    * a1. StudyBanana shows an error message."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   Use case resumes at step 2."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC07 quiz of flashcard set (no storage of answer)"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "1. User requests a quiz of a given flashcard set"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "2. StudyBananas shows the first question in the flashcard set"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "3. User manually answers the question"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "4. User flips the flashcard to check the answer"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "5. User indicates whether the input answer is correct or incorrect"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "6. StudyBananas loads the next flashcard"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   Step 2 - 6 are repeated until reaching the end of the flashcard set, or the User wants to stop the quiz halfway."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "   Use case ends.  "
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    "
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "* 2a. The flashcard set is empty."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  Use case ends."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "* 2b. The flashcard set does not exist."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  StudyBanana shows an error message.  "
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "* 5a. The answer indicator is invalid"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "  StudyBanana shows an error message. User case resumes at step 5."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* *a. At any time, User chooses to cancel the quiz."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   * *a1. StudyBananas requests to confirm the cancellation."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   * *a2. User confirms the cancellation."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   Use case ends."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC08 quiz of flashcard set (with storage of answer)"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "1. User requests a quiz of a given flashcard set"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "2. StudyBananas shows the first question in the flashcard set"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "3.  User keys in their answer to the question"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "4.  User flips the flashcard to check the answer"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "5.  User indicates whether the input answer is correct or incorrect"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "6. StudyBananas stores the answer to each question and whether the answer was correct"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "7.  StudyBananas loads the next flashcard"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    Step 2 - 6 are repeated until reaching the end of the flashcard set, or the User wants to stop the quiz halfway."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends.  "
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 2a. The flashcard set is empty."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "  Use case ends."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 2b. The flashcard set does not exist."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "  StudyBanana shows an error message.  "
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 5a. The answer indicator is invalid"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "  StudyBanana shows an error message. User case resumes at step 5."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* *a. At any time, User chooses to cancel the quiz."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    * *a1. StudyBananas requests to confirm the cancellation."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    * *a2. User confirms the cancellation."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC09 add a task to the task list"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "1.  User requests to add a new task to the list."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "2.  Study Bananas asks for confirmation."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "3.  User confirms it."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "4.  Study Bananas adds the task to the task list."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     Use case ends"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 2a. User disconfirms the request."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   * a1. Study Bananas stops the process. "
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    Use case ends"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* *a. Cancellation"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   * a1. User asks for cancellation of current command."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    Use case ends"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    "
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC10 delete a task"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "1. The user requests to delete a certain task."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "2. The system asks for confirmation."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "3. The user confirms it."
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "4. The system deletes the task."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "  Use case ends"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 2a. Disconfirmation"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 2a1. User disconfirms it."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 2a2. System stops implementation."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   Use case ends"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 3a. Invalid task specified"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    * 3a1. System signals to the user that the task is invalid"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    Use case ends"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* *a. Cancellation"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   * a1. User asks for cancellation of current command."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    Use case ends"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC11 search for tasks"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "1. The user requests to search for tasks."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "2. The system asks for query key."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "3. The user types in the query key."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "4. The system replies with all the tasks that matched the query key."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   Use case ends"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* *a. Cancellation"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   * *a1. User asks for cancellation of current command."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC12 view all tasks"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**MSS**:"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "1. User requests to view all the tasks"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "2. StudyBananas shows all the tasks."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "#### Use case: UC13 view quiz score and past attempt"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**MSS**:"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "1. User requests to \u003cins\u003e UC03 see all available flashcard sets \u003c/ins\u003e"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "2. User requests for the score and past attempt of a quiz regarding a flashcard set using a given flashcard set index"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "3. StudyBananas shows the score and most recent past attempt for the requested flashcard set"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   Use case ends"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**Extensions**:"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 2a. Flashcard set is not present at entered index"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   * a1. StudyBananas shows an error to indicate the invalid index"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* 3a. Flashcard set has not been quizzed yet"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "   * a1. StudyBananas shows an error to indicate that flashcard set has not been quizzed"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "### Non-Functional Requirements"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "2.  Should work without requiring an installer."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "3.  The system should work on  64-bit environment."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "4.  The product should be for a single user."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "5.  The product should be usable by a student who has little to much experience in using computer."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "6.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "7.  The data should be stored locally and should be in a human editable text file. "
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "### Glossary"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "* **Mainstream OS**: Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "## **Appendix: Instructions for manual testing**"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "testers are expected to do more *exploratory* testing."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "### Launch and shutdown"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "1. Initial launch"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "1. Saving window preferences"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "       Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "1. _{ more test cases …​ }_"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "### Deleting a person"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "1. Deleting a person while all persons are being shown"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list."
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Test case: `delete 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Test case: `delete 0`\u003cbr\u003e"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "1. _{ more test cases …​ }_"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "### Saving data"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "1. Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "1. _{ more test cases …​ }_"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 20,
      "petrickjerico": 2,
      "bowei-yu": 155,
      "chuyiting": 23,
      "-": 330
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: User Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "StudyBananas is a **desktop study companion app that helps students centralize all their study tasks and sets up focused study sessions into one place, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- [**Quick start**](#quick-start)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- [**Features**](#features)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Viewing help: `help`](#viewing-help-help)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Exit program: `exit`](#exit-program-exit)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Add a flashcard set: `add flset`](#add-a-flashcard-set-add-flset)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [List all existing flashcard sets: `list flset`](#list-all-existing-flashcard-sets-list-flset)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Delete a flashcard set: `delete flset`](#delete-a-flashcard-set-delete-flset)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Add a flashcard into a flashcard set: `add fl`](#add-a-flashcard-into-a-flashcard-set-add-fl)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [List flashcards in a flashcard set: `list fl`](#list-flashcards-in-a-flashcard-set-list-fl)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Delete a flashcard in a flashcard set: `delete fl`](#delete-a-flashcard-in-a-flashcard-set-delete-fl)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Quiz of flashcard set: `quiz flset`](#quiz-of-flashcard-set-quiz-flset)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    + [Case 1: No storage of answers required](#case-1-no-storage-of-answers-required)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "    + [Case 2: Stores the user answers to the quiz](#case-2-stores-the-user-answers-to-the-quiz)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [View last quiz attempt: `view flset quiz`](#view-last-quiz-attempt-view-flset-quiz)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Add a task: `ask task`](#add-a-task)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [List tasks: `list task`](#list-tasks)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Delete a task: `delete task`](#delete-a-task)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Search for a task: `search task`](#search-for-a-task)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Saving the data](#saving-the-data)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Archiving data files `[coming in v2.0]`](#archiving-data-files-coming-in-v20)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- [**FAQ**](#faq)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- [**Command summary**](#command-summary)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [General commands](#general-commands)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Flashcard commands](#flashcard-commands)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Quiz commands](#quiz-commands)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  * [Task list commands](#task-list-commands)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "2. Download the latest `study-bananas.jar` from [here]()."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "3. Copy the file to the folder you want to use as the _home folder_ for your StudyBananas."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Ui](images/Ui.png)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   Some example commands you can try:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "   * **`list`**`flset` : Lists all flashcard sets"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "   * **`add`**`flset Chemistry` : Add a new empty set with name `Chemistry`."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "   * **`delete`**`flset:3` : Deletes the 3rd flashcard set in the current list of flashcard sets."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "   * **`add`**`task:Do CS2100 tutorial question` : Adds Doing CS2100 task to the task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   * **`exit`** : Exits the app."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "6. Refer to the [Features](#features) below for details of each command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "**Notes about the command format:**\u003cbr\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "* Words wrapped with angled brackets `\u003c\u003e` are the parameters to be supplied by the user.\u003cbr\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "  e.g. in `add flset:\u003csetname\u003e`, `\u003csetname\u003e` is a parameter which can be used as `add flset:Chemistry`."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "* Words wrapped with square brackets `[]` are optional parameters to be supplied by the user.\u003cbr\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "  e.g. in `add task:\u003cdescription\u003e t:[time]`, `[time]` is an optional parameter."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "* Parameters can be in any order.\u003cbr\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "  e.g. if the command specifies `flset:\u003csetindex\u003e q:\u003cquestion\u003e a:\u003canswer\u003e`, `a:\u003canswer\u003e q:\u003cquestion\u003e flset:\u003csetindex\u003e` is also acceptable."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### **Viewing help**: `help`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "Lists all available commands."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### **Exit program**: `exit`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "Exits the program"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### **Add a flashcard set**: `add flset`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "Adds a new flashcard set."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "Format: `add flset:\u003csetname\u003e​`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `\u003csetname\u003e` can accept names separated with spaces."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- if `\u003csetname\u003e` is already used, the app will request a new `\u003csetname\u003e`."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `add flset:Japanese`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `add flset:Economics – Micro`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### **List all existing flashcard sets**: `list flset`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "Shows all existing flashcard sets - index and name."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "Format: `list flset`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### **Delete a flashcard set**: `delete flset`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "Deletes an existing flashcard set and all flashcards that it contains."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "Format: `delete flset:\u003csetindex\u003e`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `\u003csetindex\u003e` should be a positive integer."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- `\u003csetindex\u003e` will throw an error if `setindex` does not exist."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `delete flset:1`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `delete flset:2`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### **Add a flashcard into a flashcard set**: `add fl`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "Adds a single flashcard with a question and an answer in a specified flashcard set."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "Format:` add flset:\u003csetindex\u003e q:\u003cquestion\u003e a:\u003canswer\u003e`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `\u003cquestion\u003e`, `\u003canswer\u003e` and `\u003csetindex\u003e` fields are compulsory."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `\u003cquestion\u003e` and `\u003canswer\u003e` can accept strings that are capitalized or separated with spaces."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `\u003csetindex\u003e` should be a positive integer."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- `\u003csetindex\u003e` will throw an error if `setindex` does not exist."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `add flset:1 q:konnichiwa a:hello `"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `add flset:2 q:When demand goes up, what happens to price? a:Price increases`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### **List flashcards in a flashcard set**: `list fl`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "Shows the list of flashcards with details: question, answer and index."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "Format: `list fl:\u003csetindex\u003e`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `\u003csetindex\u003e` should be a positive integer."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- `\u003csetindex\u003e` will throw an error if `setindex` does not exist."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `list flset:1`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `list flset:2`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### **Delete a flashcard in a flashcard set**: `delete fl`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "Deletes a single flashcard in a specified flashcard set."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "Format: `delete flset:\u003csetindex\u003e fl:\u003cindex\u003e`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `\u003csetindex\u003e` and `\u003cindex\u003e` fields are compulsory."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `\u003csetindex\u003e` and `\u003cindex\u003e` should be a positive integer."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `\u003csetindex\u003e` and `\u003cindex\u003e` will throw an error if either does not exist."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "- `delete flset:1 fl:3`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### **Quiz of flashcard set**: `quiz flset`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Shows the questions of the specific flashcard set. Depending on the user command, it may prompt for answers to store them for reference in the last attempt. Follow-up commands are required to continue with the quiz."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "#### **CASE 1**: No storage of answers required"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "Format: `quiz flset:\u003csetindex\u003e`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "`quiz flset:2`, `quiz flset:3`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "As seen below, the first question of the first flashcard within the flashcard set appears, as well as a prompt for the user to type in the next command, `flip` or `cancel`."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- `flip`: Displays the answer to the flashcard question."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- `cancel`: Stops the quiz "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "\u003cimg src\u003d\"images/question.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "If the command entered is `flip`, the correct answer will be displayed, and there will be a prompt to enter the next command, `c`, `w` or `cancel`.  "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Based on the correct answer displayed, evaluate the answer provided. If the question is answered correctly, type `c`. Else, type `w`. This will be taken into account when tabulating the quiz score."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- `c`: Indicate that the question on the flashcard is answered correctly."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- `w`: Indicates that the question is answered wrongly."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- `cancel`: Stops the quiz"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "\u003cimg src\u003d\"images/answer.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "The next question of the next flashcard will be displayed. Steps 1-2 are repeated until all flashcards in the set are displayed and answered."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Once the quiz stops, the score will be displayed. This score can be viewed when viewing the last attempt of the flashcard set."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "#### **CASE 2**: Stores the user answers to the quiz"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "Format: `quiz flset store:\u003csetindex\u003e`  "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "`quiz flset store:1`, `quiz flset store:5`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "As seen below, the first question of the first flashcard within the flashcard set appears, as well as a prompt for the user to type in the answer to the question, or cancel, \u003canswer\u003e or cancel."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- `\u003canswer\u003e`: Displays the answer to the flashcard question."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- `cancel`: Stops the quiz "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "\u003cimg src\u003d\"images/question.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "If the user enters the `\u003canswer\u003e`, the correct answer to the question will be displayed, and there will be a prompt to enter the next command, `c`, `w` or `cancel`.  "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Based on the correct answer displayed, evaluate the answer provided. If the question is answered correctly, type `c`. Else, type `w`. This will be taken into account when tabulating the quiz score."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- `c`: Indicate that the question on the flashcard is answered correctly."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- `w`: Indicates that the question is answered wrongly."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- `cancel`: Stops the quiz"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "\u003cimg src\u003d\"images/saved answer.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "The next question of the next flashcard will be displayed. Steps 1-2 are repeated until all flashcards in the set are displayed and answered."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Once the quiz stops, the score and answers will be displayed. Both information can be viewed when viewing the last attempt of the flashcard set."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "### **View last quiz attempt**: `view flset quiz`"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Shows the last attempt of a specific flashcard set."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "It comprises of the following information:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- Score (percentage out of 100%), and"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- List of questions each followed by answers from the last attempt"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "- Indicators of whether the question is answered correctly (shown as tick and cross) beside each question"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "\u003cimg src\u003d\"images/view score.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Format: `view flset quiz:\u003csetindex\u003e`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "`view flset quiz:9`, `view flset quiz:16`"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "### **Add a task**: `add task`"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "Adds a study task to the task list.  "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "  "
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "Format: `add task:\u003cdescription\u003e t:[time]`"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- `\u003cdescription\u003e` field is compulsory."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- `\u003cdescription\u003e` can accept strings that are capitalized or separated with spaces."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- `[time]` field is optional if the user wants to set a deadline or time limit for the task."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "- `add task Do CS2100 tutorial questions`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "- `add task CS2103T iP submission t:17/09/2020 23:59`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "### **List tasks**: `list task`"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "Shows a list of all the added study tasks.  "
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "Format: `list task`"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- `list task`"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "### **Delete a task**: `delete task`"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "Deletes the specified task from the study bananas.  "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "Format: `delete task:\u003cindex\u003e`  "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "- Deletes the task at the specified index."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "- The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "- The index must be a positive integer 1, 2, 3, …​"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "### **Search for a task**: `search task`"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "Finds the tasks of which information contains any of the given keywords.  "
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "Format: `search task:\u003ckeyword\u003e`"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "Basic Usage: "
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- The search is case-insensitive. e.g. `homework` will match `Homework`."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- The order of the keywords does not matter. e.g. `CS2103T topics` will match `topics CS2103T`."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- Start_time, period and name of the tasks are all searched."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- Partial word would match e.g. `CS2013` matches `CS2103T`."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "Advanced Usage:"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- `or` search: Tasks matching at least one keyword will be returned e.g. `CS2103T`, `CS2101`, `ST2334` will return `CS2103T homework`, `CS2101 homework`, and `ST2334 homework`. "
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "- `and` search (search is and search by default): Tasks matching all the keywords will be returned e.g. `CS2103t week 7` will return `CS2103T homework week 7`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "Examples: \u003cbr /\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "`search CS2103t` \u003cbr /\u003e"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "returns `CS2103T topics quiz week 7` and `CS2103T topics quiz week 8` \u003cbr /\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "`or search CS2103t CS2101`  \u003cbr /\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "returns `CS2103t topics quiz week 7` and `CS2101 OP1`"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### **Saving the data**"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "StudyBananas data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "### Archiving data files `[coming in v2.0]`"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "_{explain the feature here}_"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another Computer?\u003cbr\u003e"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "ducbinh2611"
        },
        "content": "**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous StudyBananas home folder."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### General commands"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| Action               | Format, Examples |"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "| -------------------- | ---------------- |"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **Viewing Help**     | `help`           |"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **Exit application** | `exit`           |"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### Flashcard commands"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| Action                                 | Format, Examples                                                                                                                         |"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "| -------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- |"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **Add flashcard set**                  | `add flset:\u003csetname\u003e` \u003cbr\u003e e.g., `add flset:Japanese`                                                                                    |"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **List all flashcard sets**            | `list flset` \u003cbr\u003e                                                                                                                        |"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **Delete flashcard set**               | `delete flset:\u003csetindex\u003e` \u003cbr\u003e  e.g., `delete flset:1`                                                                                   |"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **Add flashcard in a specified set**   | `add flset:\u003csetindex\u003e q:\u003cquestion\u003e a:\u003canswer\u003e` \u003cbr\u003e e.g., `add flset:2 q:When demand goes up, what happens to price? a:Price increases.` |"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **List flashcards in a specified set** | `list flset:\u003csetindex\u003e` \u003cbr\u003e e.g., `list fl:1`                                                                                           |"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **Delete flashcard in specified set**  | `delete flset:\u003csetindex\u003e fl:\u003cindex\u003e` \u003cbr\u003e e.g., `delete flset:1 fl:1`                                                                    |"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### Quiz commands"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| Action                           | Format, Examples                                                                        |"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "| -------------------------------- | --------------------------------------------------------------------------------------- |"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **Quiz flset (without storage)** | `quiz flset:\u003csetindex\u003e` \u003cbr\u003e e.g., `quiz flset:7`, `flip`, `c/w`, `cancel`              |"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **Quiz flset (with storage)**    | `quiz flset store:\u003csetindex\u003e` \u003cbr\u003e e.g., `quiz flset store:10`, `flip`, `c/w`, `cancel` |"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **View flset**                   | `view flset quiz:\u003csetindex\u003e` \u003cbr\u003e  e.g., `view flset quiz:6`                            |"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "### Task list commands"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| Action              | Format, Examples                                                                                                                           |"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "| ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------ |"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **Add task**        | `add task:\u003cdescription\u003e t:\u003ctime\u003e` \u003cbr\u003e e.g., `add task:Do CS2100 tutorial questions`, `add task:CS2103T iP submission t: 17/09/2020 23:59` |"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **List tasks**      | `list task` \u003cbr\u003e                                                                                                                           |"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **Delete task**     | `delete task:\u003cindex\u003e` \u003cbr\u003e  e.g., `delete task:6`                                                                                          |"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "| **Search for task** | `search task:\u003ckeywords\u003e` or `search \u003ckeywords\u003e` \u003cbr\u003e e.g., `search task:CS2103T` or `search CS2103T`                                       |"
      }
    ],
    "authorContributionMap": {
      "ducbinh2611": 65,
      "cupofjoee": 108,
      "petrickjerico": 7,
      "bowei-yu": 53,
      "chuyiting": 33,
      "-": 100
    }
  },
  {
    "path": "docs/index.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "title: StudyBananas"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "[![CI Status](https://github.com/AY2021S1-CS2103T-F12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S1-CS2103T-F12-2/tp/actions)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "[![codecov](https://codecov.io/gh/AY2021S1-CS2103T-F12-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S1-CS2103T-F12-2/tp)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![Ui](images/Ui.png)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "**StudyBananas is a desktop study companion app that helps students centralize all their study tasks and set up focused study sessions in one place**. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* If you are interested in using StudyBananas, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "* If you are interested about developing StudyBananas, the [**Developer Guide**](DeveloperGuide.html) is a good place to start."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "**Acknowledgments**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "* This project is morphed from the AddressBook-Level3 project, created by the [SE-EDU initiative](https://se-education.org)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 5,
      "bowei-yu": 4,
      "-": 12
    }
  },
  {
    "path": "docs/team/petrickjerico.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "title: Petrick Jerico\u0027s Project Portfolio Page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "## Project: StudyBananas"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "StudyBananas is a **desktop study companion app that helps students centralize all their study tasks and set up focused study sessions into one place, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "Given below are my contributions to the project (to be updated)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "* **New Feature**:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "* **Code contributed**:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* **Project management**:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* **Enhancements to existing features**:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* **Documentation**:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* **Community**:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* **Tools**:"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 6,
      "-": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Version.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a version with major, minor and patch number"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Version implements Comparable\u003cVersion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int major;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int minor;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final int patch;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean isEarlyAccess;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code Version} with the given version details."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public Version(int major, int minor, int patch, boolean isEarlyAccess) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.major \u003d major;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.minor \u003d minor;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.patch \u003d patch;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isEarlyAccess \u003d isEarlyAccess;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getMajor() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return major;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getMinor() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return minor;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getPatch() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return patch;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isEarlyAccess() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return isEarlyAccess;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a version number string in the format V1.2.3."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param versionString version number string"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a Version object"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Version fromString(String versionString) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!versionMatcher.find()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Version(Integer.parseInt(versionMatcher.group(1)),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                Integer.parseInt(versionMatcher.group(2)),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                Integer.parseInt(versionMatcher.group(3)),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                versionMatcher.group(4) !\u003d null);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonValue"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public int compareTo(Version other) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        if (major !\u003d other.major) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            return major - other.major;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        if (minor !\u003d other.minor) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            return minor - other.minor;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        if (patch !\u003d other.patch) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            return patch - other.patch;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isEarlyAccess) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d null) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof Version)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        final Version other \u003d (Version) obj;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return compareTo(other) \u003d\u003d 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isEarlyAccess) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            hash \u003d \"1\" + hash;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        return Integer.parseInt(hash);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 1,
      "-": 115
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/index/Index.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core.index;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a zero-based or one-based index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * base the other component is using for its index. However, after receiving the {@code Index}, that component can"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * convert it back to an int if the index will not be passed to a different component again."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Index {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final int zeroBasedIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Index can only be created by calling {@link Index#fromZeroBased(int)} or"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link Index#fromOneBased(int)}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Index(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        if (zeroBasedIndex \u003c 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.zeroBasedIndex \u003d zeroBasedIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getZeroBased() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        return zeroBasedIndex;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getOneBased() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return zeroBasedIndex + 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new {@code Index} using a zero-based index."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index fromZeroBased(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Index(zeroBasedIndex);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new {@code Index} using a one-based index."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index fromOneBased(int oneBasedIndex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Index(oneBasedIndex - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof Index // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 1,
      "-": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/JsonUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonAutoDetect;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.PropertyAccessor;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.core.JsonProcessingException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationContext;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationFeature;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.SerializationFeature;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.module.SimpleModule;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Converts a Java object instance to JSON and vice versa"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUtil {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private static final ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            .registerModule(new SimpleModule(\"SimpleModule\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                    .addSerializer(Level.class, new ToStringSerializer())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * If any values are missing from the file, default values will be used, as long as the file is a valid json file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath cannot be null."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Json file \" + filePath + \" not found\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        T jsonFile;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DataConversionException(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return Optional.of(jsonFile);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the Json object to the specified file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param jsonFile cannot be null"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath cannot be null"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was an error during writing to the file"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(jsonFile);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        serializeObjectToJsonFile(filePath, jsonFile);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given string representation of a JSON data to instance of a class"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param \u003cT\u003e The generic type to create an instance of"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The instance of T with the specified values in the JSON string"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        return objectMapper.readValue(json, instanceClass);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given instance of a class into its JSON data string representation"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instance The T object to be converted into the JSON string"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param \u003cT\u003e The generic type to create an instance of"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return JSON data representation of the given class instance, in string"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * Contains methods that retrieve logging level from serialized string."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        protected LevelDeserializer(Class\u003c?\u003e vc) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            super(vc);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        protected Level _deserialize(String value, DeserializationContext ctxt) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            return getLoggingLevel(value);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "         * Gets the logging level that matches loggingLevelString"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "         * \u003cp\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns null if there are no matches"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        private Level getLoggingLevel(String loggingLevelString) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            return Level.parse(loggingLevelString);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        public Class\u003cLevel\u003e handledType() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            return Level.class;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 1,
      "-": 142
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " *    in the above example.\u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class ArgumentTokenizer {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * respective argument values. Only the given prefixes will be recognized in the arguments string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefixes   Prefixes to tokenize the arguments string with"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return           ArgumentMultimap object that maps prefixes to their arguments"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return extractArguments(argsString, positions);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Finds all zero-based prefix positions in the given arguments string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefixes   Prefixes to find in the arguments string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return           List of zero-based prefix positions in the given arguments string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(prefixes)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@see findAllPrefixPositions}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        while (prefixPosition !\u003d -1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            positions.add(extendedPrefix);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return positions;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the index of the first occurrence of {@code prefix} in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code argsString} starting from index {@code fromIndex}. An occurrence"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * such occurrence can be found."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * occurrences of \"p/\" with whitespace before it. However, if"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code fromIndex} \u003d 0, this method returns 5."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return prefixIndex \u003d\u003d -1 ? -1"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                : prefixIndex + 1; // +1 as offset for whitespace"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code argsString}."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return                ArgumentMultimap object that maps prefixes to their arguments"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        // Sort by start position"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        // Insert a PrefixPosition to represent the preamble"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        prefixPositions.add(0, preambleMarker);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        // Add a dummy PrefixPosition to represent the end of the string"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        prefixPositions.add(endPositionMarker);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        // Map prefixes to their argument values (if any)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            // Extract and store prefixes and their arguments"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            argMultimap.put(argPrefix, argValue);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return argMultimap;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * The end position of the value is determined by {@code nextPrefixPosition}."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String extractArgumentValue(String argsString,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                                        PrefixPosition currentPrefixPosition,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                                        PrefixPosition nextPrefixPosition) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        Prefix prefix \u003d currentPrefixPosition.getPrefix();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        return value.trim();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents a prefix\u0027s position in an arguments string."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class PrefixPosition {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        private final int startPosition;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        private final Prefix prefix;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        PrefixPosition(Prefix prefix, int startPosition) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            this.prefix \u003d prefix;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            this.startPosition \u003d startPosition;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        int getStartPosition() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            return startPosition;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        Prefix getPrefix() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            return prefix;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 1,
      "-": 147
    }
  },
  {
    "path": "src/main/java/seedu/address/model/flashcard/Answer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "package seedu.address.model.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": " * Represents a Flashcard\u0027s answer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class Answer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            \"Answer should only contain alphanumeric characters and spaces, and it, should not be blank\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * The first character of the address must not be a whitespace,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public final String answer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * Constructs a {@code Answer}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * @param answer A valid answer."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Answer(String answer) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        requireNonNull(answer);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        checkArgument(isValidAnswer(answer), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public static boolean isValidAnswer(String test) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                || other instanceof seedu.address.model.flashcard.Answer // instanceof handles nulls"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                \u0026\u0026 answer.equals(((seedu.address.model.flashcard.Answer) other).answer); // state check"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return answer.hashCode();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/model/flashcard/Flashcard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "package seedu.address.model.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": " * Represents a Flashcard in a FlashcardSet."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class Flashcard {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final Question question;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final Answer answer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Flashcard(Question question, Answer answer) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Question getQuestion() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Answer getAnswer() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        builder.append(\" Question: \")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                .append(getQuestion())"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                .append(\" Answer: \")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                .append(getAnswer());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (!(other instanceof Flashcard)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        Flashcard otherFlashcard \u003d (Flashcard) other;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return otherFlashcard.getQuestion().equals(getQuestion())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                \u0026\u0026 otherFlashcard.getAnswer().equals(getAnswer());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return Objects.hash(question, answer);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/model/flashcard/FlashcardSet.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "package seedu.address.model.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": " * Represents a FlashcardSet that contains flashcards for quiz."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class FlashcardSet {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final List\u003cFlashcard\u003e flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * Creates a FlashcardSet with valid Name."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public FlashcardSet(Name name, List\u003cFlashcard\u003e flashcards) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        this.flashcards.addAll(flashcards);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public List\u003cFlashcard\u003e getFlashcards() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return flashcards;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (!(other instanceof Person)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        FlashcardSet otherFlashcardSet \u003d (FlashcardSet) other;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return otherFlashcardSet.getName().equals(getName())"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                \u0026\u0026 otherFlashcardSet.getFlashcards().equals(getFlashcards());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return Objects.hash(name, flashcards);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        builder.append(getName());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        getFlashcards().forEach(builder::append);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/model/flashcard/Name.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "package seedu.address.model.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": " * Represents a FlashcardSet\u0027s name."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class Name {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * The first character of the address must not be a whitespace,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public final String name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * Constructs a {@code Name}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * @param name A valid name."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Name(String name) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * Returns true if a given string is a valid name."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public static boolean isValidName(String test) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                || other instanceof seedu.address.model.flashcard.Name // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                \u0026\u0026 name.equals(((seedu.address.model.flashcard.Name) other).name); // state check"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return name.hashCode();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 60
    }
  },
  {
    "path": "src/main/java/seedu/address/model/flashcard/Question.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "package seedu.address.model.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": " * Represents a Flashcard\u0027s question."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class Question {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            \"Question should only contain alphanumeric characters and spaces, and it should not be blank\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * The first character of the address must not be a whitespace,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public final String question;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * Constructs a {@code Question}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     * @param question A valid question."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Question(String question) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        requireNonNull(question);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        checkArgument(isValidQuestion(question), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public static boolean isValidQuestion(String test) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                || other instanceof seedu.address.model.flashcard.Question // instanceof handles nulls"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                \u0026\u0026 question.equals(((seedu.address.model.flashcard.Question) other).question); // state check"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return question.hashCode();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAddressBookStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * A class to access AddressBook data stored as a json file on the hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonAddressBookStorage implements AddressBookStorage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonAddressBookStorage(Path filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return readAddressBook(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Similar to {@link #readAddressBook()}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file is not in the correct format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                filePath, JsonSerializableAddressBook.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!jsonAddressBook.isPresent()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.of(jsonAddressBook.get().toModelType());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        saveAddressBook(addressBook, filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(addressBook);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 1,
      "-": 79
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonUserPrefsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A class to access UserPrefs stored in the hard disk as a json file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUserPrefsStorage implements UserPrefsStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonUserPrefsStorage(Path filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return readUserPrefs(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Similar to {@link #readUserPrefs()}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefsFilePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUtil.saveJsonFile(userPrefs, filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 1,
      "-": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/StorageManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Manages storage of AddressBook data in local storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManager implements Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final AddressBookStorage addressBookStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final UserPrefsStorage userPrefsStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.addressBookStorage \u003d addressBookStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefsStorage \u003d userPrefsStorage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.readUserPrefs();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefsStorage.saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return addressBookStorage.getAddressBookFilePath();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return readAddressBook(addressBookStorage.getAddressBookFilePath());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Attempting to read data from file: \" + filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return addressBookStorage.readAddressBook(filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Attempting to write to data file: \" + filePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBookStorage.saveAddressBook(addressBook, filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 2,
      "-": 77
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextInputControl;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final Stage primaryStage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final Logic logic;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private PersonListPanel personListPanel;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final HelpWindow helpWindow;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private MenuItem helpMenuItem;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane personListPanelPlaceholder;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerators();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerators() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the accelerator of a MenuItem."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyCombination the KeyCombination value of the accelerator"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        menuItem.setAccelerator(keyCombination);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "         * TODO: the code below can be removed once the bug reported here"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "         * https://bugs.openjdk.java.net/browse/JDK-8131666"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "         * is fixed in later version of SDK."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "         * According to the bug report, TextInputControl (TextField, TextArea) will"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "         * consume function-key events. Because CommandBox contains a TextField, and"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "         * not work when the focus is in them because the key event is consumed by"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "         * the TextInputControl(s)."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "         * For now, we add following event filter to capture such key events and open"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "         * help window purposely so to support accelerators even when focus is"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "         * in CommandBox or ResultDisplay."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                menuItem.getOnAction().handle(new ActionEvent());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandBox commandBox \u003d new CommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.show();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.focus();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonListPanel getPersonListPanel() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        return personListPanel;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult commandResult \u003d logic.execute(commandText);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Result: \" + commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isShowHelp()) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                handleHelp();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isExit()) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                handleExit();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            return commandResult;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Invalid command: \" + commandText);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 3,
      "-": 193
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UiManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiManager implements Ui {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private final Logic logic;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UiManager} with the given {@code Logic}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiManager(Logic logic) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow \u003d new MainWindow(primaryStage, logic);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 1,
      "-": 88
    }
  }
]
