[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "title: User Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "[![CI Status](https://github.com/AY2021S1-CS2103-T14-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S1-CS2103-T14-3/tp/actions)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![Ui](docs/images/Ui.png)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Travel inspirations come in bits and pieces."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "At the start of every travel planning, we often only have a vague idea of the activities we are interested in and not a concrete schedule that optimises our travel time and satisfaction."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "As a result, travel planning is often a hot mess with little structure."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "WanderLust aims to create an efficient and organised way for travellers to plan out their trips."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Every pinned destination, travel plan and schedule can be quickly added, modified and retrieved right from the CLI -- an extremely streamlined and quick process for the CLI-proficient traveller."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Relevant information can be retrieved right when and where you need them. With WanderLust, creating a travel plan and schedule will be simple and hassle-free."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "#### Site Map"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "* [User Guide](/docs/UserGuide.md)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "* [Developer Guide](/docs/DeveloperGuide.md)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "* [About Us](/docs/AboutUs.md)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "* [Contact Us](/docs/ContactUs.md)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "#### Acknowledgement"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "This project is based on the AddressBook-Level3 project created by the [SE-EDU](https://se-education.org) initiative."
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 27,
      "-": 3
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: About Us"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Wanderlust was developed by [Team CS2103-T14-3](https://github.com/orgs/AY2021S1-CS2103-T14-3/people)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "## Project team"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "### Prof. Damith C. Rajapakse"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003cimg src\u003d\"images/damith.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "[[homepage](http://www.comp.nus.edu.sg/~damithch)]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "[[github](https://github.com/damithc)]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Project Advisor"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "### Lim Hai Shan"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003cimg src\u003d\"images/underthehai.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "[[github](http://github.com/underthehai)]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* Role: Developer (In charge of Model)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* Responsibilities: Testing"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "### Lye Yi Xian"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003cimg src\u003d\"images/lyeyixian.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "[[github](http://github.com/lyeyixian)]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* Role: Team Lead (In charge of Storage)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* Responsibilities: Integration, Deliverables and deadlines"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "### Teo Jia wei"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003cimg src\u003d\"images/jiaweiteo.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "[[github](https://github.com/jiaweiteo)]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* Role: Developer (In charge of Model)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* Responsibilities: Scheduling and tracking, Documentation, Integration"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "### Timothy Ong Jing Kai"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003cimg src\u003d\"images/timjkong.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "[[github](http://github.com/timjkong)]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* Role:  Developer (In charge of Logic)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* Responsibilities: Code quality"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "### Toh Xuan Ning Jeanne"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "\u003cimg src\u003d\"images/jeannetoh99.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "[[github](http://github.com/jeannetoh99)]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* Role: Developer (In charge of Ui)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* Responsibilities: Documentation"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 20,
      "lyeyixian": 10,
      "-": 34
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: Developer Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## **Setting up, getting started**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide [_Setting up and getting started_](SettingUp.md)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "## **Design**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "### Architecture"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup methods where necessary."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`UI`**](#ui-component): The UI of the App."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`Logic`**](#logic-component): The command executor."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`Model`**](#model-component): Holds the data of the App in memory."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* defines its *API* in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "![Class Diagram of the Logic Component](images/LogicClassDiagram.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "**How the architecture components interact with each other**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "### UI component"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the UI Component](images/UiClassDiagram.png)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "**API** :"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "### Logic component"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Logic Component](images/LogicClassDiagram.png)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "**API** :"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "1. `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "1. This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "1. The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "### Model component"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Model Component](images/ModelClassDiagram.png)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user’s preferences."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the address book data."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "![BetterModelClassDiagram](images/BetterModelClassDiagram.png)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "### Storage component"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Storage Component](images/StorageClassDiagram.png)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the address book data in json format and read it back."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "### Common classes"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "## **Implementation**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "### \\[Proposed\\] Undo/redo feature"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "#### Proposed Implementation"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` — Saves the current address book state in its history."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` — Restores the previous address book state from its history."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState0](images/UndoRedoState0.png)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState1](images/UndoRedoState1.png)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState2](images/UndoRedoState2.png)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState3](images/UndoRedoState3.png)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "than attempting to perform the undo."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoSequenceDiagram](images/UndoSequenceDiagram.png)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState4](images/UndoRedoState4.png)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState5](images/UndoRedoState5.png)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "![CommitActivityDiagram](images/CommitActivityDiagram.png)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "#### Design consideration:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "##### Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "  * Pros: Easy to implement."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "  * Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "  itself."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "  * Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "_{more aspects and alternatives to be added}_"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "### \\[Proposed\\] Data archiving"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data archiving feature will be implemented}_"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "## **Documentation, logging, testing, configuration, dev-ops**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "* [Documentation guide](Documentation.md)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "* [Testing guide](Testing.md)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "* [Logging guide](Logging.md)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "* [Configuration guide](Configuration.md)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "* [DevOps guide](DevOps.md)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "## **Appendix: Requirements**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "### Product scope"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "**Target user profile**:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "* Need a place to their store travel plans in an organised manner"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "* CLI proficient"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing to mouse interactions"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "**Value proposition**:"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "* Manage travel plans faster and wishlist faster than using Excel sheets/Mouse-driven Apps"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "### User stories"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* * *`  | new user                                   | read the user guide            | be familiar with the usages and features                |"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* * *`  | user                                       | save travel activities in a wishlist               | use it for future travel plans      |"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* * *`  | user                                       | add items to a travel plan             | note down important items related to my travel plan      |"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* * *`  | user                                       | delete an item       | remove unwanted items              |"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* * *`  | user                                       | modify an item       | edit any last minute changes              |"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* * *`  | frequent user                                       | have a list of items    | easily see my travel plans              |"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* * *`  | user                                       | be able to switch between travel plans   | navigate to travel plans easily              |"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* *`    | user                                       | add notes to each travel plan  | refer to them while travelling                          |"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* *`    | user                                       | input accommodation details         | easily remember where I am going to stay           |"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* *`    | user                                       | input cost of activity  | track the price of each activities easily                      |"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* *`    | user                                       | input timing to an activity         | create a schedule for my travel plan               |"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* *`    | user                                       | record essential personal details         | have a easy time in making bookings using these details             |"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* *`    | user                                       | sort items  | view my items in a preferred manner            |"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `* *`    | user                                       | create priority levels for activities | rank the level of importance of each activities    |"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `*`      | advanced user                              | have shortcuts for commands  | execute commands faster proficiently    |"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "| `*`      | user                                       | have a feature to search  | find and filter my desired items efficiently  |"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "*{More to be added}*"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "### Use cases"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "(For all use cases below, the **System** is the `Wanderlust` and the **Actor** is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Use case: UC01 - Navigate to a specific travel plan**"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "1.  User requests to navigate to a specific travel plan"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "2.  Wanderlust shows that the current directory is on that travel plan"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1a. The specific travel plan doesn\u0027t exist."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Use case: UC02 - Navigate to the wishlist**"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "1.  User requests to navigate to the wishlist"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "2.  Wanderlust shows that the current directory is on the wishlist"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Use case: UC03 - Add a travel plan**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "1.  User requests to add a travel plan"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "2.  Wanderlust shows the newly created travel plan"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1a. The input command format is invalid."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Use case: UC04 - Add an activity**"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "2.  User requests to add an activity"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "3.  Wanderlust shows the added activities in the current directory"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a1. User requests to add an activity."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1b. User \u003cins\u003enavigates to the wishlist (UC2)\u003c/ins\u003e."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case resumes at step 2."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Use case: UC05 - Add an accommodation**"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "2.  User requests to add an accommodation"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "3.  Wanderlust shows the added accommodation in the current travel plan"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a1. User requests to add accommodation."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Use case: UC06 - Add a person**"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "2.  User requests to add a person"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "3.  Wanderlust shows the added person in the current travel plan"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a1. User requests to add a person."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Use case: UC07 - Delete a travel plan**"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "1.  User requests to delete a travel plan"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "2.  Wanderlust shows that the travel plan has been deleted."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1a. The input command format is invalid."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1b. The travel plan specified does not exist."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1b1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Use case: UC08 - Delete an activity**"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "2.  User requests to delete an activity"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "3.  Wanderlust shows that the activity has been deleted"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a1. User requests to delete an activity."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1b. User \u003cins\u003enavigates to the wishlist (UC2)\u003c/ins\u003e."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case resumes at step 2."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 2b. The activity specified does not exist."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 2b1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Use case: UC09 - Delete an accommodation**"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "2.  User requests to delete an accommodation"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "3.  Wanderlust shows that the accommodation has been deleted"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a1. User requests to delete accommodation."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 2b. The accommodation specified does not exist."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 2b1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Use case: UC10 - Delete a person**"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "2.  User requests to delete a person"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "3.  Wanderlust shows that the person has been deleted"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a1. User requests to delete a person."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "* 2b. The person specified does not exist."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    * 2b1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "**Use case: UC11 - Edit a travel plan**"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "1. User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "2. User requests to edit travel plan"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "3. Wanderlust shows that the travel plan has been edited"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "   Use case ends."
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "*  1a. User is at the top directory."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "     Use case resumes at step 2."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "     Use case ends."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "* 2b. The travel plan specified does not exist."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "    * 2b1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "     Use case ends."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "**Use case: UC12 - Edit an activity**"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "2.  User requests to edit an activity"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "3.  Wanderlust shows that the activity has been edited"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "     Use case ends."
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a1. User requests to edit an activity."
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "     Use case ends."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "* 1b. User \u003cins\u003enavigates to the wishlist (UC2)\u003c/ins\u003e."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "     Use case resumes at step 2."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "* 2b. The activity specified does not exist."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "    * 2b1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "**Use case: UC13 - Edit an accommodation**"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "2.  User requests to edit an accommodation"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "3.  Wanderlust shows that the accommodation has been edited"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a1. User requests to edit accommodation."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "* 2b. The accommodation specified does not exist."
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "    * 2b1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "**Use case: UC14 - Edit a person**"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "2.  User requests to edit a person"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "3.  Wanderlust shows that the person has been edited"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a1. User requests to edit a person."
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "* 2b. The person specified does not exist."
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "    * 2b1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "**Use case: UC15 - View activities**"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "2.  User requests to view activities"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "3.  Wanderlust shows the list of activities"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a1. User requests to view activities."
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "* 1b. User \u003cins\u003enavigates to the wishlist (UC2)\u003c/ins\u003e."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case resumes at step 2."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "**Use case: UC16 - View contacts in travel plan**"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "2.  User requests to view contacts"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "3.  Wanderlust shows the list of contacts"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a1. User requests to view contacts."
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "**Use case: UC17 - View accommodation in travel plan**"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User \u003cins\u003enavigates to a specific travel plan (UC1)\u003c/ins\u003e"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "2.  User requests to view accommodation"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "3.  Wanderlust shows the list of accommodation"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. User is at the top directory."
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a1. User requests to view accommodation."
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "    * 1a2. Wanderlust shows an error message."
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The input command format is invalid."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "    * 2a1. Wanderlust shows an error message."
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "      Use case ends."
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "*{More to be added}*"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "### Non-Functional Requirements"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "timjkong"
        },
        "content": "1.  Should work on any mainstream OS_ as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "timjkong"
        },
        "content": "2.  The travel planner should be able to hold up to 1000 activities without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "timjkong"
        },
        "content": "3.  Should be able to respond to user commands within 1 second."
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "timjkong"
        },
        "content": "4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "timjkong"
        },
        "content": "5.  Should be a single-user product."
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "timjkong"
        },
        "content": "6.  Users familiar with JSON should be able to read and edit the storage file."
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "timjkong"
        },
        "content": "7.  Should work without internet connection."
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "### Glossary"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "* **Mainstream OS**: Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "* **Private contact detail**: A contact detail that is not meant to be shared with others"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "* **Wishlist**: A list of potential activities"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "* **Travel plan**: A list of accommodations and activities in a specified location that can include `start_date` and `end_date`"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "* **Activity**: Minimally includes the `name`, we can add information about level of importance, `cost`, `location`, `timestamp` and `tags` to it"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "* **Accommodation**: Minimally includes the `name`, we can add information about `location`, `cost` and `nights` to it"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "* **Person**: Contains information about a given person `name`, `mobile number` and `passport number`"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "* **Directory**: The three possible directories are `top`, `travelplan`, `wishlist`"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "* **Navigate**: Use the `goto` command to move between directories"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "* **View**: Use the `show` command to provide a list of specified items"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "*{More to be added}*"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "## **Appendix: Instructions for manual testing**"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "testers are expected to do more *exploratory* testing."
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "### Launch and shutdown"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "1. Initial launch"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "1. Saving window preferences"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "       Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "1. _{ more test cases …​ }_"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "### Deleting a person"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "1. Deleting a person while all persons are being shown"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list."
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Test case: `delete 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Test case: `delete 0`\u003cbr\u003e"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "1. _{ more test cases …​ }_"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "### Saving data"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "1. Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "1. _{ more test cases …​ }_"
      }
    ],
    "authorContributionMap": {
      "timjkong": 7,
      "jiaweiteo": 20,
      "lyeyixian": 205,
      "-": 534
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: User Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "# Wanderlust v1.2 User Guide"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "WanderLust helps tech-savvy travellers to plan their trips in a structured and efficient manner by providing them with a holistic travel planner."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "It is optimized for CLI users so that destinations and details can be added faster by typing in commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "* [Introduction](#introduction)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "* [Setting Up \\[Coming soon\\]](#setting-up-coming-soon)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "* [Tags](#tags)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    * [Activity Tag](#activity-tag)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    * [Accommodation Tag](#accommodation-tag)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    * [Person Tag](#person-tag)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    * [Travel Plan Tag](#travel-plan-tag)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    * [Wishlist Tag](#wishlist-tag)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    * [Goto](#goto)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        1. [Goto a Travel Plan (G)](#1-goto-a-travel-plan-g)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        2. [Goto Wishlist (G)](#2-goto-wishlist-g)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    * [Add](#add)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        1. [Adding a Travel Plan (G)](#1-adding-a-travel-plan-g)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        2. [Adding an Activity (L)](#2-adding-an-activity-l)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        3. [Adding an Accommodation (L)](#3-adding-an-accommodation-l)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        4. [Adding a Person (L)](#4-adding-a-person-l)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    * [Delete](#delete)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        1. [Deleting a Travel Plan (G)](#1-deleting-a-travel-plan-g)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        2. [Deleting an Activity (L)](#2-deleting-an-activity-l)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        3. [Deleting an Accommodation (L)](#3-deleting-an-accommodation-l)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        4. [Deleting a Person (L)](#4-deleting-a-person-l)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    * [Edit](#edit)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        1. [Editing a Travel Plan (G)](#1-editing-a-travel-plan-g)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        2. [Editing an Activity (L)](#2-editing-an-activity-l)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        3. [Editing an Accommodation (L)](#3-editing-an-accommodation-l)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        4. [Editing a Person (L)](#4-editing-a-person-l)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    * [Show](#show)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        1. [Viewing the Wishlist (G)](#1-viewing-the-wishlist-g)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        2. [Viewing Activities in a Travel Plan (G)](#2-viewing-activities-in-a-travel-plan-g)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        3. [Viewing Contacts in a Travel Plan (L)](#3-viewing-contacts-in-a-travel-plan-l)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        4. [Viewing Accommodations in a Travel Plan (L)](#4-viewing-accommodations-in-a-travel-plan-l)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        5. [Viewing Activities in current directory (L)](#5-viewing-activities-in-current-directory-l)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "* [FAQ \\[Coming soon\\]](#faq-coming-soon)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "## Setting up [Coming soon]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "There are a total of 5 general commands."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "The table briefly describes the commands and its usage. Full details will be given in the next section."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Command | Parameters | Description"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "------------ | ------------- | -------------"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`add -OBJECT` | `OBJECT` activity/ accommodation/ person/ travelplan | Creates the given object type"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`delete -OBJECT` | `OBJECT` activity/ accommodation/ person/ travelplan | Deletes the given object type"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`edit -OBJECT` | `OBJECT` activity/ accommodation/ person/ travelplan | Edits the details of the given object type"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`goto PLAN_NAME` | `PLAN_NAME` nameOfTravelPlan/ wishlist | Navigate to the specific travel plan/ wishlist"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "`show LIST_OF_OBJECTS` | `LIST_OF_OBJECTS` wishlist / nameOfTravelPlan / contacts / accommodation / \\\u003cempty\\\u003e / | Show the specific list of objects given. If \\\u003clistOfObjects\\\u003e is empty, WanderLust will show the current travel plan the user is at."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "## Tags"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "The table below shows the type of tag each different object can be assigned to."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Do note that tags are optional when creating the object."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "#### Activity Tag"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Name of Tag | Description"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`l/LOCATION` | Location/ Address of the activity."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`i/LEVEL_OF_IMPORTANCE` | The priority assigned to the activity."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`c/cost` | Cost of the activity, if any."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`d/DATE_AND_TIME` | Date and Time intended to do the activity. Format of date is in DD-MM-YYYY and format of time is HHMM (24h clock)."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "#### Accommodation Tag"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Name of Tag | Description"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`l/LOCATION` | Location/ Address of the accommodation."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`n/NIGHTS` | Number of nights to be spent in the accommodation."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`c/cost` | Cost of the accommodation, if any."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "#### Person Tag"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Name of Tag | Description"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`m/MOBILE_NUMBER` | Mobile number of the person cell phone"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`p/PASSPORT_NUMBER` | Passport number of the person passport"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "#### Travel Plan Tag"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Name of Tag | Description"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`sd/START_DATE` | Start date of travel in the format of DD-MM-YYYY"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`ed/END_DATE | End date of travel in the format of DD-MM-YYYY"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "#### Wishlist Tag"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Name of Tag | Description"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`l/LOCATION` | Location/ Address of the activity."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`i/LEVEL_OF_IMPORTANCE` | The priority assigned to the activity."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "`c/cost` | Cost of the activity, if any."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "**Notes about the command format:**\u003cbr\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "  e.g. in `add -activity n/NAME`, `NAME` is a parameter which can be used as `add -activity n/Cultural Visit`."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* Items in square brackets are optional.\u003cbr\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "  e.g `n/NAME [l/LOCATION]` can be used as `n/Cultural Visit l/Lourve Museum` or as `n/Cultural Visit`."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "## Goto"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "The goto command is used to navigate to various directories within the travel planner. The GUI display depends on the"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "state of the current directory, which is changed using the goto command. On start, the default directory of the program"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "is `wishlist`.\u003cbr/\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003eDirectories in Wanderlust include:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003e1. `wishlist`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003e2. `NAME_OF_TRAVEL_PLAN`\u003cbr/\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "This allows users to easily add, delete, view and edit information within the wishlist or a specific travel plan without"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "having to type their names in each command. This also means that **some commands can only be used locally within a"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "certain directory, and responses to these commands will depend on the current directory.** Commands that can be used"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "globally and locally are tagged (G) and (L) respectively in the **features section** of this user guide. \u003cbr/\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "### 1. Goto a Travel Plan (G)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Navigates the UI to a specific travel plan.\u003cbr/\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Format: `goto NAME_OF_TRAVEL_PLAN`\u003cbr/\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Example: `goto Europe`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "### 2. Goto Wishlist (G)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Navigates the UI to the wishlist.\u003cbr/\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Format: `goto wishlist`\u003cbr/\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Example: `goto wishlist`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "## Add"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "#### 1. Adding a Travel Plan (G)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Creates a new travel plan and adds it to Wanderlust’s travel planner."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Start and end date can be optional, but they must exist as a pair. Format of date is in DD-MM-YYYY."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Format: `add -travelplan n/NAME [sd/START_DATE ed/END_DATE]`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Example: `add -travelplan n/France sd/15-09-2020 ed/30-09-2020`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "#### 2. Adding an Activity (L)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Creates a new activity and adds it to the travel plan/wishlist in the current directory.  Date and time can be optional, but they must exist as a pair."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Format of date is in DD-MM-YYYY and format of time is HHMM (24h clock)."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `add -activity n/NAME [i/LEVEL_OF_IMPORTANCE] [l/LOCATION] [c/COST] [d/DATE_AND_TIME] [t/tags]`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Example: `add -activity n/Universal Studios Singapore i/5 l/Sentosa c/SGD88 d/16-09-2020 t/1000`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "#### 3. Adding an Accommodation (L)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Creates new accommodation that contains information about the place of stay and adds it to the travel plan in the current directory."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "This command can only be used within a travel plan. Use goto NAME_OF_TRAVEL_PLAN before adding accommodations."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Format: `add -accommodation n/NAME [l/LOCATION] [c/COST] [n/NIGHTS]`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "### 4. Adding a Person (L)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Creates a person object that contains basic information about the user and"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "other travellers and adds it to the travel plan in the current directory."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Format: `add -person n/NAME [m/MOBILE_NUMBER] [p/PASSPORT_NUMBER]`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "Example: `add -person n/John m/81234567 p/E1234567H`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "timjkong"
        },
        "content": "## Delete"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "timjkong"
        },
        "content": "### 1. Deleting a Travel Plan (G)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Deletes a TravelPlan object. Users must include either the name or the index of the travel plan."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Format: `delete -travelplan n/NAME​`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Example: `delete -travelplan n/France`"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "timjkong"
        },
        "content": "### 2. Deleting an Activity (L)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Deletes an Activity object from the travel plan/wishlist in the current directory.  Users must include the name of activity or the corresponding index."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Format: `delete -activity n/NAME`"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Example: `delete -activity n/Universal Studios Singapore`"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "timjkong"
        },
        "content": "### 3. Deleting an Accommodation (L)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Deletes an Accommodation object from the travel plan in the current directory. Command must include the name of the accommodation or the corresponding index."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "timjkong"
        },
        "content": "_This command can only be used within a travel plan. Use goto NAME_OF_TRAVEL_PLAN before deleting accommodations._"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Format: `delete -accommodation n/NAME​`"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Example: `delete -accommodation n/Hard Rock Hotel`"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "timjkong"
        },
        "content": "### 4. Deleting a Person (L)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Deletes a Person object from the travel plan in the current directory. Command must include the name of the Person object or the corresponding index."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "timjkong"
        },
        "content": "_This command can only be used within a travel plan. Use goto NAME_OF_TRAVEL_PLAN before deleting a person._"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Format: `delete -person n/NAME`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "timjkong"
        },
        "content": "Example: `delete -person n/John`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "## Edit"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "#### 1. Editing a TravelPlan (G)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "Edits an existing TravelPlan in the address book."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `edit -travelplan INDEX n/NAME [sd/START_DATE ed/END_DATE]​`"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "* Edits the TravelPlan at the specified `INDEX` or name."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "* Users must include the name of the travel plan or the corresponding index."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "* Format of date is in DD-MM-YYYY"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "* `edit -travelplan n/France sd/15-09-2020 ed/30-09-2020` Edits the start date and end date of the `France` TravelPlan."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "#### 2. Editing an Activity (L)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "Edits an existing Activity in the address book and updates the travel plan/wishlist in the current directory"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `edit -activity INDEX n/NAME [i/LEVEL_OF_IMPORTANCE] [l/LOCATION] [c/COST] [d/DATE_AND_TIME]​`"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "* Navigate to specified travel plan or wishlist."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "* Edits the Activity at the specified `INDEX` or name."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "* The index refers to the index number shown in the displayed activity list. The index **must be a positive integer** 1, 2, 3, ,,,"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "* Users must include the name of activity or the corresponding index."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "* Format of date is in DD-MM-YYYY and format of time is HHMM (24h clock)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "*  `edit -activity n/Universal Studios Singapore i/5 l/Sentosa d/16-09-2020` Edits the location and date of the `Universal Studios Singapore` activity"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "*  `edit -activity 2 n/Singapore Zoo t/Animals` Edits the tag of the 2nd Activity to be `Animals` and clears all existing tags."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "#### 3. Editing an Accommodation (L)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "Edits existing Accommodation in the address book. This command can only be used within a travel plan."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `edit -accommodation INDEX n/NAME [l/LOCATION] [c/COST] [n/NIGHTS]​`"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "* User navigates to specified travel plan."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "* Edits the Accommodation at the specified `INDEX` or name."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "* Users must include the name of Accommodation, or an index"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "* The index refers to the index number shown in the displayed accommodation list. The index **must be a positive integer** 1, 2, 3, ,,,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "*  `edit -accommodation n/Hard Rock Hotel c/SGD500 n/2` Edits the cost and nights of `Hard Rock Hotel` Accommodation"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "*  `edit -accomodation 2 c/SGD250` Edits the cost of the 2nd Accommodation to be `SGD250`"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "#### 4. Editing a Person (L)"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "Edits existing Person in the address book. This command can only be used within a travel plan."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `edit -person n/NAME [m/MOBILE_NUMBER] [p/PASSPORT_NUMBER]​`"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "* Navigate to specified travel plan."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "* Edits an existing person object’s information and updates the corresponding travel plan in the current directory"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "* The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "*  `edit -person n/John m/81234567 p/E1234567H` Edits the mobile number and passport number of `John` Person"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "*  `edit 2 m/87452183` Edits the mobile number of the 2nd person\\"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "Example: `add -accommodation n/Hard Rock Hotel l/Sentosa c/SGD500 n/2`"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "## Show"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "#### 1. Viewing the Wishlist (G)"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Shows the list of activities added to the wishlist, in the order they were added."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Format: `show wishlist`"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Example: `show wishlist`"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "#### 2. Viewing Activities in a Travel Plan (G)"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Shows the list of activities added to a travel plan, in the order they were added."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Format: `show NAME_OF_TRAVEL_PLAN`"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Example: `show Europe Plan`"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "#### 3. Viewing Contacts in a Travel Plan (L)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Shows the list of contacts added to the travel plan, in order they were added. \u003cbr /\u003e"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "_This command can only be used within a travel plan. Use `goto NAME_OF_TRAVEL_PLAN` before accessing contacts._"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "```"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "goto NAME_OF_TRAVEL_PLAN"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "show contacts"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "```"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "```"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "goto Europe Plan"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "show contacts"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "```"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "#### 4. Viewing Accommodations in a Travel Plan (L)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Shows the list of accommodations added to the travel plan, in order they were added."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "_This command can only be used within a travel plan. Use `goto NAME_OF_TRAVEL_PLAN` before accessing accommodations._"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "```"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "goto NAME_OF_TRAVEL_PLAN"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "show accommodations"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "```"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "```"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "goto Europe Plan"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "show accommodations"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "```"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "#### 5. Viewing Activities in current directory (L)"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Shows the list of activities added to the wishlist / travel plan of the current directory, in order they were added."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Format: `show`"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "Example: `show`"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "## FAQ [Coming soon]"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "timjkong": 30,
      "jeannetoh99": 79,
      "jiaweiteo": 74,
      "lyeyixian": 26,
      "-": 150
    }
  },
  {
    "path": "src/main/java/seedu/address/model/accommodation/Accommodation.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package seedu.address.model.accommodation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import seedu.address.model.commons.Cost;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import seedu.address.model.commons.Location;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import seedu.address.model.commons.Name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.WanderlustDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * Represents an Accommodation in the travel plan."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class Accommodation extends TravelPlanObject {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final WanderlustDate startDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final WanderlustDate endDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private final Cost cost;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private final Location location;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Accommodation(Name name, WanderlustDate startDate, WanderlustDate endDate, Cost cost, Location location) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        requireAllNonNull(name, startDate, endDate, cost, location);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public WanderlustDate getStartDate() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public WanderlustDate getEndDate() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Cost getCost() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return cost;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Location getLocation() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return location;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /** Returns true if both accommodations have the same name, startDate and endDate fields. */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public boolean isSameAccommodation(Accommodation otherAccommodation) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (otherAccommodation \u003d\u003d this) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return otherAccommodation !\u003d null"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                \u0026\u0026 otherAccommodation.getName().equals(getName())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                \u0026\u0026 otherAccommodation.getStartDate().equals(getStartDate())"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                \u0026\u0026 otherAccommodation.getEndDate().equals(getEndDate());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Returns true if both accommodations have identical fields."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * This defines a stronger notion of equality between two accommodations."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (!(other instanceof Accommodation)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        Accommodation otherAccommodation \u003d (Accommodation) other;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return otherAccommodation.getName().equals(getName())"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                \u0026\u0026 otherAccommodation.getStartDate().equals(getStartDate())"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                \u0026\u0026 otherAccommodation.getEndDate().equals(getEndDate())"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                \u0026\u0026 otherAccommodation.getCost().equals(getCost())"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                \u0026\u0026 otherAccommodation.getLocation().equals(getLocation());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return Objects.hash(name, startDate, endDate, cost, location);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        builder.append(getName())"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                .append(\" Date: \")"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                .append(getStartDate())"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                .append(\" - \")"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                .append(getEndDate())"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                .append(\" Address: \")"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                .append(getLocation())"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                .append(\" Cost: \")"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                .append(getCost());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 105,
      "jeannetoh99": 1,
      "lyeyixian": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/model/accommodation/UniqueAccommodationList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package seedu.address.model.accommodation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import seedu.address.model.accommodation.exceptions.AccommodationNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timjkong"
        },
        "content": "import seedu.address.model.accommodation.exceptions.DuplicateAccommodationException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * A list of accommodations that enforces uniqueness between its elements and does not allow nulls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * An accommodation is considered unique by comparing using {@code Accommodation#isSameAccommodation(Accommodation)}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * As such, adding and updating of accommodation uses Accommodation#isSameAccommodation(Accommodation) for equality"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * so as to ensure that the accommodation being added or updated is unique in terms of identity in the"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * UniqueAccommodationList. However, the removal of an accommodation uses Accommodation#equals(Object) so"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * as to ensure that the accommodation with exactly the same fields will be removed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timjkong"
        },
        "content": " *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timjkong"
        },
        "content": " *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * @see Accommodation#isSameAccommodation(Accommodation)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timjkong"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class UniqueAccommodationList implements Iterable\u003cAccommodation\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private final ObservableList\u003cAccommodation\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private final ObservableList\u003cAccommodation\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Returns true if the list contains an equivalent accommodation as the given argument."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public boolean contains(Accommodation toCheck) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::isSameAccommodation);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Adds an accommodation to the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * The accommodation must not already exist in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void add(Accommodation toAdd) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (contains(toAdd)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            throw new DuplicateAccommodationException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        internalList.add(toAdd);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Replaces the accommodation {@code target} in the list with {@code editedAccommodation}."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * {@code target} must exist in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * The accommodation identity of {@code editedAccommodation} must not be the same as"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * another existing accommodation in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void setAccommodation(Accommodation target, Accommodation editedAccommodation) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        requireAllNonNull(target, editedAccommodation);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            throw new AccommodationNotFoundException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (!target.isSameAccommodation(editedAccommodation) \u0026\u0026 contains(editedAccommodation)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            throw new DuplicateAccommodationException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        internalList.set(index, editedAccommodation);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Removes the equivalent accommodation from the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * The accommodation must exist in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void remove(Accommodation toRemove) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            throw new AccommodationNotFoundException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void setAccommodations(UniqueAccommodationList replacement) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Replaces the contents of this list with {@code accommodations}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * {@code accommodations} must not contain duplicate accommodations."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public void setAccommodations(List\u003cAccommodation\u003e accommodations) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        requireAllNonNull(accommodations);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        if (!accommodationsAreUnique(accommodations)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            throw new DuplicateAccommodationException();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        internalList.setAll(accommodations);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public ObservableList\u003cAccommodation\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}, with each Accommodation object"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * typecast to TravelPlanObject (TPO)."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cTravelPlanObject\u003e asUnmodifiableObservableTpoList() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return internalList.stream().map(item -\u003e (TravelPlanObject) item)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                .collect(Collectors.collectingAndThen(Collectors.toList(), l -\u003e FXCollections.observableArrayList(l)));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public Iterator\u003cAccommodation\u003e iterator() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                || (other instanceof UniqueAccommodationList // instanceof handles nulls"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                        \u0026\u0026 internalList.equals(((UniqueAccommodationList) other).internalList));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     * Returns true if {@code accommodations} contains only unique accommodations."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "timjkong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    private boolean accommodationsAreUnique(List\u003cAccommodation\u003e accommodations) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        for (int i \u003d 0; i \u003c accommodations.size() - 1; i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            for (int j \u003d i + 1; j \u003c accommodations.size(); j++) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                if (accommodations.get(i).isSameAccommodation(accommodations.get(j))) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "timjkong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "timjkong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 135,
      "jeannetoh99": 11,
      "lyeyixian": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/model/accommodation/exceptions/AccommodationNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package seedu.address.model.accommodation.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * Signals that the operation is unable to find the specified accommodation."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class AccommodationNotFoundException extends RuntimeException {}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/model/accommodation/exceptions/DuplicateAccommodationException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timjkong"
        },
        "content": "package seedu.address.model.accommodation.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timjkong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timjkong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * Signals that the operation will result in duplicate Accommodations"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timjkong"
        },
        "content": " * Accommodations are considered duplicates if they have the same identity."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timjkong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timjkong"
        },
        "content": "public class DuplicateAccommodationException extends RuntimeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    public DuplicateAccommodationException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timjkong"
        },
        "content": "        super(\"Operation would result in duplicate accommodations\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timjkong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timjkong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timjkong": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/activity/Activity.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.address.model.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import seedu.address.model.commons.Cost;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import seedu.address.model.commons.Location;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import seedu.address.model.commons.Name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Represents an Activity in the travel plan."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class Activity extends TravelPlanObject {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    //Identity fields"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    //Data fields"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private final Location location;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private final Cost cost;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private final Importance levelOfImportance;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final WanderlustDateTime activityDateTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Activity(Name name, Location location, Cost cost, Importance levelOfImportance,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    WanderlustDateTime activityDateTime) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireAllNonNull(name, location, cost, levelOfImportance, activityDateTime);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.levelOfImportance \u003d levelOfImportance;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.activityDateTime \u003d activityDateTime;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Location getLocation() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return location;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Cost getCost() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return cost;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Importance getLevelOfImportance() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return levelOfImportance;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public WanderlustDateTime getActivityDateTime() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return activityDateTime;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Returns true if both activities are of the same name."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * This defines a weaker notion of equality between two activities."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean isSameActivity(Activity otherActivity) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (otherActivity \u003d\u003d this) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return otherActivity !\u003d null"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 otherActivity.getName().equals(getName());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if both activities have the same identity and data fields."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * This defines a stronger notion of equality between two activities."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (!(other instanceof Activity)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        Activity otherActivity \u003d (Activity) other;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return otherActivity.getName().equals(getName())"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 otherActivity.getLocation().equals(getLocation())"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 otherActivity.getCost().equals(getCost())"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 otherActivity.getLevelOfImportance().equals(getLevelOfImportance())"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 otherActivity.getActivityDateTime().equals(getActivityDateTime());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return Objects.hash(name, location, cost, levelOfImportance, activityDateTime);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        builder.append(getName())"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                .append(\" Name: \")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                .append(getLocation())"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                .append(\" Location: \")"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                .append(getLevelOfImportance())"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                .append(\" Importance Level: \")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                .append(getCost())"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                .append(\" Cost: \")"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                .append(getActivityDateTime())"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                .append(\" Date and time: \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 1,
      "jiaweiteo": 108,
      "lyeyixian": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/model/activity/Importance.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.address.model.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Represents an Activity\u0027s level of Importance in the travel plan."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidImportance(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Importance {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            \"Importance Level should only contain numbers, and it should range from 1 - 5, with 5 being\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    + \"the most important while 1 being the least important\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[1-5]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Constructs a {@code Importance}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param importanceLevel A valid importance level."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Importance(String importanceLevel) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        requireNonNull(importanceLevel);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        checkArgument(isValidImportance(importanceLevel), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        value \u003d importanceLevel;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Returns true if a given string is a valid importance level."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static boolean isValidImportance(String test) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                || (other instanceof Importance // instanceof handles nulls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 value \u003d\u003d (((Importance) other).value)); // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 1,
      "jiaweiteo": 51
    }
  },
  {
    "path": "src/main/java/seedu/address/model/activity/UniqueActivityList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.address.model.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import seedu.address.model.activity.exceptions.ActivityNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import seedu.address.model.activity.exceptions.DuplicateActivityException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.Directory;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * A list of activities that enforces uniqueness between its elements and does not allow nulls."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * An activity is considered unique by comparing using {@code Activity#isSameActivity(Activity)}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * As such, adding and updating of Activity uses Activity#isSameActivity(Activity) for equality"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * so as to ensure that the activity being added or updated is unique in terms of identity in the UniqueActivityList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * However, the removal of a activity uses Activity#equals(Object) so"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * as to ensure that the Activity with exactly the same fields will be removed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * @see Activity#isSameActivity(Activity)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class UniqueActivityList extends Directory implements Iterable\u003cActivity\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private final ObservableList\u003cActivity\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private final ObservableList\u003cActivity\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Returns true if the list contains an equivalent activity as the given argument."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean contains(Activity toCheck) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::isSameActivity);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Adds an activity to the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * The activity must not already exist in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void add(Activity toAdd) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (contains(toAdd)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            throw new DuplicateActivityException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        internalList.add(toAdd);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Replaces the activity {@code target} in the list with {@code editedActivity}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * {@code target} must exist in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * The activity identity of {@code editedActivity} must not be the same as another existing activity in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void setActivity(Activity target, Activity editedActivity) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        requireAllNonNull(target, editedActivity);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            throw new ActivityNotFoundException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (!target.isSameActivity(editedActivity) \u0026\u0026 contains(editedActivity)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            throw new DuplicateActivityException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        internalList.set(index, editedActivity);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Removes the equivalent activity from the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * The activity must exist in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void remove(Activity toRemove) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            throw new ActivityNotFoundException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public void setActivities(UniqueActivityList replacement) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Replaces the contents of this list with {@code activities}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * {@code activities} must not contain duplicate activities."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void setActivities(List\u003cActivity\u003e activities) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        requireAllNonNull(activities);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        if (!activitiesAreUnique(activities)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            throw new DuplicateActivityException();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        internalList.setAll(activities);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public ObservableList\u003cActivity\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}, with each Activity object"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * typecast to TravelPlanObject (TPO)."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cTravelPlanObject\u003e asUnmodifiableObservableTpoList() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return internalList.stream().map(item -\u003e (TravelPlanObject) item)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                .collect(Collectors.collectingAndThen(Collectors.toList(), l -\u003e FXCollections.observableArrayList(l)));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean isTravelPlan() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean isWishlist() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Iterator\u003cActivity\u003e iterator() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                || (other instanceof UniqueActivityList // instanceof handles nulls"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 internalList.equals(((UniqueActivityList) other).internalList));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Returns true if {@code persons} contains only unique activities."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private boolean activitiesAreUnique(List\u003cActivity\u003e activities) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        for (int i \u003d 0; i \u003c activities.size() - 1; i++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            for (int j \u003d i + 1; j \u003c activities.size(); j++) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                if (activities.get(i).isSameActivity(activities.get(j))) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 12,
      "jiaweiteo": 135,
      "lyeyixian": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/model/activity/WanderlustDateTime.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents a Activity\u0027s date time in a travel plan."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidWanderlustDateTime(String)}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class WanderlustDateTime {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Date Time should be of the format YYYY-MM-DD HH:mm.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Date time must be in the format YYYY-MM-DD HH:mm."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static final DateFormat VALID_DATE_STRING \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public final String dateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final LocalDateTime value;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Constructs a {@code WanderlustDateTime}."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param dateTime A valid date and time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public WanderlustDateTime(String dateTime) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(dateTime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        checkArgument(isValidWanderlustDateTime(dateTime), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        value \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns if a given string is a valid activity date time."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static boolean isValidWanderlustDateTime(String test) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            VALID_DATE_STRING.parse(test);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public LocalDateTime getValue() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return value.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                || (other instanceof WanderlustDateTime // instanceof handles nulls"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                \u0026\u0026 value.equals(((WanderlustDateTime) other).value)); // state check"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 1,
      "lyeyixian": 71
    }
  },
  {
    "path": "src/main/java/seedu/address/model/activity/exceptions/ActivityNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.address.model.activity.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Signals that the operation is unable to find the specified activity."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class ActivityNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/model/activity/exceptions/DuplicateActivityException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.address.model.activity.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Signals that the operation will result in duplicate Activities"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * (Activities are considered duplicates if they have the same identity)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class DuplicateActivityException extends RuntimeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public DuplicateActivityException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        super(\"Operation would result in duplicate persons\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/commons/Cost.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.address.model.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents activity\u0027s or accommodation\u0027s cost in the travel plan."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidCost(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Cost {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            \"Cost should only contain numbers, and it should be a positive integer\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"\\\\p{Digit}+(.\\\\p{Digit}\\\\p{Digit})?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Constructs a {@code Cost}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param cost A valid cost."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Cost(String cost) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        requireNonNull(cost);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        checkArgument(isValidCost(cost), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        value \u003d cost;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Returns true if a given string is a valid cost."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static boolean isValidCost(String test) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                || (other instanceof Cost // instanceof handles nulls"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 value.equals(((Cost) other).value)); // state check"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 1,
      "jiaweiteo": 50,
      "lyeyixian": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/commons/Location.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.address.model.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Location {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Represents Activity\u0027s or Accommodation\u0027s location in the Travel plan."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Location can take any values, and it should not be blank\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * The first character of the address must not be a whitespace,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Constructs an {@code Address}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param location A valid address."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Location(String location) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        requireNonNull(location);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        value \u003d location;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Returns true if a given string is a valid location."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static boolean isValidLocation(String test) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                || (other instanceof Location // instanceof handles nulls"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 value.equals(((Location) other).value)); // state check"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 55,
      "lyeyixian": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/commons/Name.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.address.model.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents activity\u0027s or accommodation\u0027s or friend\u0027s name in the Travel Plan and also travel plan\u0027s name."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "public class Name {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \"Names should only contain alphanumeric characters, punctuations and spaces, and it should not be blank.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * The first character of the Name must not be a whitespace,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"(\\\\p{Graph}+\\\\p{Space}?)+\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public final String name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Constructs a {@code Name}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * @param name A valid name."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public Name(String name) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     * Returns true if a given string is a valid name."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public static boolean isValidName(String test) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                || (other instanceof Name // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                \u0026\u0026 name.equals(((Name) other).name)); // state check"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return name.hashCode();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 2,
      "jiaweiteo": 51,
      "lyeyixian": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/model/commons/NameContainsKeywordsPredicate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "package seedu.address.model.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.TravelPlan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Tests that a {@code TravelPlanObject}\u0027s or {@code TravelPlan}\u0027s {@code Name} matches any of the keywords given."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class NameContainsKeywordsPredicate implements Predicate\u003cObject\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    private final List\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean test(Object obj) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (obj instanceof TravelPlan) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "            return keywords.stream()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(((TravelPlan) obj).getName().name, keyword));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } else if (obj instanceof TravelPlanObject) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return keywords.stream()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    .anyMatch(keyword -\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                            StringUtil.containsWordIgnoreCase(((TravelPlanObject) obj).getName().name, keyword));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 27,
      "lyeyixian": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/model/commons/ReadOnlyActivityList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.model.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public interface ReadOnlyActivityList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns an unmodifiable view of the activities list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * This list will not contain any duplicate activities."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    ObservableList\u003cActivity\u003e getActivityList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 8,
      "lyeyixian": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/model/commons/TravelPlanObject.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public abstract class TravelPlanObject {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public abstract Name getName();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/model/commons/WanderlustDate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.model.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * Represents a TravelPlan\u0027s start/end date in the travel planner."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidWanderlustDate(String)}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class WanderlustDate {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be of the format YYYY-MM-DD.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Dates must be in the format YYYY-MM-DD."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}-[01]\\\\d-[0-3]\\\\d\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static final DateFormat VALID_DATE_STRING \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public final String date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final LocalDate value;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Constructs a {@code WanderlustDate}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * @param date A valid travel date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public WanderlustDate(String date) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        checkArgument(isValidWanderlustDate(date), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        value \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns if a given string is a valid travel date."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static boolean isValidWanderlustDate(String test) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (!test.matches(VALIDATION_REGEX)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            VALID_DATE_STRING.parse(test);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public LocalDate getValue() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return value.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                || (other instanceof WanderlustDate // instanceof handles nulls"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 value.equals(((WanderlustDate) other).value)); // state check"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 73,
      "lyeyixian": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/model/friend/Friend.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.friend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.commons.Name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents a Friend in the travel plan."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class Friend extends TravelPlanObject {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Identity fields"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Data fields"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Passport passport;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Phone phone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Friend(Name name, Passport passport, Phone phone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(name, passport, phone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.passport \u003d passport;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public Passport getPassport() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return passport;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public Phone getPhone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return phone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if both friends are of the same name"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isSameFriend(Friend otherFriend) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        if (otherFriend \u003d\u003d this) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return otherFriend !\u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherFriend.getName().equals(getName());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if both friends have the same identity and data fields."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * This defines a stronger notion of equality between two friends."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof Friend)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        Friend otherFriend \u003d (Friend) other;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return otherFriend.getName().equals(getName())"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherFriend.getPassport().equals(getPassport())"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherFriend.getPhone().equals(getPhone());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(name, passport, phone);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        builder.append(getName())"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(\" Passport number: \")"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(getPassport())"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(\" Mobile phone: \")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(getPhone());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 1,
      "lyeyixian": 4,
      "-": 92
    }
  },
  {
    "path": "src/main/java/seedu/address/model/friend/Passport.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.friend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents a Person\u0027s passport in the travel plan."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidPassport(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Passport {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Passport numbers should only contain 1 character and 7 numbers\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"\\\\w\\\\d{7}\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code Passport}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param passport A valid passport."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public Passport(String passport) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(passport);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(isValidPassport(passport), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        value \u003d passport;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if a given string is a valid passport."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidPassport(String test) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof Phone // instanceof handles nulls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 value.equals(((Phone) other).value)); // state check"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 2,
      "-": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/model/friend/Phone.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.friend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents a Friend\u0027s phone number in the travel plan."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Phone {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Phone numbers should only contain numbers, and it should be at least 8 digits long\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"\\\\d{8,}\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code Phone}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param phone A valid phone number."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public Phone(String phone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(phone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        value \u003d phone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a given string is a valid phone number."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidPhone(String test) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof Phone // instanceof handles nulls"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 value.equals(((Phone) other).value)); // state check"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 1,
      "-": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/model/friend/UniqueFriendList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.friend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.friend.exceptions.DuplicateFriendException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.friend.exceptions.FriendNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * A list of friends that enforces uniqueness between its elements and does not allow nulls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * A friend is considered unique by comparing using {@code Friend#isSameFriend(Friend)}. As such, adding and updating of"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * friends uses Friend#isSameFriend(Friend) for equality so as to ensure that the friend being added or updated is"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * unique in terms of identity in the UniqueFriendList. However, the removal of a person uses Friend#equals(Object) so"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * as to ensure that the friend with exactly the same fields will be removed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * @see Friend#isSameFriend(Friend)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class UniqueFriendList implements Iterable\u003cFriend\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ObservableList\u003cFriend\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ObservableList\u003cFriend\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the list contains an equivalent friend as the given argument."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean contains(Friend toCheck) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::isSameFriend);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a friend to the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * The friend must not already exist in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void add(Friend toAdd) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        if (contains(toAdd)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuplicateFriendException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        internalList.add(toAdd);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the friend {@code target} in the list with {@code editedFriend}."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code target} must exist in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * The friend identity of {@code editedFriend} must not be the same as another existing friend in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setFriend(Friend target, Friend editedFriend) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(target, editedFriend);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new FriendNotFoundException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!target.isSameFriend(editedFriend) \u0026\u0026 contains(editedFriend)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuplicateFriendException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        internalList.set(index, editedFriend);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes the equivalent friend from the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * The friend must exist in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public void remove(Friend toRemove) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new FriendNotFoundException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setFriends(UniqueFriendList replacement) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the contents of this list with {@code friends}."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code friends} must not contain duplicate friends."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setFriends(List\u003cFriend\u003e friends) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(friends);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!personsAreUnique(friends)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuplicateFriendException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        internalList.setAll(friends);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cFriend\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}, with each Friend object"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * typecast to TravelPlanObject (TPO)."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cTravelPlanObject\u003e asUnmodifiableObservableTpoList() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return internalList.stream().map(item -\u003e (TravelPlanObject) item)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                .collect(Collectors.collectingAndThen(Collectors.toList(), l -\u003e FXCollections.observableArrayList(l)));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public Iterator\u003cFriend\u003e iterator() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof UniqueFriendList // instanceof handles nulls"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 internalList.equals(((UniqueFriendList) other).internalList));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code friends} contains only unique friends."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean personsAreUnique(List\u003cFriend\u003e friends) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c friends.size() - 1; i++) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int j \u003d i + 1; j \u003c friends.size(); j++) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                if (friends.get(i).isSameFriend(friends.get(j))) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 11,
      "-": 137
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplan/AccommodationList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.model.travelplan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.accommodation.Accommodation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.accommodation.UniqueAccommodationList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents the list of Accommodations in a travel plan"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * Duplicates are not allowed (by .isSameAccommodation comparison)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class AccommodationList implements ReadOnlyAccommodationList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final UniqueAccommodationList accommodations;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        accommodations \u003d new UniqueAccommodationList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public AccommodationList() {}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Creates an AccommodationList using the Accommodations in the {@code toBeCopied}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public AccommodationList(AccommodationList toBeCopied) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Replaces the contents of the accommodation list with {@code accommodations}."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code accommodations} must not contain duplicate accommodations."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void setAccommodations(List\u003cAccommodation\u003e accommodations) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.accommodations.setAccommodations(accommodations);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Resets the existing data of this {@code AccommodationList} with {@code newData}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void resetData(ReadOnlyAccommodationList newData) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        setAccommodations(newData.getAccommodationList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// accommodation-level operations"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns true if a accommodation with the same identity as {@code accommodation} exists in the accommodation list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean hasAccommodation(Accommodation accommodation) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(accommodation);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return accommodations.contains(accommodation);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Adds a accommodation to the accommodation list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The accommodation must not already exist in the accommodation list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void addAccommodation(Accommodation p) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        accommodations.add(p);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Replaces the given accommodation {@code target} in the list with {@code editedAccommodation}."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code target} must exist in the accommodation list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The accommodation identity of {@code editedAccommodation} must not be the same as another existing accommodation"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * in the accommodation list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void setAccommodation(Accommodation target, Accommodation editedAccommodation) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(editedAccommodation);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        accommodations.setAccommodation(target, editedAccommodation);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Removes {@code key} from this {@code AccommodationList}."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code key} must exist in the accommodation list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void removeAccommodation(Accommodation key) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        accommodations.remove(key);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        builder.append(\" Accommodations: \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        getAccommodationList().forEach(builder::append);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cAccommodation\u003e getAccommodationList() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return accommodations.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cTravelPlanObject\u003e getTpoList() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return accommodations.asUnmodifiableObservableTpoList();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                || (other instanceof AccommodationList // instanceof handles nulls"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 accommodations.equals(((AccommodationList) other).accommodations));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return accommodations.hashCode();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 124,
      "lyeyixian": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplan/ActivityList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.model.travelplan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.activity.UniqueActivityList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.ReadOnlyActivityList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents the list of activities in a travel plan"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * Duplicates are not allowed (by .isSameTravelPlan comparison)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class ActivityList implements ReadOnlyActivityList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final UniqueActivityList activities;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        activities \u003d new UniqueActivityList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ActivityList() {}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates an ActivityList using the Activities in the {@code toBeCopied}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ActivityList(ReadOnlyActivityList toBeCopied) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Replaces the contents of the activity list with {@code activities}."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code activities} must not contain duplicate activities."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void setActivities(List\u003cActivity\u003e activities) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.activities.setActivities(activities);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Resets the existing data of this {@code ActvityList} with {@code newData}."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void resetData(ReadOnlyActivityList newData) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        setActivities(newData.getActivityList());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// activity-level operations"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns true if an activity with the same identity as {@code activity} exists in the activity list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean hasActivity(Activity activity) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(activity);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return activities.contains(activity);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Adds an activity to the activity list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The activity must not already exist in the activity list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void addActivity(Activity activity) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        activities.add(activity);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Replaces the given activity {@code target} in the list with {@code editedActivity}."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code target} must exist in the activity list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The activity identity of {@code editedActivity} must not be the same as another existing activity in the"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * activity list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void setActivity(Activity target, Activity editedActivity) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(editedActivity);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        activities.setActivity(target, editedActivity);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Removes {@code key} from this {@code ActivityList}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code key} must exist in the activity list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void removeActivity(Activity key) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        activities.remove(key);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        builder.append(\" Activities: \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        getActivityList().forEach(builder::append);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cActivity\u003e getActivityList() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return activities.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cTravelPlanObject\u003e getTpoList() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return activities.asUnmodifiableObservableTpoList();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                || (other instanceof ActivityList // instanceof handles nulls"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 activities.equals(((ActivityList) other).activities));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return activities.hashCode();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 128,
      "lyeyixian": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplan/FriendList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.model.travelplan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.friend.Friend;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.friend.UniqueFriendList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents the list of friends in a travel plan"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * Duplicates are not allowed (by .isSameFriend comparison)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class FriendList implements ReadOnlyFriendList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final UniqueFriendList friends;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        friends \u003d new UniqueFriendList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public FriendList() {}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates an seedu.address.model.FriendList using the Friends in the {@code toBeCopied}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public FriendList(FriendList toBeCopied) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Replaces the contents of the friend list with {@code friends}."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code friends} must not contain duplicate friends."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void setFriends(List\u003cFriend\u003e friends) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.friends.setFriends(friends);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Resets the existing data of this {@code seedu.address.model.FriendList} with {@code newData}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void resetData(ReadOnlyFriendList newData) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        setFriends(newData.getFriendList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// friend-level operations"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns true if a friend with the same identity as {@code friend} exists in the friend list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean hasFriend(Friend friend) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(friend);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return friends.contains(friend);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Adds a friend to the friend list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The friend must not already exist in the friend list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void addFriend(Friend p) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        friends.add(p);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Replaces the given friend {@code target} in the list with {@code editedFriend}."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code target} must exist in the friend list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The friend identity of {@code editedFriend} must not be the same as another existing friend in the friend list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void setFriend(Friend target, Friend editedFriend) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(editedFriend);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        friends.setFriend(target, editedFriend);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Removes {@code key} from this {@code seedu.address.model.FriendList}."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code key} must exist in the friend list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void removeFriend(Friend key) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        friends.remove(key);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        builder.append(\" Friends: \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        getFriendList().forEach(builder::append);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cFriend\u003e getFriendList() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return friends.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cTravelPlanObject\u003e getTpoList() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return friends.asUnmodifiableObservableTpoList();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                || (other instanceof FriendList // instanceof handles nulls"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 friends.equals(((FriendList) other).friends));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return friends.hashCode();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 126,
      "lyeyixian": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplan/ReadOnlyAccommodationList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.model.travelplan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.accommodation.Accommodation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public interface ReadOnlyAccommodationList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns an unmodifiable view of the accommodation list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * This list will not contain any duplicate accommodations."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    ObservableList\u003cAccommodation\u003e getAccommodationList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 10,
      "lyeyixian": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplan/ReadOnlyFriendList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.model.travelplan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.friend.Friend;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public interface ReadOnlyFriendList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns an unmodifiable view of the friend list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * This list will not contain any duplicate friends."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    ObservableList\u003cFriend\u003e getFriendList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 8,
      "lyeyixian": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplan/TravelPlan.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.model.travelplan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.accommodation.Accommodation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.Name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.WanderlustDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.friend.Friend;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.Directory;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents a travel plan in the travel planner"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * Duplicates are not allowed (by .isSameTravelPlan comparison)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class TravelPlan extends Directory {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Start Date should be before or on the same date as End Date.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    // Identity fields"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final WanderlustDate startDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final WanderlustDate endDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    // Data fields"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final ActivityList activities \u003d new ActivityList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final AccommodationList accommodations \u003d new AccommodationList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final FriendList friends \u003d new FriendList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates an empty TravelPlan with only the name, startDate and endDate."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public TravelPlan(Name name, WanderlustDate startDate, WanderlustDate endDate) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        checkArgument(isValidStartAndEndDate(startDate, endDate), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates an TravelPlan using the Accommodations, Activities and Friends in the {@code accommodationsToBeCopied},"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code activitiesToBeCopied} and {@code friendsTobeCopied}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public TravelPlan(Name name, WanderlustDate startDate, WanderlustDate endDate,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                      ActivityList activitiesToBeCopied,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                      AccommodationList accommodationsToBeCopied,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                      FriendList friendsTobeCopied) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        accommodations.resetData(accommodationsToBeCopied);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        activities.resetData(activitiesToBeCopied);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        friends.resetData(friendsTobeCopied);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns true if the start date is before or on the same day as end date."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static boolean isValidStartAndEndDate(WanderlustDate startDate, WanderlustDate endDate) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return startDate.getValue().compareTo(endDate.getValue()) \u003c\u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// travel plan object-level operations"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns true if a travel plan object with the same identity as {@code travelPlanObject} exists in the travel plan"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * object\u0027s list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean hasTravelPlanObject(TravelPlanObject travelPlanObject) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (travelPlanObject instanceof Accommodation) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return accommodations.hasAccommodation((Accommodation) travelPlanObject);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        } else if (travelPlanObject instanceof Activity) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return activities.hasActivity((Activity) travelPlanObject);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        } else { // if travelPlanObject instanceof Friend"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return friends.hasFriend((Friend) travelPlanObject);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Adds a travel plan object to its corresponding list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The travel plan object must not already exist in its corresponding list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void addTravelPlanObject(TravelPlanObject travelPlanObject) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (travelPlanObject instanceof Accommodation) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            accommodations.addAccommodation((Accommodation) travelPlanObject);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        } else if (travelPlanObject instanceof Activity) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            activities.addActivity((Activity) travelPlanObject);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        } else { // if travelPlanObject instanceof Friend"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            friends.addFriend((Friend) travelPlanObject);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Replaces the given travel plan object {@code target} in the list with {@code editedTravelPlanObject}."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code target} must exist in the corresponding travel plan object list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The travel plan object identity of {@code editedTravelPlanObject} must not be the same as another existing"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * travel plan object in the corresponding travel plan object list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void setTravelPlanObject(TravelPlanObject target, TravelPlanObject editedTravelPlanObject) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (editedTravelPlanObject instanceof Accommodation) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            accommodations.setAccommodation((Accommodation) target, (Accommodation) editedTravelPlanObject);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        } else if (editedTravelPlanObject instanceof Activity) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            activities.setActivity((Activity) target, (Activity) editedTravelPlanObject);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        } else { // if editedTravelPlanObject instanceof Friend"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            friends.setFriend((Friend) target, (Friend) editedTravelPlanObject);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Removes {@code key} from the corresponding travel plan object list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code key} must exist in the corresponding travel plan object list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void removeTravelPlanObject(TravelPlanObject key) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (key instanceof Accommodation) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            accommodations.removeAccommodation((Accommodation) key);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        } else if (key instanceof Activity) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            activities.removeActivity((Activity) key);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        } else { // if key instanceof Friend"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            friends.removeFriend((Friend) key);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// travel plan identity methods"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public WanderlustDate getStartDate() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public WanderlustDate getEndDate() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns true if both travel plans of the same name have at least one other identity field that is the same."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * This defines a weaker notion of equality between two travel plans."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean isSameTravelPlan(TravelPlan otherTravelPlan) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (otherTravelPlan \u003d\u003d this) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return otherTravelPlan !\u003d null"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 otherTravelPlan.getName().equals(getName())"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 (otherTravelPlan.getStartDate().equals(getStartDate())"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                || otherTravelPlan.getEndDate().equals(getEndDate()));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        builder.append(getName())"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                .append(\" Start Date: \")"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                .append(getStartDate())"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                .append(\" End Date: \")"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                .append(getEndDate());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        builder.append(accommodations)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                .append(activities)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                .append(friends);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// travel plan data methods"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cAccommodation\u003e getAccommodationList() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return accommodations.getAccommodationList();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cTravelPlanObject\u003e getAccommodationTpoList() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return accommodations.getTpoList();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cActivity\u003e getActivityList() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return activities.getActivityList();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cTravelPlanObject\u003e getActivityTpoList() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return activities.getTpoList();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cFriend\u003e getFriendList() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return friends.getFriendList();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cTravelPlanObject\u003e getFriendTpoList() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return friends.getTpoList();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean isTravelPlan() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean isWishlist() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                || (other instanceof TravelPlan // instanceof handles nulls"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 name.equals(((TravelPlan) other).name)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 startDate.equals(((TravelPlan) other).startDate)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 endDate.equals(((TravelPlan) other).endDate)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 accommodations.equals(((TravelPlan) other).accommodations)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 activities.equals(((TravelPlan) other).activities)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 friends.equals(((TravelPlan) other).friends));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return Objects.hash(name, startDate, endDate, accommodations, activities, friends);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 207,
      "lyeyixian": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplan/UniqueTravelPlanList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.travelplan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.exceptions.DuplicateTravelPlanException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.exceptions.TravelPlanNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * A list of travel plans that enforces uniqueness between its elements and does not allow nulls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * A travel plan is considered unique by comparing using {@code TravelPlan#isSameTravelPlan(TravelPlan)}. As such,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * adding and updating of travel plans uses TravelPlan#isSameTravelPlan(TravelPlan) for equality so as to ensure that"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * the travel plan being added or updated is unique in terms of identity in the UniqueTravelPlanList. However, the"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * removal of a travel plan uses TravelPlan#equals(Object) so as to ensure that the travel plan with exactly the same"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * fields will be removed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * @see TravelPlan#isSameTravelPlan(TravelPlan)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class UniqueTravelPlanList implements Iterable\u003cTravelPlan\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final ObservableList\u003cTravelPlan\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final ObservableList\u003cTravelPlan\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if the list contains an equivalent travel plan as the given argument."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean contains(TravelPlan toCheck) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::isSameTravelPlan);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Adds a travel plan to the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The travel plan must not already exist in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void add(TravelPlan toAdd) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (contains(toAdd)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DuplicateTravelPlanException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        internalList.add(toAdd);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces the travel plan {@code target} in the list with {@code editedTravelPlan}."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code target} must exist in the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The travel plan identity of {@code editedTravelPlan} must not be the same as another existing travel plan in the"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setTravelPlan(TravelPlan target, TravelPlan editedTravelPlan) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireAllNonNull(target, editedTravelPlan);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new TravelPlanNotFoundException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!target.isSameTravelPlan(editedTravelPlan) \u0026\u0026 contains(editedTravelPlan)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DuplicateTravelPlanException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        internalList.set(index, editedTravelPlan);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Removes the equivalent travel plan from the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The travel plan must exist in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void remove(TravelPlan toRemove) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new TravelPlanNotFoundException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setTravelPlans(UniqueTravelPlanList replacement) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces the contents of this list with {@code travelPlans}."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code travelPlans} must not contain duplicate travel plans."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setTravelPlans(List\u003cTravelPlan\u003e travelPlans) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireAllNonNull(travelPlans);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!travelPlansAreUnique(travelPlans)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DuplicateTravelPlanException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        internalList.setAll(travelPlans);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ObservableList\u003cTravelPlan\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Iterator\u003cTravelPlan\u003e iterator() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                || (other instanceof UniqueTravelPlanList // instanceof handles nulls"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                \u0026\u0026 internalList.equals(((UniqueTravelPlanList) other).internalList));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if {@code travelPlans} contains only unique travel plans."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private boolean travelPlansAreUnique(List\u003cTravelPlan\u003e travelPlans) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (int i \u003d 0; i \u003c travelPlans.size() - 1; i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            for (int j \u003d i + 1; j \u003c travelPlans.size(); j++) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                if (travelPlans.get(i).isSameTravelPlan(travelPlans.get(j))) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 139
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplan/exceptions/DuplicateTravelPlanException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.travelplan.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Signals that the operation will result in duplicate TravelPlans (TravelPlans are considered duplicates if they have"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * the same"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * identity)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class DuplicateTravelPlanException extends RuntimeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public DuplicateTravelPlanException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(\"Operation would result in duplicate persons\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplan/exceptions/TravelPlanNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.travelplan.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Signals that the operation is unable to find the specified travel plan."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class TravelPlanNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplanner/Directory.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents the current directory of wanderlust, which can be instance of TravelPlan or Wishlist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public abstract class Directory {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if current directory is a travel plan, false otherwise."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public abstract boolean isTravelPlan();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if current directory is a wishlist, false otherwise."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public abstract boolean isWishlist();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplanner/Model.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.TravelPlan;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /** {@code Predicate} that always evaluate to true */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Predicate\u003cTravelPlan\u003e PREDICATE_SHOW_ALL_TRAVEL_PLAN \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /** {@code Predicate} that always evaluate to true */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Predicate\u003cActivity\u003e PREDICATE_SHOW_ALL_ACTIVITY \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns the user prefs."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns the user prefs\u0027 travel planner file path."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Path getTravelPlannerFilePath();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Sets the user prefs\u0027 travel planner file path."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void setTravelPlannerFilePath(Path travelPlannerFilePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces travel planner data with the data in {@code travelPlanner}."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void setTravelPlanner(ReadOnlyTravelPlanner travelPlanner);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /** Returns the TravelPlanner */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    ReadOnlyTravelPlanner getTravelPlanner();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if a travel plan with the same identity as {@code travelPlan} exists in the travel planner."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    boolean hasTravelPlan(TravelPlan travelPlan);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if an activity with the same identity as {@code activity} exists in the wishlist."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    boolean hasActivity(Activity activity);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if a travel plan object with the same identity as {@code tPObj} exists in the travel plan."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    boolean hasTravelPlanObject(TravelPlanObject tPObj);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Deletes the given travel plan."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The travel plan must exist in the travel planner."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void deleteTravelPlan(TravelPlan target);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Deletes the given activity."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The activity must exist in the wishlist."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void deleteActivity(Activity target);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Deletes the given travel plan object."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The travel plan object must exist in the travel plan."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void deleteTravelPlanObject(TravelPlanObject tPObj);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Adds the given travel plan."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code travelPlan} must not already exist in the travel planner."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void addTravelPlan(TravelPlan travelPlan);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Adds the given activity."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code activity} must not already exist in the wishlist."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void addActivity(Activity activity);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Adds the given travel plan object."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code tpObj} must not already exist in the travel plan."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void addTravelPlanObject(TravelPlanObject tPObj);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces the given travel plan {@code target} with {@code editedTravelPlan}."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code target} must exist in the travel planner."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The travel plan identity of {@code editedTravelPlan} must not be the same as another existing travel plan in the"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * travel planner."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void setTravelPlan(TravelPlan target, TravelPlan editedTravelPlan);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces the given activity {@code target} with {@code editedActivity}."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code target} must exist in the wishlist."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The activity identity of {@code editedActivity} must not be the same as another existing activity in the"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * wishlist."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void setActivity(Activity target, Activity editedActivity);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces the given travel plan object {@code target} with {@code editedTravelPlanObject}."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code target} must exist in the travel plan."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The travel plan object identity of {@code editedTravelPlanObject} must not be the same as another existing travel"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * plan object in the travel plan."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void setTravelPlanObject(TravelPlanObject target, TravelPlanObject editedTravelPlanObject);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /** Returns an unmodifiable view of the filtered travel plan list */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    ObservableList\u003cTravelPlan\u003e getFilteredTravelPlanList();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /** Returns an unmodifiable view of the filtered wishlist */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    ObservableList\u003cActivity\u003e getFilteredWishlist();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /** Returns an unmodifiable view of the filtered travel plan object list */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    ObservableList\u003c? extends TravelPlanObject\u003e getFilteredTravelPlanObjectList();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Updates the filter of the filtered travel plan list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void updateFilteredTravelPlanList(Predicate\u003cTravelPlan\u003e predicate);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Updates the filter of the filtered wishlist to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void updateFilteredWishlist(Predicate\u003cActivity\u003e predicate);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Updates the filter of the filtered travel plan object list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void updateFilteredTravelPlanObjectList(Predicate\u003cTravelPlanObject\u003e predicate);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces the directory with {@code dir}."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code dir} must exist in the travel planner."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void setDirectory(Directory dir);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns the current directory that the wanderlust is currently in."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Directory getDirectory();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Sets the current filtered travel plan object list to activity list."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void setToActivityList();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Sets the current filtered travel plan object list to accommodation list."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void setToAccommodationList();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Sets the current filtered travel plan object list to friend list."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void setToFriendList();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 188
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplanner/ModelManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.TravelPlan;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents the in-memory model of the travel planner data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final TravelPlanner travelPlanner;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final FilteredList\u003cTravelPlan\u003e filteredTravelPlans;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final FilteredList\u003cActivity\u003e filteredWishlist;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Directory directory;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private TravelPlan currentTravelPlan;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private FilteredList\u003c? extends TravelPlanObject\u003e currentFilteredTravelPlanObjectList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Initializes a ModelManager with the given travelPlanner and userPrefs."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ModelManager(ReadOnlyTravelPlanner travelPlanner, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireAllNonNull(travelPlanner, userPrefs);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        logger.fine(\"Initializing with travel planner: \" + travelPlanner + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.travelPlanner \u003d new TravelPlanner(travelPlanner);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        filteredTravelPlans \u003d new FilteredList\u003c\u003e(this.travelPlanner.getTravelPlanList());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        filteredWishlist \u003d new FilteredList\u003c\u003e(this.travelPlanner.getWishlist());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        directory \u003d this.travelPlanner.getWishlistAsDirectory();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this(new TravelPlanner(), new UserPrefs());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Path getTravelPlannerFilePath() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return userPrefs.getTravelPlannerFilePath();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setTravelPlannerFilePath(Path travelPlannerFilePath) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(travelPlannerFilePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        userPrefs.setTravelPlannerFilePath(travelPlannerFilePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TravelPlanner \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setTravelPlanner(ReadOnlyTravelPlanner travelPlanner) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.travelPlanner.resetData(travelPlanner);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ReadOnlyTravelPlanner getTravelPlanner() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return travelPlanner;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean hasTravelPlan(TravelPlan travelPlan) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(travelPlan);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return travelPlanner.hasTravelPlan(travelPlan);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void deleteTravelPlan(TravelPlan target) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlanner.removeTravelPlan(target);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void addTravelPlan(TravelPlan travelPlan) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlanner.addTravelPlan(travelPlan);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        updateFilteredTravelPlanList(PREDICATE_SHOW_ALL_TRAVEL_PLAN);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setTravelPlan(TravelPlan target, TravelPlan editedTravelPlan) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireAllNonNull(target, editedTravelPlan);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlanner.setTravelPlan(target, editedTravelPlan);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Wishlist \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean hasActivity(Activity activity) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(activity);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return travelPlanner.hasActivity(activity);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void deleteActivity(Activity target) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlanner.removeActivity(target);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void addActivity(Activity activity) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlanner.addActivity(activity);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        updateFilteredWishlist(PREDICATE_SHOW_ALL_ACTIVITY);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setActivity(Activity target, Activity editedActivity) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireAllNonNull(target, editedActivity);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlanner.setActivity(target, editedActivity);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Directory \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setDirectory(Directory dir) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        directory \u003d dir;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        setCurrentTravelPlan();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Directory getDirectory() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return directory;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Sets the current travel plan to the current directory."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private void setCurrentTravelPlan() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (directory.isTravelPlan()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            currentTravelPlan \u003d (TravelPlan) directory;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            currentFilteredTravelPlanObjectList \u003d new FilteredList\u003c\u003e(currentTravelPlan.getActivityList());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setToActivityList() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        currentFilteredTravelPlanObjectList \u003d new FilteredList\u003c\u003e(currentTravelPlan.getActivityList());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setToAccommodationList() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        currentFilteredTravelPlanObjectList \u003d new FilteredList\u003c\u003e(currentTravelPlan.getAccommodationList());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setToFriendList() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        currentFilteredTravelPlanObjectList \u003d new FilteredList\u003c\u003e(currentTravelPlan.getFriendList());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TravelPlanObject \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean hasTravelPlanObject(TravelPlanObject tPObj) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(tPObj);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return currentTravelPlan.hasTravelPlanObject(tPObj);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void deleteTravelPlanObject(TravelPlanObject tPObj) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        currentTravelPlan.removeTravelPlanObject(tPObj);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void addTravelPlanObject(TravelPlanObject tPObj) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        currentTravelPlan.addTravelPlanObject(tPObj);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setTravelPlanObject(TravelPlanObject target, TravelPlanObject editedTravelPlanObject) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireAllNonNull(target, editedTravelPlanObject);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        currentTravelPlan.setTravelPlanObject(target, editedTravelPlanObject);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered TravelPlan List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code TravelPlan} backed by the internal list of"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code TravelPlanner}"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ObservableList\u003cTravelPlan\u003e getFilteredTravelPlanList() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return filteredTravelPlans;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void updateFilteredTravelPlanList(Predicate\u003cTravelPlan\u003e predicate) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        filteredTravelPlans.setPredicate(predicate);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Wishlist List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Activity} backed by the internal list of"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code Wishlist}"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ObservableList\u003cActivity\u003e getFilteredWishlist() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return filteredWishlist;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void updateFilteredWishlist(Predicate\u003cActivity\u003e predicate) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        filteredWishlist.setPredicate(predicate);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered TravelPLanObject List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code ? extends TravelPlanObject} backed by the internal list of"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code TravelPlan}"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ObservableList\u003c? extends TravelPlanObject\u003e getFilteredTravelPlanObjectList() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return currentFilteredTravelPlanObjectList;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void updateFilteredTravelPlanObjectList(Predicate\u003cTravelPlanObject\u003e predicate) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        currentFilteredTravelPlanObjectList.setPredicate(predicate);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!(obj instanceof ModelManager)) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        ModelManager other \u003d (ModelManager) obj;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return travelPlanner.equals(other.travelPlanner)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                \u0026\u0026 userPrefs.equals(other.userPrefs)"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                \u0026\u0026 filteredTravelPlans.equals(other.filteredTravelPlans);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 282
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplanner/ReadOnlyTravelPlanner.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.TravelPlan;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Unmodifiable view of a travel planner"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public interface ReadOnlyTravelPlanner {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns an unmodifiable view of the travel plans list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * This list will not contain any duplicate travel plans."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    ObservableList\u003cTravelPlan\u003e getTravelPlanList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns an unmodifiable view of the wishlist."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * This list will not contain any duplicate activities."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    ObservableList\u003cActivity\u003e getWishlist();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplanner/ReadOnlyUserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Unmodifiable view of user prefs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public interface ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Path getTravelPlannerFilePath();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplanner/TravelPlanner.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.activity.UniqueActivityList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.TravelPlan;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.UniqueTravelPlanList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Wraps all data at the travel planner level"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Duplicates are not allowed (by .isSameTravelPlan comparison)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class TravelPlanner implements ReadOnlyTravelPlanner {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final UniqueTravelPlanList travelPlans;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final UniqueActivityList wishlist;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlans \u003d new UniqueTravelPlanList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        wishlist \u003d new UniqueActivityList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public TravelPlanner() {}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Creates an TravelPlanner using the TravelPlans in the {@code toBeCopied}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public TravelPlanner(ReadOnlyTravelPlanner toBeCopied) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces the contents of the travel plan list with {@code travelPlans}."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code travelPlans} must not contain duplicate travel plans."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setTravelPlans(List\u003cTravelPlan\u003e travelPlans) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.travelPlans.setTravelPlans(travelPlans);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces the contents of the wishlist with {@code wishlist}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code wishlist} must not contain duplicate activities."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setWishlist(List\u003cActivity\u003e wishlist) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.wishlist.setActivities(wishlist);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Resets the existing data of this {@code TravelPlanner} with {@code newData}."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void resetData(ReadOnlyTravelPlanner newData) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        setTravelPlans(newData.getTravelPlanList());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        setWishlist(newData.getWishlist());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    //// person-level operations"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if a travel plan with the same identity as {@code travelPlan} exists in the travel planner."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean hasTravelPlan(TravelPlan travelPlan) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(travelPlan);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return travelPlans.contains(travelPlan);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns true if an activity with the same identity as {@code activity} exists in the wishlist."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean hasActivity(Activity activity) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(activity);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return wishlist.contains(activity);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Adds a travel plan to the travel planner."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The travel plan must not already exist in the travel planner."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void addTravelPlan(TravelPlan tP) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlans.add(tP);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Adds an activity to the wishlist."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void addActivity(Activity activity) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        wishlist.add(activity);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces the given travel plan {@code target} in the list with {@code editedTravelPlan}."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code target} must exist in the travel planner."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The travel plan identity of {@code editedTravelPlan} must not be the same as another existing travel plan in the"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * travel planner."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setTravelPlan(TravelPlan target, TravelPlan editedTravelPlan) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(editedTravelPlan);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlans.setTravelPlan(target, editedTravelPlan);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replaces the given activity {@code target} in the list with {@code editedActivity}."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code target} must exist in the wishlist."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * The activity identity of {@code editedActivity} must not be the same as another existing activity in the"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * wishlist."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setActivity(Activity target, Activity editedActivity) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(editedActivity);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        wishlist.setActivity(target, editedActivity);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Removes {@code key} from this {@code TravelPlanner}."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code key} must exist in the travel planner."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void removeTravelPlan(TravelPlan key) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlans.remove(key);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Removes {@code key} from this {@code Wishlist}."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * {@code key} must exist in the wishlist."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void removeActivity(Activity key) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        wishlist.remove(key);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns the wishlist as a UniqueActivityList."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Used to initialize the directory."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public UniqueActivityList getWishlistAsDirectory() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return wishlist;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return travelPlans.asUnmodifiableObservableList().size() + \" travel plans\\n\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                + wishlist.asUnmodifiableObservableList().size() + \" activities\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        // TODO: refine later"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ObservableList\u003cTravelPlan\u003e getTravelPlanList() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return travelPlans.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ObservableList\u003cActivity\u003e getWishlist() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return wishlist.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                || (other instanceof TravelPlanner // instanceof handles nulls"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                \u0026\u0026 travelPlans.equals(((TravelPlanner) other).travelPlans)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                \u0026\u0026 wishlist.equals(((TravelPlanner) other).wishlist));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        // TODO: need consider wishlist\u0027s hashcode also"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return Objects.hash(travelPlans, wishlist);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 186
    }
  },
  {
    "path": "src/main/java/seedu/address/model/travelplanner/UserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.model.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents User\u0027s preferences."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class UserPrefs implements ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private GuiSettings guiSettings \u003d new GuiSettings();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Path travelPlannerFilePath \u003d Paths.get(\"data\" , \"travelplanner.json\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Creates a {@code UserPrefs} with default values."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public UserPrefs() {}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public UserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        resetData(userPrefs);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void resetData(ReadOnlyUserPrefs newUserPrefs) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(newUserPrefs);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        setGuiSettings(newUserPrefs.getGuiSettings());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        setTravelPlannerFilePath(newUserPrefs.getTravelPlannerFilePath());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return guiSettings;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.guiSettings \u003d guiSettings;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Path getTravelPlannerFilePath() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return travelPlannerFilePath;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setTravelPlannerFilePath(Path travelPlannerFilePath) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(travelPlannerFilePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.travelPlannerFilePath \u003d travelPlannerFilePath;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!(other instanceof UserPrefs)) { //this handles null as well."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        UserPrefs o \u003d (UserPrefs) other;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return guiSettings.equals(o.guiSettings)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                \u0026\u0026 travelPlannerFilePath.equals(o.travelPlannerFilePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return Objects.hash(guiSettings, travelPlannerFilePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        sb.append(\"Gui Settings : \" + guiSettings);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        sb.append(\"\\nLocal data file location : \" + travelPlannerFilePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 86
    }
  },
  {
    "path": "src/main/java/seedu/address/model/util/SampleWanderlustDataUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.accommodation.Accommodation;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.activity.Importance;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.activity.WanderlustDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.Cost;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.Location;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.Name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.WanderlustDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.friend.Friend;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.friend.Passport;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.friend.Phone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.travelplan.TravelPlan;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyTravelPlanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.travelplanner.TravelPlanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class SampleWanderlustDataUtil {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private static TravelPlan sampleTravelPlan1 \u003d new TravelPlan(new Name(\"Trip to Hawaii\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new WanderlustDate(\"2020-11-01\"), new WanderlustDate(\"2020-12-31\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private static TravelPlan sampleTravelPlan2 \u003d new TravelPlan(new Name(\"Netherlands Getaway\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new WanderlustDate(\"2021-01-01\"), new WanderlustDate(\"2021-12-31\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static Friend[] getSampleFriends1() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return new Friend[] {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Friend(new Name(\"Alex Yeoh\"), new Passport(\"M1234567\"), new Phone(\"87438807\")),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Friend(new Name(\"Bernice Yu\"), new Passport(\"E1234567\"), new Phone(\"99272758\")),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Friend(new Name(\"Charlotte Oliveiro\"), new Passport(\"C1234567\"), new Phone(\"93210283\")),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Friend(new Name(\"David Li\"), new Passport(\"D1234567\"), new Phone(\"991031282\"))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        };"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static Friend[] getSampleFriends2() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return new Friend[] {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Friend(new Name(\"Lye Yi Xian\"), new Passport(\"G7654321\"), new Phone(\"92421847\")),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Friend(new Name(\"Teo Jia Wei\"), new Passport(\"S7654321\"), new Phone(\"81238032\")),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Friend(new Name(\"Timothy Ong\"), new Passport(\"R7654321\"), new Phone(\"91274810\")),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Friend(new Name(\"Lim Hai Shan\"), new Passport(\"B7654321\"), new Phone(\"89002939\")),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Friend(new Name(\"Jeanne Toh\"), new Passport(\"J7654321\"), new Phone(\"88234200\"))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        };"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static Accommodation[] getSampleAccommodations1() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return new Accommodation[] {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Accommodation(new Name(\"Pooh\u0027s House\"), new WanderlustDate(\"2020-12-12\"),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new WanderlustDate(\"2020-12-31\"), new Cost(\"50\"), new Location(\"100 Acre Woods\")),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Accommodation(new Name(\"Hogwarts\"), new WanderlustDate(\"2020-11-11\"),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new WanderlustDate(\"2020-11-25\"), new Cost(\"10000\"), new Location(\"London\"))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static Accommodation[] getSampleAccommodations2() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return new Accommodation[] {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Accommodation(new Name(\"River Island\"), new WanderlustDate(\"2021-07-12\"),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new WanderlustDate(\"2021-08-31\"), new Cost(\"6000\"), new Location(\"Stardew Valley\")),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Accommodation(new Name(\"Snow Cabin\"), new WanderlustDate(\"2021-09-01\"),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new WanderlustDate(\"2020-09-25\"), new Cost(\"200\"), new Location(\"Ice Valley\"))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        };"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static Activity[] getSampleActivities1() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return new Activity[] {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Activity(new Name(\"Bungee Jumping\"), new Location(\"Sentosa\"), new Cost(\"200\"),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new Importance(\"2\"), new WanderlustDateTime(\"2020-12-12 11:00\")),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Activity(new Name(\"Eat Bingsu\"), new Location(\"Snowflake Street\"), new Cost(\"5\"),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new Importance(\"3\"), new WanderlustDateTime(\"2020-12-23 17:00\")),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Activity(new Name(\"Cherry Picking\"), new Location(\"The Woods\"), new Cost(\"50\"),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new Importance(\"5\"), new WanderlustDateTime(\"2020-12-13 09:00\")),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Activity(new Name(\"Music Festival\"), new Location(\"Tomorrowland Avenue\"), new Cost(\"500\"),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new Importance(\"1\"), new WanderlustDateTime(\"2020-12-12 23:59\"))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        };"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static Activity[] getSampleActivities2() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return new Activity[] {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Activity(new Name(\"Ice Fishing\"), new Location(\"Ice Park\"), new Cost(\"20\"),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new Importance(\"5\"), new WanderlustDateTime(\"2021-07-22 23:00\")),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Activity(new Name(\"Visit the National Museum\"), new Location(\"Museum Lane 5\"), new Cost(\"5\"),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new Importance(\"2\"), new WanderlustDateTime(\"2021-06-09 17:40\")),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Activity(new Name(\"Ice Skating\"), new Location(\"Skating Rink Avenue\"), new Cost(\"30\"),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new Importance(\"1\"), new WanderlustDateTime(\"2021-01-05 09:21\")),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            new Activity(new Name(\"Mountain Climbing\"), new Location(\"Tomorrowland\"), new Cost(\"100\"),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    new Importance(\"4\"), new WanderlustDateTime(\"2021-02-23 20:59\"))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        };"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static TravelPlan getSampleTravelPlan(TravelPlan sampleTravelPlan, Activity[] sampleActivities,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            Accommodation[] sampleAccommodations, Friend[] sampleFriends) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        for (Friend sampleFriend : sampleFriends) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            sampleTravelPlan.addTravelPlanObject(sampleFriend);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        for (Activity sampleActivity : sampleActivities) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            sampleTravelPlan.addTravelPlanObject(sampleActivity);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        for (Accommodation sampleAccommodation : sampleAccommodations) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            sampleTravelPlan.addTravelPlanObject(sampleAccommodation);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return sampleTravelPlan;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static TravelPlan[] getSampleTravelPlans() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return new TravelPlan[] {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            getSampleTravelPlan(sampleTravelPlan1, getSampleActivities1(), getSampleAccommodations1(),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    getSampleFriends1()),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            getSampleTravelPlan(sampleTravelPlan2, getSampleActivities2(), getSampleAccommodations2(),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    getSampleFriends2())"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        };"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public static ReadOnlyTravelPlanner getSampleTravelPlanner() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        TravelPlanner tp \u003d new TravelPlanner();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        for (TravelPlan sampleTravelPlan: getSampleTravelPlans()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            tp.addTravelPlan(sampleTravelPlan);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        for (Activity sampleActivity : getSampleActivities1()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            tp.addActivity(sampleActivity);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        for (Activity sampleActivity : getSampleActivities2()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            tp.addActivity(sampleActivity);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return tp;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 123
    }
  },
  {
    "path": "src/main/java/seedu/address/model/wishlist/Wishlist.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.model.wishlist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.activity.UniqueActivityList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.ReadOnlyActivityList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * Wraps all data at the travel plan level"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * Duplicates are not allowed (by .isSameTravelPlan comparison)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class Wishlist implements ReadOnlyActivityList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final UniqueActivityList activities;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        activities \u003d new UniqueActivityList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public Wishlist() {}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates an Wishlist using the Activitys in the {@code toBeCopied}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public Wishlist(ReadOnlyActivityList toBeCopied) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Replaces the contents of the activity list with {@code activities}."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code activities} must not contain duplicate activities."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void setActivities(List\u003cActivity\u003e activities) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.activities.setActivities(activities);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Resets the existing data of this {@code Wishlist} with {@code newData}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void resetData(ReadOnlyActivityList newData) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        setActivities(newData.getActivityList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// activity-level operations"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Returns true if an activity with the same identity as {@code activity} exists in the wishlist."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean hasActivity(Activity activity) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(activity);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return activities.contains(activity);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Adds an activity to the wishlist."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The activity must not already exist in the wishlist."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void addActivity(Activity p) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        activities.add(p);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Replaces the given activity {@code target} in the list with {@code editedActivity}."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code target} must exist in the wishlist."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * The activity identity of {@code editedActivity} must not be the same as another existing activity in the"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * wishlist."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void setActivity(Activity target, Activity editedActivity) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        requireNonNull(editedActivity);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        activities.setActivity(target, editedActivity);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Removes {@code key} from this {@code Wishlist}."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code key} must exist in the wishlist."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public void removeActivity(Activity key) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        activities.remove(key);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        builder.append(\" Wishlist: \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        getActivityList().forEach(builder::append);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ObservableList\u003cActivity\u003e getActivityList() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return activities.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                || (other instanceof Wishlist // instanceof handles nulls"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 activities.equals(((Wishlist) other).activities));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return activities.hashCode();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 124
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/travelplanner/JsonAdaptedAccommodation.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.storage.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.accommodation.Accommodation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.Cost;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.Location;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.Name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.WanderlustDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Jackson-friendly version of {@link Accommodation}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class JsonAdaptedAccommodation {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Accommodation\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String startDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String endDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String cost;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String location;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Constructs a {@code JsonAdaptedAccommodation} with the given accommodation details."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonAdaptedAccommodation(@JsonProperty(\"name\") String name,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                                    @JsonProperty(\"startDate\") String startDate,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                                    @JsonProperty(\"endDate\") String endDate,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                                    @JsonProperty(\"cost\") String cost,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                                    @JsonProperty(\"location\") String location) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Converts a given {@code Accommodation} into this class for Jackson use."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonAdaptedAccommodation(Accommodation source) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        name \u003d source.getName().name;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        startDate \u003d source.getStartDate().date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        endDate \u003d source.getEndDate().date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        cost \u003d source.getCost().value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        location \u003d source.getLocation().value;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Converts this Jackson-friendly adapted accommodation object into the model\u0027s {@code Accommodation} object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted accommodation."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Accommodation toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (startDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    WanderlustDate.class.getSimpleName()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!WanderlustDate.isValidWanderlustDate(startDate)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(WanderlustDate.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final WanderlustDate modelStartDate \u003d new WanderlustDate(startDate);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (endDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    WanderlustDate.class.getSimpleName()));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!WanderlustDate.isValidWanderlustDate(endDate)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(WanderlustDate.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final WanderlustDate modelEndDate \u003d new WanderlustDate(endDate);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (cost \u003d\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Cost.class.getSimpleName()));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!Cost.isValidCost(cost)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(Cost.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final Cost modelCost \u003d new Cost(cost);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (location \u003d\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    Location.class.getSimpleName()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!Location.isValidLocation(location)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final Location modelLocation \u003d new Location(location);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return new Accommodation(modelName, modelStartDate, modelEndDate, modelCost, modelLocation);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 105
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/travelplanner/JsonAdaptedActivity.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.storage.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.activity.Importance;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.activity.WanderlustDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.Cost;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.Location;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.Name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Jackson-friendly version of {@link Activity}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class JsonAdaptedActivity {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Activity\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String location;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String cost;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String importance;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String dateTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Constructs a {@code JsonAdaptedActivity} with the given activity details."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonAdaptedActivity(@JsonProperty(\"name\") String name,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                               @JsonProperty(\"location\") String location,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                               @JsonProperty(\"cost\") String cost,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                               @JsonProperty(\"levelOfImportance\") String levelOfImportance,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                               @JsonProperty(\"dateTime\") String dateTime) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.importance \u003d levelOfImportance;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Converts a given {@code Activity} into this class for Jackson use."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonAdaptedActivity(Activity source) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        name \u003d source.getName().name;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        location \u003d source.getLocation().value;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        cost \u003d source.getCost().value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        importance \u003d source.getLevelOfImportance().value;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        dateTime \u003d source.getActivityDateTime().dateTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Converts this Jackson-friendly adapted activity object into the model\u0027s {@code Activity} object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted activity."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Activity toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (location \u003d\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    Location.class.getSimpleName()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!Location.isValidLocation(name)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final Location modelLocation \u003d new Location(location);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (cost \u003d\u003d null) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Cost.class.getSimpleName()));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!Cost.isValidCost(cost)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(Cost.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final Cost modelCost \u003d new Cost(cost);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (importance \u003d\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    Importance.class.getSimpleName()));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!Importance.isValidImportance(importance)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(Importance.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final Importance modelImportance \u003d new Importance(importance);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    WanderlustDateTime.class.getSimpleName()));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!WanderlustDateTime.isValidWanderlustDateTime(dateTime)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(WanderlustDateTime.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final WanderlustDateTime modelDateTime \u003d new WanderlustDateTime(dateTime);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return new Activity(modelName, modelLocation, modelCost, modelImportance, modelDateTime);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 106
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/travelplanner/JsonAdaptedFriend.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.storage.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.Name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.friend.Friend;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.friend.Passport;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.friend.Phone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Jackson-friendly version of {@link Friend}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class JsonAdaptedFriend {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Friend\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String passport;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String phone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Constructs a {@code JsonAdaptedFriend} with the given friend details."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonAdaptedFriend(@JsonProperty(\"name\") String name, @JsonProperty(\"passport\") String passport,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                             @JsonProperty(\"phone\") String phone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.passport \u003d passport;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Converts a given {@code Friend} into this class for Jackson use."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonAdaptedFriend(Friend source) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        name \u003d source.getName().name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        passport \u003d source.getPassport().value;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        phone \u003d source.getPhone().value;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Converts this Jackson-friendly adapted friend object into the model\u0027s {@code Friend} object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted friend."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Friend toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (passport \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    Passport.class.getSimpleName()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!Passport.isValidPassport(passport)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(Passport.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final Passport modelPassport \u003d new Passport(passport);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (phone \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!Phone.isValidPhone(phone)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final Phone modelPhone \u003d new Phone(phone);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return new Friend(modelName, modelPassport, modelPhone);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 78
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/travelplanner/JsonAdaptedTravelPlan.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.storage.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.accommodation.Accommodation;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.Name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.commons.WanderlustDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.friend.Friend;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.AccommodationList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.ActivityList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.FriendList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.TravelPlan;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Jackson-friendly version of {@link TravelPlan}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class JsonAdaptedTravelPlan {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"TravelPlan\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String startDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String endDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final List\u003cJsonAdaptedActivity\u003e activities \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final List\u003cJsonAdaptedAccommodation\u003e accommodations \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final List\u003cJsonAdaptedFriend\u003e friends \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Constructs a {@code JsonAdaptedTravelPlan} with the given TravelPlan details."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonAdaptedTravelPlan(@JsonProperty(\"name\") String name,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                                 @JsonProperty(\"startDate\") String startDate,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                                 @JsonProperty(\"endDate\") String endDate,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                                 @JsonProperty(\"activities\") List\u003cJsonAdaptedActivity\u003e activities,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                                 @JsonProperty(\"accommodations\") List\u003cJsonAdaptedAccommodation\u003e accommodations,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                                 @JsonProperty(\"friends\") List\u003cJsonAdaptedFriend\u003e friends) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (activities !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            this.activities.addAll(activities);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (accommodations !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            this.accommodations.addAll(accommodations);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (friends !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            this.friends.addAll(friends);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Converts a given {@code TravelPlan} into this class for Jackson use."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonAdaptedTravelPlan(TravelPlan source) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        name \u003d source.getName().name;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        startDate \u003d source.getStartDate().date;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        endDate \u003d source.getEndDate().date;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        activities.addAll(source.getActivityList().stream()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                .map(JsonAdaptedActivity::new)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        accommodations.addAll(source.getAccommodationList().stream()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                .map(JsonAdaptedAccommodation::new)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        friends.addAll(source.getFriendList().stream()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                .map(JsonAdaptedFriend::new)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Converts this Jackson-friendly adapted travel plan object into the model\u0027s {@code TravelPlan} object."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted travel plan."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public TravelPlan toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final List\u003cActivity\u003e travelPlanActivities \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (JsonAdaptedActivity activity : activities) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            travelPlanActivities.add(activity.toModelType());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final List\u003cAccommodation\u003e travelPlanAccommodations \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (JsonAdaptedAccommodation accommodation : accommodations) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            travelPlanAccommodations.add(accommodation.toModelType());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final List\u003cFriend\u003e travelPlanFriends \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (JsonAdaptedFriend friend : friends) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            travelPlanFriends.add(friend.toModelType());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (startDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    WanderlustDate.class.getSimpleName()));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!WanderlustDate.isValidWanderlustDate(startDate)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(WanderlustDate.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final WanderlustDate modelStartDate \u003d new WanderlustDate(startDate);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (endDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    WanderlustDate.class.getSimpleName()));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!WanderlustDate.isValidWanderlustDate(endDate)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new IllegalValueException(WanderlustDate.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final WanderlustDate modelEndDate \u003d new WanderlustDate(endDate);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final ActivityList modelActivities \u003d new ActivityList();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        modelActivities.setActivities(travelPlanActivities);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final AccommodationList modelAccommodations \u003d new AccommodationList();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        modelAccommodations.setAccommodations(travelPlanAccommodations);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        final FriendList modelFriends \u003d new FriendList();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        modelFriends.setFriends(travelPlanFriends);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return new TravelPlan(modelName, modelStartDate, modelEndDate, modelActivities, modelAccommodations,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                modelFriends);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 136
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/travelplanner/JsonSerializableTravelPlanner.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.storage.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonRootName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplan.TravelPlan;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyTravelPlanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.TravelPlanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * An Immutable TravelPlanner that is serializable to JSON format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "@JsonRootName(value \u003d \"travelplanner\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class JsonSerializableTravelPlanner {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_TRAVEL_PLAN \u003d \"Travel plans list contains duplicate travel plan(s).\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_ACTIVITY \u003d \"Wishlist contains duplicate activity\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final List\u003cJsonAdaptedTravelPlan\u003e travelPlans \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final List\u003cJsonAdaptedActivity\u003e wishlist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Constructs a {@code JsonSerializableTravelPlanner} with the given travel plans and wishlist."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonSerializableTravelPlanner(@JsonProperty(\"travelPlans\") List\u003cJsonAdaptedTravelPlan\u003e travelPlans,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                                         @JsonProperty(\"wishlist\") List\u003cJsonAdaptedActivity\u003e wishlist) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.travelPlans.addAll(travelPlans);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.wishlist.addAll(wishlist);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Converts a given {@code ReadOnlyTravelPlanner} into this class for Jackson use."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param source future changes to this will not affect the created {@code JsonSerializableTravelPlanner}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonSerializableTravelPlanner(ReadOnlyTravelPlanner source) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlans.addAll(source.getTravelPlanList().stream().map(JsonAdaptedTravelPlan::new)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        wishlist.addAll(source.getWishlist().stream().map(JsonAdaptedActivity::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Converts this travel planner into the model\u0027s {@code TravelPlanner} object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public TravelPlanner toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        TravelPlanner travelPlanner \u003d new TravelPlanner();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (JsonAdaptedTravelPlan jsonAdaptedTravelPlan : travelPlans) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            TravelPlan travelPlan \u003d jsonAdaptedTravelPlan.toModelType();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (travelPlanner.hasTravelPlan(travelPlan)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new IllegalValueException(MESSAGE_DUPLICATE_TRAVEL_PLAN);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            travelPlanner.addTravelPlan(travelPlan);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (JsonAdaptedActivity jsonAdaptedActivity : wishlist) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            Activity activity \u003d jsonAdaptedActivity.toModelType();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (travelPlanner.hasActivity(activity)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                throw new IllegalValueException(MESSAGE_DUPLICATE_ACTIVITY);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            travelPlanner.addActivity(activity);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return travelPlanner;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 76
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/travelplanner/JsonTravelPlannerStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.storage.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyTravelPlanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * A class to access TravelPlanner data stored as a json file on the hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class JsonTravelPlannerStorage implements TravelPlannerStorage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonTravelPlannerStorage.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonTravelPlannerStorage(Path filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Path getTravelPlannerFilePath() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Optional\u003cReadOnlyTravelPlanner\u003e readTravelPlanner() throws DataConversionException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return readTravelPlanner(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Similar to {@link #readTravelPlanner()}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws DataConversionException if the file is not in the correct format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Optional\u003cReadOnlyTravelPlanner\u003e readTravelPlanner(Path filePath) throws DataConversionException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Optional\u003cJsonSerializableTravelPlanner\u003e jsonTravelPlanner \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                filePath, JsonSerializableTravelPlanner.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!jsonTravelPlanner.isPresent()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return Optional.of(jsonTravelPlanner.get().toModelType());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void saveTravelPlanner(ReadOnlyTravelPlanner travelPlanner) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        saveTravelPlanner(travelPlanner, filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Similar to {@link #saveTravelPlanner(ReadOnlyTravelPlanner)}."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void saveTravelPlanner(ReadOnlyTravelPlanner travelPlanner, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(travelPlanner);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        JsonUtil.saveJsonFile(new JsonSerializableTravelPlanner(travelPlanner), filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 79
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/travelplanner/JsonUserPrefsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.storage.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * A class to access UserPrefs stored in the hard disk as a json file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class JsonUserPrefsStorage implements UserPrefsStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public JsonUserPrefsStorage(Path filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return readUserPrefs(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Similar to {@link #readUserPrefs()}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param prefsFilePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws DataConversionException if the file format is not as expected."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        JsonUtil.saveJsonFile(userPrefs, filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 47
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/travelplanner/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.storage.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyTravelPlanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * API of the Storage component"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public interface Storage extends TravelPlannerStorage, UserPrefsStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Path getTravelPlannerFilePath();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Optional\u003cReadOnlyTravelPlanner\u003e readTravelPlanner() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void saveTravelPlanner(ReadOnlyTravelPlanner travelPlanner) throws IOException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/travelplanner/StorageManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.storage.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyTravelPlanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.UserPrefs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Manages storage of TravelPlanner data in local storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class StorageManager implements Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private TravelPlannerStorage travelPlannerStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private UserPrefsStorage userPrefsStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Creates a {@code StorageManager} with the given {@code TravelPlannerStorage} and {@code UserPrefStorage}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public StorageManager(TravelPlannerStorage travelPlannerStorage, UserPrefsStorage userPrefsStorage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.travelPlannerStorage \u003d travelPlannerStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.userPrefsStorage \u003d userPrefsStorage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return userPrefsStorage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return userPrefsStorage.readUserPrefs();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        userPrefsStorage.saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Path getTravelPlannerFilePath() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return travelPlannerStorage.getTravelPlannerFilePath();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Optional\u003cReadOnlyTravelPlanner\u003e readTravelPlanner() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return readTravelPlanner(travelPlannerStorage.getTravelPlannerFilePath());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Optional\u003cReadOnlyTravelPlanner\u003e readTravelPlanner(Path filePath)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        logger.fine(\"Attempting to read data from file: \" + filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return travelPlannerStorage.readTravelPlanner(filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void saveTravelPlanner(ReadOnlyTravelPlanner travelPlanner) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        saveTravelPlanner(travelPlanner, travelPlannerStorage.getTravelPlannerFilePath());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void saveTravelPlanner(ReadOnlyTravelPlanner travelPlanner, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        logger.fine(\"Attempting to write to data file: \" + filePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        travelPlannerStorage.saveTravelPlanner(travelPlanner, filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 78
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/travelplanner/TravelPlannerStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.storage.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyTravelPlanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.TravelPlanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents a storage for {@link TravelPlanner}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public interface TravelPlannerStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns the file path of the data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Path getTravelPlannerFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns TravelPlanner data as a {@link ReadOnlyTravelPlanner}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *   Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws IOException if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Optional\u003cReadOnlyTravelPlanner\u003e readTravelPlanner() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @see #getTravelPlannerFilePath()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Optional\u003cReadOnlyTravelPlanner\u003e readTravelPlanner(Path filePath) throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Saves the given {@link ReadOnlyTravelPlanner} to the storage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param travelPlanner cannot be null."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void saveTravelPlanner(ReadOnlyTravelPlanner travelPlanner) throws IOException;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @see #saveTravelPlanner(ReadOnlyTravelPlanner)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void saveTravelPlanner(ReadOnlyTravelPlanner travelPlanner, Path filePath) throws IOException;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/travelplanner/UserPrefsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package seedu.address.storage.travelplanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import seedu.address.model.travelplanner.UserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents a storage for {@link UserPrefs}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public interface UserPrefsStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns the file path of the UserPrefs data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Path getUserPrefsFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Returns UserPrefs data from storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     *   Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws IOException if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Saves the given {@link ReadOnlyUserPrefs} to the storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param userPrefs cannot be null."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextInputControl;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyTravelPlanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.util.SampleWanderlustDataUtil;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final ReadOnlyTravelPlanner travelPlannerStub \u003d SampleWanderlustDataUtil.getSampleTravelPlanner();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private TravelPlannerPanel travelPlannerPanel;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private TravelPlanPanel travelPlanPanel;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private TravelPlanObjectListPanel travelPlanObjectListPanel;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private HelpWindow helpWindow;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private MenuItem helpMenuItem;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private StackPane travelPlannerPanelPlaceholder;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private StackPane travelPlanPanelPlaceholder;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private StackPane travelObjectListPanelPlaceholder;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerators();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerators() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the accelerator of a MenuItem."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyCombination the KeyCombination value of the accelerator"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        menuItem.setAccelerator(keyCombination);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "         * TODO: the code below can be removed once the bug reported here"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "         * https://bugs.openjdk.java.net/browse/JDK-8131666"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "         * is fixed in later version of SDK."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "         * According to the bug report, TextInputControl (TextField, TextArea) will"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "         * consume function-key events. Because CommandBox contains a TextField, and"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "         * not work when the focus is in them because the key event is consumed by"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "         * the TextInputControl(s)."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "         * For now, we add following event filter to capture such key events and open"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "         * help window purposely so to support accelerators even when focus is"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "         * in CommandBox or ResultDisplay."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                menuItem.getOnAction().handle(new ActionEvent());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // To be replaced with actual travel planner"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        travelPlannerPanel \u003d new TravelPlannerPanel(travelPlannerStub);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        travelPlannerPanelPlaceholder.getChildren().add(travelPlannerPanel.getRoot());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // To be replaced with: travelPlanPanel \u003d new TravelPlanPanel(logic.getCurrentDirectory())"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        travelPlanPanel \u003d new TravelPlanPanel(travelPlannerStub.getTravelPlanList().get(1));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        travelPlanPanelPlaceholder.getChildren().add(travelPlanPanel.getRoot());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // To be replaced with:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // travelPlanObjectListPanel \u003d new TravelPlanObjectListPanel(logic.getFilteredTravelPlanObjectList());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        travelPlanObjectListPanel \u003d new TravelPlanObjectListPanel(travelPlannerStub.getTravelPlanList().get(1)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                .getActivityTpoList());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        travelObjectListPanelPlaceholder.getChildren().add(travelPlanObjectListPanel.getRoot());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandBox commandBox \u003d new CommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.show();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.focus();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult commandResult \u003d logic.execute(commandText);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Result: \" + commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isShowHelp()) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                handleHelp();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isExit()) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                handleExit();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            return commandResult;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Invalid command: \" + commandText);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 27,
      "-": 189
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/TravelPlanObjectListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.accommodation.Accommodation;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.commons.TravelPlanObject;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.friend.Friend;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.ui.cards.AccommodationCard;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.ui.cards.ActivityCard;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.ui.cards.FriendCard;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * Panel containing the list of travel plan objects."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class TravelPlanObjectListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private static final String FXML \u003d \"TravelPlanObjectListPanel.fxml\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TravelPlanObjectListPanel.class);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private ListView\u003cTravelPlanObject\u003e travelPlanObjectListView;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates a {@code TravelPlanObjectListPanel} with the given {@code ObservableList}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public TravelPlanObjectListPanel(ObservableList\u003cTravelPlanObject\u003e travelPlanObjectList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        travelPlanObjectListView.setItems(travelPlanObjectList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        travelPlanObjectListView.setCellFactory(listView -\u003e new TravelPlanObjectListViewCell());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code TravelPlanObject} using the respective"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code ActivityCard}, {@code FriendCard} or {@code AccommodationCard}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    class TravelPlanObjectListViewCell extends ListCell\u003cTravelPlanObject\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        protected void updateItem(TravelPlanObject travelPlanObject, boolean empty) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            super.updateItem(travelPlanObject, empty);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            if (empty || travelPlanObject \u003d\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                if (travelPlanObject instanceof Activity) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    setGraphic(new ActivityCard((Activity) travelPlanObject, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                } else if (travelPlanObject instanceof Accommodation) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    setGraphic(new AccommodationCard((Accommodation) travelPlanObject, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                } else { // if travelPlanObject instanceof Friend"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    setGraphic(new FriendCard((Friend) travelPlanObject, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 62
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/TravelPlanPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.travelplan.TravelPlan;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * Panel containing basic information of a Travel Plan."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class TravelPlanPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private static final String FXML \u003d \"TravelPlanPanel.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TravelPlanPanel.class);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label startDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label endDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates a {@code TravelPlanObjectListPanel} with the given {@code ObservableList}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public TravelPlanPanel(TravelPlan travelPlan) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        name.setText(travelPlan.getName().toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        startDate.setText(travelPlan.getStartDate().toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        endDate.setText(travelPlan.getEndDate().toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 35
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/TravelPlannerPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.travelplan.TravelPlan;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.travelplanner.ReadOnlyTravelPlanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.ui.cards.NameCard;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * Panel containing basic information of a Travel Plan."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class TravelPlannerPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private static final String FXML \u003d \"TravelPlannerPanel.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(TravelPlanPanel.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private ListView\u003cTravelPlan\u003e travelPlanListView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates a {@code TravelPlanObjectListPanel} with the given {@code ObservableList}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public TravelPlannerPanel(ReadOnlyTravelPlanner travelPlanner) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        travelPlanListView.setItems(travelPlanner.getTravelPlanList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        travelPlanListView.setCellFactory(travelPlan -\u003e new TravelPlanListViewCell());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Custom {@code ListCell} that displays the {@code Wishlist} or name of a {@code TravelPlan} using a"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * {@code NameCard}."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    class TravelPlanListViewCell extends ListCell\u003cTravelPlan\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        protected void updateItem(TravelPlan travelPlan, boolean empty) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            super.updateItem(travelPlan, empty);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            if (empty || travelPlan \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                setGraphic(new NameCard(travelPlan.getName().toString()).getRoot());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 51
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/cards/AccommodationCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.ui.cards;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.accommodation.Accommodation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * An UI component that displays information of an {@code Accommodation}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class AccommodationCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private static final String FXML \u003d \"./cards/AccommodationListCard.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public final Accommodation accommodation;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label startToEndDates;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label cost;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label address;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates an {@code AccommodationCard} with the given {@code Accommodation} and index to display."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public AccommodationCard(Accommodation accommodation, int displayedIndex) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.accommodation \u003d accommodation;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        name.setText(accommodation.getName().toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        startToEndDates.setText(accommodation.getStartDate().toString() + \" to \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                + accommodation.getEndDate().toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        cost.setText(\"Cost: $\" + accommodation.getCost().toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        address.setText(\"Location: \" + accommodation.getLocation().toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (!(other instanceof AccommodationCard)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        AccommodationCard card \u003d (AccommodationCard) other;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 accommodation.equals(card.accommodation);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 71
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/cards/ActivityCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.ui.cards;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.activity.Activity;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * An UI component that displays information of a {@code Activity}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class ActivityCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private static final String FXML \u003d \"./cards/ActivityListCard.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public final Activity activity;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label address;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label cost;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label levelOfImportance;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label activityDateTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates an {@code ActivityCard} with the given {@code Activity} and index to display."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public ActivityCard(Activity activity, int displayedIndex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.activity \u003d activity;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        name.setText(activity.getName().toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        address.setText(\"Location: \" + activity.getLocation().toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        cost.setText(\"Cost: $\" + activity.getCost().toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        levelOfImportance.setText(\"Importance: \" + activity.getLevelOfImportance().toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        activityDateTime.setText(\"Date \u0026 Time: \" + activity.getActivityDateTime().getValue());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (!(other instanceof FriendCard)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        ActivityCard card \u003d (ActivityCard) other;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 activity.equals(card.activity);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 73
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/cards/FriendCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.ui.cards;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.model.friend.Friend;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " * An UI component that displays information of a {@code Friend}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class FriendCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private static final String FXML \u003d \"./cards/FriendListCard.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public final Friend friend;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label passport;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label phone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates a {@code FriendCard} with the given {@code Friend} and index to display."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public FriendCard(Friend friend, int displayedIndex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        this.friend \u003d friend;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        name.setText(friend.getName().toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        passport.setText(\"Passport: \" + friend.getPassport().toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        phone.setText(\"Phone: \" + friend.getPhone().toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        if (!(other instanceof FriendCard)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        FriendCard card \u003d (FriendCard) other;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u0026\u0026 friend.equals(card.friend);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 67
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/cards/NameCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "package seedu.address.ui.cards;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "public class NameCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private static final String FXML \u003d \"./cards/NameCard.fxml\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     * Creates a {@code NameCard} with the given {@code value}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    public NameCard(String value) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        name.setText(value);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "         title\u003d\"Address App\" minWidth\u003d\"820\" minHeight\u003d\"500\" onCloseRequest\u003d\"#handleExit\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cicons\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/icons\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cHBox styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "          \u003cVBox fx:id\u003d\"travelPlanner\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"250\" prefWidth\u003d\"250\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cStackPane fx:id\u003d\"travelPlannerPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "          \u003cVBox fx:id\u003d\"travelPlan\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"250\" prefWidth\u003d\"250\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cStackPane fx:id\u003d\"travelPlanPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "          \u003cVBox fx:id\u003d\"travelObjectList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"400\" prefWidth\u003d\"400\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cStackPane fx:id\u003d\"travelObjectListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "          \u003c/VBox\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                   minHeight\u003d\"50\" prefHeight\u003d\"50\" maxHeight\u003d\"50\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 19,
      "-": 50
    }
  },
  {
    "path": "src/main/resources/view/TravelPlanObjectListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "  \u003cListView fx:id\u003d\"travelPlanObjectListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 1,
      "-": 7
    }
  },
  {
    "path": "src/main/resources/view/TravelPlanPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003cVBox fx:id\u003d\"travelPlanPanel\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cFlowPane fx:id\u003d\"startEndDate\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cLabel fx:id\u003d\"startDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startDate\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"  to  \" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cLabel fx:id\u003d\"endDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endDate\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003c/FlowPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cVBox fx:id\u003d\"travelObjectLists\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cInsets top\u003d\"20\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cLabel fx:id\u003d\"accommodations\" styleClass\u003d\"cell_medium_label, block_label\" text\u003d\"Accommodations\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cLabel fx:id\u003d\"friends\" styleClass\u003d\"cell_medium_label, block_label\" text\u003d\"Travel Friends\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cLabel fx:id\u003d\"activities\" styleClass\u003d\"cell_medium_label, block_label\" text\u003d\"Activities\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cLabel fx:id\u003d\"schedule\" styleClass\u003d\"cell_medium_label, block_label\" text\u003d\"Schedule\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 27
    }
  },
  {
    "path": "src/main/resources/view/TravelPlannerPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003cVBox fx:id\u003d\"travelPlanPanel\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cPane\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"50\" left\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cLabel fx:id\u003d\"Wanderlust\" styleClass\u003d\"cell_big_label\" text\u003d\"Wanderlust\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003c/Pane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cListView fx:id\u003d\"travelPlanListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 19
    }
  },
  {
    "path": "src/main/resources/view/cards/AccommodationListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_medium_label\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_medium_label\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cLabel fx:id\u003d\"cost\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$cost\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cLabel fx:id\u003d\"startToEndDates\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startToEndDates\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 34
    }
  },
  {
    "path": "src/main/resources/view/cards/ActivityListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_medium_label\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_medium_label\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cLabel fx:id\u003d\"cost\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$cost\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cLabel fx:id\u003d\"levelOfImportance\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$levelOfImportance\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cLabel fx:id\u003d\"activityDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$activityDateTime\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 35
    }
  },
  {
    "path": "src/main/resources/view/cards/FriendListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_medium_label\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_medium_label\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cLabel fx:id\u003d\"passport\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$passport\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 33
    }
  },
  {
    "path": "src/main/resources/view/cards/NameCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003cPane fx:id\u003d\"nameCard\" styleClass\u003d\"centralise\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cInsets top\u003d\"10\" bottom\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "    \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_medium_label, middle_label\" text\u003d\"\\$name\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "\u003c/Pane\u003e"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 12
    }
  },
  {
    "path": "src/main/resources/view/cards/PersonListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_medium_label\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cminWidth\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeannetoh99"
        },
        "content": "        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_medium_label\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "jeannetoh99": 2,
      "-": 34
    }
  },
  {
    "path": "test.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweiteo"
        },
        "content": "helloworld"
      }
    ],
    "authorContributionMap": {
      "jiaweiteo": 1
    }
  }
]
