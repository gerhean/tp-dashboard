[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "[![CI Status](https://github.com/AY2021S1-CS2103T-W11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S1-CS2103T-W11-3/tp/actions)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "# My Fitness Buddy"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "![Ui](docs/images/Ui.png)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* My Fitness Buddy is desktop application that helps users keep track of their weight and calorie intake."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### Site Map"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* [User Guide](https://github.com/AY2021S1-CS2103T-W11-3/tp/blob/master/docs/UserGuide.md)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* [Developer Guide](https://github.com/AY2021S1-CS2103T-W11-3/tp/blob/master/docs/DeveloperGuide.md)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* [About Us](https://github.com/AY2021S1-CS2103T-W11-3/tp/blob/master/docs/AboutUs.md)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### Acknowledgements  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "junhui-phoon": 13
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "run {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    finalizedBy jacocoTestReport"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    archiveName \u003d \u0027MyFitnessBuddy_v1.3.jar\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 71,
      "jiaax": 4,
      "junhui-phoon": 2
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: About Us"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "You can reach us at the email `seer[at]comp.nus.edu.sg`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## Project team"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### Hope Leong"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003cimg src\u003d\"images/hoperawr.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "[[github](https://github.com/hoperawr)]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "[[portfolio](team/hoperawr.md)]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* Role: Team Lead"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* Responsibilities: Scheduling and Tracking"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### Chan Wa Wai"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003cimg src\u003d\"images/wayne987.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "[[github](http://github.com/wayne987)]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "[[portfolio](team/johndoe.md)]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* Responsibilities: Testing"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### Phoon Jun Hui"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003cimg src\u003d\"images/junhui-phoon.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "[[github](http://github.com/junhui-phoon)] "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "[[portfolio](team/junhui-phoon.md)]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* Responsibilities: Integration"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "### Ethan So"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003cimg src\u003d\"images/ethanso56.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "[[github](http://github.com/ethanso56)]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "[[portfolio](team/ethanso56.md)]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* Responsibilities: Code Quality"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### Ng Jia Xin"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003cimg src\u003d\"images/jiaax.png\" width\u003d\"200px\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "[[github](http://github.com/jiaax)]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "[[portfolio](team/johndoe.md)]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "* Role: Developer"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* Responsibilities: Documentation"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 4,
      "-": 35,
      "junhui-phoon": 21
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "title: My Fitness Buddy Developer Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## **1. Introduction**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 1.1 About the application"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "My Fitness Buddy is a desktop application that helps users keep track of their weight and calorie input/output."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 1.2 Purpose"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "This document specifies the architecture, implementation and design decisions for"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "the application, My Fitness Buddy."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 1.3 Intended Audience"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "This Developer Guide is for anyone who are interested in the implementation of My Fitness Buddy,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "as well as future developers that are interested in further developing of our application."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## **2. Design**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 2.1 Architecture"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup methods where necessary."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`UI`**](#ui-component): The UI of the App."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`Logic`**](#logic-component): The command executor."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`Model`**](#model-component): Holds the data of the App in memory."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "* defines its *API* in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "![Class Diagram of the Logic Component](images/LogicClassDiagram.png)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "**How the architecture components interact with each other**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 2.2 UI component"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the UI Component](images/UiClassDiagram.png)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "**API** :"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `DayListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 2.3 Logic component"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Logic Component](images/LogicClassDiagram.png)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "**API** :"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "[`Logic.java`](https://github.com/AY2021S1-CS2103T-W11-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "1. `Logic` uses the `MyFitnessBuddyParser` class to parse the user command."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "1. This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "1. The command execution can affect the `Model` (e.g. adding a day)."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 2.4 Model component"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "![Structure of the Model Component](images/ModelClassDiagram.png)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "The model stores a `UserPref` object that represents the user’s preferences and stores My Fitness Buddy data."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "The model also exposes an unmodifiable `ObservableList\u003cDay\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.  "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wayne987"
        },
        "content": "`MyFitnessBuddy` is made up of a `UniqueDayList` which contains a list of `Day` objects. The `Day` class contains a `Date` and uses `CalorieManager` class as a data structure to store calorie `Input` and `Output`. `CalorieManager` also keeps track and can return the total calorie input and output. "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": "The `Calorie` class contains a `Time` and `CalorieCount` which `Input` and `Output` inherits from.  `Input` contains an additional `Food` while `Output` contains an addition `Exercise`."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "`CalorieManager` is used by `Day` as a data structure to contain `Input` and `Output`. It also keeps track and can return the total calorie input and output. "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 2.5 Storage component"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "![Structure of the Storage Component](images/StorageClassDiagramNew.png)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "* can save My Fitness Buddy data in json format and read it back."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 2.6 Common classes"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## **3. Implementation**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wayne987"
        },
        "content": "### Remove Calorie feature"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": "#### Implementation"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wayne987"
        },
        "content": "This feature allows user to remove a certain calorie from a particular day."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wayne987"
        },
        "content": "The mechanism utilises the RemoveCommandParser Class to parse the input into `Type of Calorie` to be remove, `Date` of the"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wayne987"
        },
        "content": "day in which the calorie is in and `Index` of the particular calorie to be removed in the list. "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wayne987"
        },
        "content": "It than utilise the RemoveCommand class to execute the actual removal of the calorie. It will call the method `getDate` which uses `Date` to locate the Day class"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wayne987"
        },
        "content": "from the uniqueDayList in which the calorie resides in and returns it."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wayne987"
        },
        "content": "The CalorieManager of the particular Day class will then be retrieved using the `getCalorieManager` method to make the relevant changes. "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wayne987"
        },
        "content": "CalorieManager contains a list of Input Calories and a list of Output Calories."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Finally,`Type of Calorie` is then used to determined which list the calorie to be removed is in. It will utilise "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wayne987"
        },
        "content": "the CalorieManager method `removeCalorieOutput` or `removeCalorieInput` depending on `Type of Calorie`. The method will than use `Index`"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wayne987"
        },
        "content": "to remove the calorie at the specific index in the corresponding list of Calories. "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wayne987"
        },
        "content": "![RemoveCalorieSequenceDiagram](images/RemoveCalorieSequenceDiagram.png)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### View Statistics feature"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### Implementation"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "This feature allows users to view their daily calorie input, "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "calorie output and weight in the form of a line chart generated using JavaFX"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "`LineChart` and `XYChart`."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "The mechanism utilises the `Logic#getFilteredDayList` method to get all"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "daily records of calorie input/output and weight to be used"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "as data points and axis of the chart. "
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "It also utilises JavaFX `ListChangeListner` to listen for any changes"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "to the list when the user adds or modifies any data, and updates the chart "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "instantly."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "This feature comprises the `CalorieStatsWindow` and `WeightStatsWindow` classes"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "and have the same behaviour, with the only difference is the type of data (calorie input/output, weight)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "used to generate the chart. Given below is a diagram..."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "_{Diagram to be added}_"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "### View all calorie inputs and calorie outputs of a day feature"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "#### Implementation"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "This feature allows users to view each of their calorie inputs and calorie "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "outputs for a particular day in a `ListView` when a view command is used."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "The mechanism utilises the ViewCommandParser class to parse the input and get the "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "`Index` of the particular day to be viewed."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "It then utilises the ViewCommand class to display the correct message to the user,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "depending on the validity of the `Index`. If the `Index` is valid, a CommandResult "
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "gets returned and the `MainWindow#handleView` gets called with the now zero-based "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "`Index`. The `Index` is then used to get the `Day` from the `Logic#getFilteredDayList` "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "method. The list of calorie inputs and calorie outputs of that `Day` would be then used "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "to fill up the JavaFX `ListView`. The `ListView` is then used to replace the placeholders "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "on the right side of the app in `MainWindow`. "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "The JavaFx `StatusBar` will also get updated with the date of the `Day` viewed, using"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "the `MainWindow#setDateLabel` method. "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Whenever a new calorie gets added, the calorie lists will get automatically updated"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "using the `DayListViewCell#updateItem` method in `DayListPanel`."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "The calorie lists can also be viewed by double clicking on a `DayCard`. When a `DayCard`"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "gets double clicked, the `Hbox#setOnMouseClicked` gets called and the lists and "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "status bar gets updated similarly. "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Given below is the sequence diagram when a view command is used."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "![ViewSequenceDiagram](images/ViewSequenceDiagram.png)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wayne987"
        },
        "content": "### Creates a new Person to My Fitness Buddy"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wayne987"
        },
        "content": "#### Implementations"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wayne987"
        },
        "content": "This feature allows users to create a new `Profile`, consisting of their *Name*, *ID*, *Height* and *TargetWeight*,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wayne987"
        },
        "content": "and a new `UniqueDayList` for daily calorie entries. Upon initialising My Fitness Buddy application, a default `Person` object "
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wayne987"
        },
        "content": "will be created and its `Profile` will be recreated by users. Once the profile has been set for `Person`, the user can now add"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wayne987"
        },
        "content": "daily entries to My Fitness Buddy\u0027s `UniqueDayList`. "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wayne987"
        },
        "content": "_{Diagram to be added}_"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wayne987"
        },
        "content": "### Edits a profile in My Fitness Buddy"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wayne987"
        },
        "content": "#### Implementations"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wayne987"
        },
        "content": "This feature allows users to edit an existing `Profile`, consisting of their *Name*, *ID*, *Height* and *TargetWeight*."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wayne987"
        },
        "content": "`UniqueDayList` that records the daily entries will remain unchanged."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wayne987"
        },
        "content": "{More details to be added in terms of updating the profile in the next iteration}"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wayne987"
        },
        "content": "_{Diagram to be added}_"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "### \\[Proposed\\] Undo/redo feature"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "#### Proposed Implementation"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` — Saves the current address book state in its history."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` — Restores the previous address book state from its history."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState0](images/UndoRedoState0.png)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th day in My Fitness Buddy. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of My Fitness Buddy after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState1](images/UndoRedoState1.png)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Step 3. The user executes `add n/David …​` to add a new day. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState2](images/UndoRedoState2.png)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so My Fitness Buddy state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Step 4. The user now decides that adding the day was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores My Fitness Buddy to that state."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState3](images/UndoRedoState3.png)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "than attempting to perform the undo."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoSequenceDiagram](images/UndoSequenceDiagram.png)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wayne987"
        },
        "content": "The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores My Fitness Buddy to that state."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify My Fitness Buddy, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState4](images/UndoRedoState4.png)"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "![UndoRedoState5](images/UndoRedoState5.png)"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "![CommitActivityDiagram](images/CommitActivityDiagram.png)"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "#### Design consideration:"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "##### Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "  * Pros: Easy to implement."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "  * Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "  itself."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "  * Pros: Will use less memory (e.g. for `delete`, just save the day being deleted)."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "  * Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "_{more aspects and alternatives to be added}_"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "### \\[Proposed\\] Data archiving"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data archiving feature will be implemented}_"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## **4. Documentation, logging, testing, configuration, dev-ops**"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "* [Documentation guide](Documentation.md)"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "* [Testing guide](Testing.md)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "* [Logging guide](Logging.md)"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "* [Configuration guide](Configuration.md)"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "* [DevOps guide](DevOps.md)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## **5. Appendix: Requirements**"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "### Product scope"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "**Target user profile**:"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* has a need to manage their calorie input and weight loss"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing to mouse interactions"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "**Value proposition**: manages weight loss/gain and calorie input/output faster than a typical mouse/GUI driven app"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "### User stories"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "| `* * *`  | new user                                   | create a new profile         | set up the application |"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "| `* * *`  | user                                       | record my daily weight         | keep track of them   |"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "| `* * *`  | user                                       | record meals and the amount of calorie eaten  | keep track of them |"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "| `* * *`  | user                                       | record exercises and the amount of calories lost | keep track of them |"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "| `* * *`  | user                                       | view my calorie history   | see if I am hitting my calorie targets |"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "| `* * *`  | user                                       | view all my daily weights | see if I am hitting my weight targets | "
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "| `* * *`  | user                                       | delete a specified calorie output | remove a wrong input |"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "|  `* * *` | user                                       | delete a specified calorie input | remove a wrong output |"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "*{More to be added}*"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "### Use cases"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "(For all use cases below, the **System** is the `MyFitnessBuddy` and the **Actor** is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Use case: Add a daily weight record**"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "1.  User inputs the date and weight using the add command."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "3.  User sees the newly added weight record of the day."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    "
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    "
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Use case: Edit a daily weight record**"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "1.  User inputs the index of the record and the new weight with the edit command."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "2.  User sees the newly edited weight record of the day."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    "
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "**Use case: Add a calorie input**"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "1.  User requests to add calorie input using the calorie command. "
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "2.  User enters the date that he/she wants to add a calorie input."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "3.  User inputs the time and name of the calorie input."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "4.  User sees the newly updated total calorie input of that day."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "**Use case: View calorie\u0027s of a particular day recorded**"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "**MSS**"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "1.  User requests to view the calorie history of a particular day using the view "
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "command. "
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "2.  User sees his/her calories of that day."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "    Use case ends."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* 2a. The calorie lists are empty."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "  Use case ends."
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "*{More to be added}*"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "### Non-Functional Requirements"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "wayne987"
        },
        "content": "2.  Should be able to hold up to 100 days of calorie input/output without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "*{More to be added}*"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "### Glossary"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "* **Mainstream OS**: Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "wayne987"
        },
        "content": "* **Calorie Input**: The amount of energy eaten from food eaten by the user"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "wayne987"
        },
        "content": "* **Calorie Output**: The amount of energy used by the user from exercises"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* **Calorie History**: A collection of calorie input and output for the past months"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "wayne987"
        },
        "content": "* **Daily Weight**: The weight of the user for a specific day"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## **6. Appendix: Instructions for manual testing**"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "testers are expected to do more *exploratory* testing."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "### Launch and shutdown"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "1. Initial launch"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "1. Saving window preferences"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "       Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "### Creating a profile"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "1. Creating a profile when the current profile list is empty"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    1. Test case: `create n/John id/1111 h/170 w/80` \u003cbr\u003e"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       Expected: Profile gets created."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       "
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    2. Test case: `create n/John id/1121 h/170 w/80` \u003cbr\u003e"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       Expected: No profile gets created. Error details shown in the status message. Invalid id number. "
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "### Adding a day"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "1. Adding a day when the current day list is empty"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    1. Test case: `add d/2020-10-21 w/77` \u003cbr\u003e"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       Expected: Day gets created. "
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       "
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    2. Test case: `add d/2020-10-212 w/77` \u003cbr\u003e"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       Expected: No Day gets created. Error details shown in the status message. Invalid date."
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       "
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    3. Test case: `add d/2020-10-21 w/sd` \u003cbr\u003e"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       Expected: No Day gets created. Error details shown in the status message. Invalid weight."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "### Deleting a day"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "1. Deleting a day while all days are being shown"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Test case: `delete 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Test case: `delete 0`\u003cbr\u003e"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "      Expected: No day is deleted. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "      "
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "### Adding a calorie input to a day "
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Assuming the day (2020-10-21) has already been added to the day list."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "1. Adding a calorie input to a day that has been added to the list already"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    1. Test case: `calorie d/2020-10-21 tp/in t/1200 f/chicken c/300` \u003cbr\u003e"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       Expected: Calorie input added. Total calorie input count updated for that day. "
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       "
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    2. Test case: `calorie d/2020-10-21 tp/in t/sdfds f/chicken c/300` \u003cbr\u003e    "
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       Expected: Calorie input not added. Total calorie input count remains the same for that day. Invalid time input.  "
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "### Adding a calorie output to a day "
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Assuming the day (2020-10-21) has already been added to the day list."
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "1. Adding a calorie output to a day that has been added to the list already"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    1. Test case: `calorie d/2020-10-21 tp/out t/1200 e/running c/300` \u003cbr\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       Expected: Calorie output added. Total calorie output count updated for that day. "
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       "
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    2. Test case: `calorie d/2020-10-21 tp/out t/sdfds e/gym c/300` \u003cbr\u003e    "
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       Expected: Calorie input not added. Total calorie input count remains the same for that day. Invalid time input.  "
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "### Viewing the calorie lists of a day"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Assuming the day list is not empty and the day at index 1 has calorie "
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "inputs and ouputs already."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "   1. Test case: `view 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "      Expected: Calories will be shown on the calorie panels on the right. "
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "      Status bar will update the the date of the day being shown. "
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "   1. Test case: `view 0`\u003cbr\u003e"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "      Expected: Calorie lists does not update. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "   1. Other incorrect delete commands to try: `view`, `view x`, `...` (where x is larger than the list size)\u003cbr\u003e"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "### Saving data"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "1. Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "1. _{ more test cases …​ }_"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 2,
      "ethanso56": 125,
      "-": 302,
      "wayne987": 57,
      "junhui-phoon": 55
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "title: My Fitness Buddy User Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " ![logo](images/logo.png)  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "   "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "Welcome to My Fitness Buddy User Guide!  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "Just enlisted under PES ‘B’ Pending and worried about the next few months of Basic Military Training (BMT)?  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "Worry no more, My Fitness Buddy is here to accompany you through BMT and help you keep track of your weight loss journey!  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "This user guide serves to provide you with the necessary instructions on how to set up and use our application. With that said, let’s get started!    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "Choose a topic from the [Table of Contents](#table-of-contents) below."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "{:toc}  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "### 1.1 Application Overview"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "My Fitness Buddy `v1.3` is a desktop application that helps you to track your overall change in fitness level by allowing you to add daily records of your weight and calorie input/output.  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "My Fitness Buddy also allows users to create a profile and can generate visual charts based on these records so that you can monitor your daily progress and help you achieve your goals.  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "This application is optimized for use through a *Command Line Interface (CLI)*, meaning that you operate the application by typing commands into a command box."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "### 1.2 Target Audience"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "My Fitness Buddy is designed for PES ‘B’ Pending (BP) soldiers who have just enlisted and are starting their initial 10 weeks of fitness training in BMT. Our features revolve around providing a visual and convenient way to keep track of factors that affect weight loss."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "### 1.3 Rationale"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " Before this application was developed, PES BP soldiers had weekly weighing and had to record down their weights on a form kept by their commanders. This method was not only time consuming, it was also ineffective in tracking the soldiers\u0027 overall fitness levels. For instance, if a soldier\u0027s weight did not decrease over the weeks, he would be unable to pinpoint the reason why this is so.   "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " My Fitness Buddy was developed so that soldiers would be able to see the fluctuations in their fitness level through factors such as calorie intake from consumption, calorie output from exercise, and daily weight records. Those records would be available by day and can even be viewed as  a graph.  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " We hope that through the use of this application, soldiers can take charge of their own fitness and achieve the results they strive for. "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## 2. About"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "### 2.1 Using this User Guide"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "This User Guide has been structured such that users can easily find and understand what they need."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "[Section 2](#2-about) contains useful tips and information on reading this document."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "[Section 3](#3-getting-started) consists of instructions to set up this application"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "[Section 4](#4-features) includes the details of the 4 main features of My Fitness Buddy which are"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* Profile page"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* List of days"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* Calorie input and output"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* Statistics"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "### 2.2 Symbols and Syntax"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "The table below explains the general symbols and syntax used throughout the document."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "Symbol/syntax | Meaning"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "--------|------------------"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "`command` | This indicates a command to be entered into the input box. More information can be found at [Command Format](#23-command-format)."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ":bulb: | This indicates a tip."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ":warning: | This indicates a warning."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "### 2.3 Command Format"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "Commands are used to tell My Fitness Buddy to perform specific tasks.  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "All commands in the following sections follow the same format."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "\t* Example: in `add d/DATE w/WEIGHT`, `DATE` and `WEIGHT` are parameters to be replaced by the user. "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "\t e.g. `add d/2020-10-25 w/70`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\t"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## 3. Getting Started"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Thank you for using My Fitness Buddy! Here\u0027s a quick start guide to get you started."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer. "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "1. Download the latest *MyFitnessBuddy_`v1.3`*.jar [here](https://github.com/AY2021S1-CS2103T-W11-3/tp/releases)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "1. Copy the file to the folder you want to use as the *home folder* for My Fitness Buddy.  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "![GUI](images/Ui.png)                   "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "1. If the app doesn’t start right away, try opening a command terminal in the folder and enter  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "`java -jar MyFitnessBuddy_v1.3.jar`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "1. You can type a command in the command box and press \u003ckbd\u003eEnter\u003c/kbd\u003e to execute it.\u003cbr\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Here are some basic commands you can try:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    * `create n/Johnny id/1234 h/170 w/68`: Creates a profile named `Johnny`."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    * `add d/2020-10-16 w/70`: Creates a daily record with the specified date and weight."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    * `calorie d/2020-10-26 tp/in t/1200 f/laksa c/290`: Adds a calorie input entry with the specified date."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    * `stats v/all`: View both calorie and weight charts in a pop-up window."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "1. Head to [Features](#4-features) below to learn more details of each command. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## 4. Features"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 4.1 Profile commands"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Commands in this section are useful for allowing multiple users to use this app. "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Multiple users can create their own profiles and add their own records to it.  "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### 4.1.1 Creating a new profile : `create`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Create a new profile for a new Person."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Format: `create n/NAME id/ID_NUM h/HEIGHT w/TARGET_WEIGHT`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ":warning: For valid ID_NUM, the first two digits must be from 1 - 4, "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "while the last two digits must be from 1 - 20. A valid ID_NUM has only four digits. "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaax"
        },
        "content": "`create n/Johnny id/1220 h/170 w/68` "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Meaning: create a new profile with name Johnny, ID number 1220, height 170cm and target weight of 68kg."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "#### 4.1.2 Editing an existing profile: `update`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "update an existing profile."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Format: `update [optional] n/NAME id/ID_NUM h/HEIGHT w/TARGET_WEIGHT`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "`update n/Jonhhy`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Meaning:`update the name of current profile that you are looking to Johnny`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Warning:`must update at least one of the field and it cannot be the same as the current one`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "#### 4.1.3 viewing another profile: `login`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Changes the profile that you are currently looking at to another profile"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Format: `update [index]`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "`login 2`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Meaning:`changes the current profile that you are looking at to the profile in the profile list with an index of 2`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 4.2 Day commands"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Commands in this section are useful in tracking of daily weight records. You should use these commands to log your weight for "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiaax"
        },
        "content": "a new day before adding calorie related information and edit your weight if you made a mistake. "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### 4.2.1 Adding a daily weight record : `add d/DATE w/WEIGHT`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Adds a new daily weight record."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Format: `add d/DATE w/WEIGHT`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiaax"
        },
        "content": "`add d/2020-10-29 w/72` "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Meaning:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Adds a new day, 29 October 2020, with a weight of 72kg."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiaax"
        },
        "content": "_TIP: Always add a day before adding a calorie information. `DATE` has to be in the YYYY-MM-DD format._"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiaax"
        },
        "content": "![AddDay](images/AddDay.png)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### 4.2.2 Editing a daily weight record : `edit INDEX w/WEIGHT`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Edits a daily weight record."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Format: `edit INDEX w/WEIGHT`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiaax"
        },
        "content": "`edit 3 w/70` "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Meaning:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Edits a day at index 3 with a new weight of 70kg."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiaax"
        },
        "content": "_TIP: `WEIGHT` should be in KG._"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiaax"
        },
        "content": "![EditDay](images/EditDay.png)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### 4.2.3 Deleting a daily record: `delete INDEX`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Deletes a daily record at INDEX."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Meaning:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Deletes a day at index 2."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jiaax"
        },
        "content": "![DeleteDay](images/DeleteDay.png)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 4.3 Calorie Commands"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Commands in this section are useful in keeping track of the various calorie content."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "You can use them to log different kinds of calorie content and their relevant information."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "There are two main types of calorie that you can keep of : Input and Output"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Calorie."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Each of them consist of three main components as summarized below."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "INPUT CALORIE | OUTPUT CALORIE"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "--------------|---------------"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "tp/in         |tp/out"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "t/            |t/"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "f/            |e/"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "c/            |c/"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "The table below summarizes the various prefix relevant for this section"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "and their corresponding meaning."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Prefix | Meaning"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "--------|------------------"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**tp/** | `type of calorie`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**t/** | `time`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**f/** | `food`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**e/** | `exercise`"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**c/** | `calorie count`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**i/** | `index`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**d/** | `date`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### 4.3.1 Adding Calorie"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "##### 4.3.1.1 Adding a calorie input : `calorie tp/in`"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Add calorie input to the calorie tracker."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Format: `calorie tp/in d/DATE t/TIME f/FOOD c/CALORIE COUNT`"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Examples:`calorie d/2020-10-26 tp/in t/1200 f/laksa c/290` "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Meaning:`The user ate laksa with the calorie count of 290kcal at 12pm on the date October 26 2020` "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "_TIP: If the `DATE` field is left empty, the calorie input will be added to the current date entry._"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "##### 4.3.1.2 Adding a calorie output : `calorie tp/out`"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "Add calorie output to the calorie tracker."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Format: `calorie tp/out d/DATE t/TIME e/EXERCISE c/CALORIE COUNT`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Examples:`calorie d/2020-10-26 tp/in t/1200 e/running c/400` "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Meaning:`The user ran on October 26 2020 at 12pm and has expanded 400kcal` "
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "_TIP: If the `DATE` field is left empty, the calorie output will be added to the current date entry._"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### 4.3.2 Removing Calorie"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "##### 4.3.2.1 Removing a calorie input : `remove tp/in`"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Removes a wrong calorie input entry from the calorie tracker."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Format: `remove tp/in d/DATE i/INDEX`"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Examples:`remove tp/in d/2020-10-26 i/3` "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Meaning:`Remove a calorie input from October 26 2020 calorie log, which is the 3rd calorie input in the list of"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Input calories for that day.` "
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "_TIP: Instead of using d/DATE to specify the date of the log in which the calorie belongs too, the index of the date"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "can be used instead_"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Example:`remove 3 tp/in i/3` "
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "##### 4.3.2.2 Removing a calorie output : `remove tp/out`"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Removes a wrong calorie Output entry from the calorie tracker."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Format: `remove tp/out d/DATE i/INDEX`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Examples:`remove tp/in d/2020-10-26 i/3` "
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Meaning:`Remove a calorie output from October 26 2020 calorie log, which is the 3rd calorie output in the list of"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Output calories for that day.` "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "_TIP: Instead of using d/DATE to specify the date of the log in which the calorie belongs too, the index of the date"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "can be used instead_"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Examples:`remove 3 tp/out i/3` "
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### 4.3.3 Modifying Calorie"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "##### 4.3.3.1 Modifying a calorie input : `modify tp/in`"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Modify a calorie input entry with details recorded wrongly"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Format: `modify d/DATE tp/in i/INDEX [Updated Details]`"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Examples:`modify d/2020-10-26 tp/in i/2 c/123` "
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Meaning:`change the calorie count of an input calorie in the log from October 26 2020 with the index of 2 in the"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "input list to 123` "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "`Input[ Time:... Food:... CalorieCount: 9000` ]--after modification--\u003e  `Input:[ Time:... Food:... CalorieCount: 123 ]`"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "_TIP: Instead of using d/DATE to specify the date of the log in which the calorie belongs too, the index of the date"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "can be used instead_"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Examples:`modify 3 tp/out i/3 c/123`"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "##### 4.3.3.2 Modifying a calorie output : `modify tp/out`"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Modify a calorie out entry with details recorded wrongly"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Format: `modify d/DATE tp/in i/INDEX [Updated Details]`"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Examples:`modify d/2020-10-26 tp/in i/2 c/123` "
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Meaning:`change the calorie count of an Output calorie in the October 26 2020 log ,with the index of 2 in the"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "output list to 123` "
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "`Input[ Time:... Exercise:... CalorieCount: 9000` ]--after modification--\u003e  `Input:[ Time:... Exercise:... CalorieCount: 123 ]`"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "_TIP: Instead of using d/DATE to specify the date of the log in which the calorie belongs too, the index of the date"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "can be used instead_"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 4.4 Data Visualization"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Commands in this section are useful to view the graphical representations of the"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "daily weights and calorie input/output records generated by My Fitness Buddy."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "These features help you to monitor your daily progress easily and allows you to understand"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "certain trends so that you can make better choices during your weight loss journey!"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "#### 4.4.1 View all calorie inputs and outputs of a day: `view`"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Shows a list of all entries of calorie inputs and calorie outputs of a particular day."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Format: `view INDEX`"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Main screen when a particular day is viewed:"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "![day_clicked_chart](images/day_vieweD.png)"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "_:bulb:TIP: Calorie lists can be viewed alternatively by double clicking on a particular day card._"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### 4.4.2 View Statistics: `stats`"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Shows the charts generated from the daily entries of weight and calorie input/output in a pop-up window."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Format: `stats v/[CHART_TO_BE_VIEWED]`"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "You can select which charts to view:"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Prefix/Parameter | Meaning"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "-----------------|------------------"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**v/all**        | `Shows both weight and calorie charts`"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**v/calorie**    | `Shows calorie chart only`"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**v/weight**     | `Shows weight chart only`"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Example: `stats v/all`"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "This command will display both charts in their respective pop-up windows."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "_:bulb:TIP: You can hover your mouse over the data point to see the actual value_"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Weight Chart:"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "![weight_stats_chart](images/weight_stats_chart.png)"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Calorie Chart:"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "![calorie_stats_chart](images/calorie_stats_chart.png)"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "_:bulb:TIP: Charts can be viewed alternatively by going to the menu bar, click on `Statistics` and select the "
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " chart that you want to view._"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "![chart_menu_bar](images/chart_menu_bar.png)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 4.5 General commands"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### 4.5.1 Viewing help : `help`"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Shows a message explaining how to access the help page."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "![help message](images/helpMessage.png)"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### 4.5.2 Clearing all entries : `clear`"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "|              :warning: :warning: WARNING :warning: :warning:              |"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "|:--------------------------------------------------------------------------|"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "| This command will clear all data in My Fitness Buddy, even the saved file!|"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Clears all saved entries in MyFitnessBuddy."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "#### 4.5.3 Exiting the program : `exit`"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 4.6 Saving the data"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "My Fitness Buddy data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## 5. FAQ"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "### 5.1 Transferring Data"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another Computer?\u003cbr\u003e"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "jiaax"
        },
        "content": "**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous My Fitness Buddy home folder.  "
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## 6. Command summary"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "jiaax"
        },
        "content": "Action | Format"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "--------|------------------"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Create profile** | `create n/NAME id/ID_NUM h/HEIGHT w/TARGET_WEIGHT` "
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Edit profile** | `profile edit n/NAME id/ID_NUM h/HEIGHT w/TARGET_WEIGHT`"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Add day record** | `add d/DATE w/WEIGHT` "
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Edit day record** | `edit INDEX w/WEIGHT`"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Delete day record** | `delete INDEX`"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "**Add input** | `calorie tp/in t/TIME f/FOOD c/CALORIE_COUNT`"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Add output** | `calorie tp/out t/TIME d/DURATION c/CALORIE_BURNT`"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Remove input** | `remove tp/in d/DATE i/INDEX` "
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Remove output** | `remove tp/out d/DATE i/INDEX` "
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Modify input** | `modify tp/in t/TIME f/FOOD c/CALORIE_COUNT`"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**Modify output** | `modify tp/out t/TIME d/DURATION c/CALORIE_BURNT` "
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "**View calories of a day** | `view INDEX`"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "**Clear entries** | `clear`"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "**Help** | `help`"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "**Exit** | `exit`"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hoperawr": 44,
      "ethanso56": 21,
      "-": 92,
      "wayne987": 13,
      "junhui-phoon": 220,
      "jiaax": 28
    }
  },
  {
    "path": "docs/diagrams/ArchitectureSequenceDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Actor User as user USER_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \":UI\" as ui UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \":Logic\" as logic LOGIC_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \":Model\" as model MODEL_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \":Storage\" as storage STORAGE_COLOR"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "user -[USER_COLOR]\u003e ui : \"delete 1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "activate ui UI_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "activate logic LOGIC_COLOR"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "logic -[LOGIC_COLOR]\u003e model : deleteDay(p)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "activate model MODEL_COLOR"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "model -[MODEL_COLOR]-\u003e logic"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate model"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "logic -[LOGIC_COLOR]\u003e storage : saveFitnessBuddy(addressBook)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "activate storage STORAGE_COLOR"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "storage -[STORAGE_COLOR]\u003e storage : Save to file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "activate storage STORAGE_COLOR_T1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "storage --[STORAGE_COLOR]\u003e storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate storage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "storage --[STORAGE_COLOR]\u003e logic"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate storage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "logic --[LOGIC_COLOR]\u003e ui"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate logic"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "ui--[UI_COLOR]\u003e user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate ui"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 2,
      "-": 36
    }
  },
  {
    "path": "docs/diagrams/DeleteSequenceDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "participant \":LogicManager\" as LogicManager LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "participant \":MyFitnessBuddyParser\" as MyFitnessBuddyParser LOGIC_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "participant \":CommandResult\" as CommandResult LOGIC_COLOR"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "end box"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "box Model MODEL_COLOR_T1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "participant \":Model\" as Model MODEL_COLOR"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "end box"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "[-\u003e LogicManager : execute(\"delete 1\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "activate LogicManager"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "LogicManager -\u003e MyFitnessBuddyParser : parseCommand(\"delete 1\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "activate MyFitnessBuddyParser"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "create DeleteCommandParser"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "MyFitnessBuddyParser -\u003e DeleteCommandParser"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "activate DeleteCommandParser"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "DeleteCommandParser --\u003e MyFitnessBuddyParser"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate DeleteCommandParser"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "MyFitnessBuddyParser -\u003e DeleteCommandParser : parse(\"1\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "activate DeleteCommandParser"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "create DeleteCommand"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "DeleteCommandParser -\u003e DeleteCommand"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "activate DeleteCommand"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "DeleteCommand --\u003e DeleteCommandParser : d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate DeleteCommand"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "DeleteCommandParser --\u003e MyFitnessBuddyParser : d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate DeleteCommandParser"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027Hidden arrow to position the destroy marker below the end of the activation bar."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "DeleteCommandParser -[hidden]-\u003e MyFitnessBuddyParser"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "destroy DeleteCommandParser"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "MyFitnessBuddyParser --\u003e LogicManager : d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "deactivate MyFitnessBuddyParser"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "LogicManager -\u003e DeleteCommand : execute()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "activate DeleteCommand"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "DeleteCommand -\u003e Model : deleteDay(1)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "activate Model"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Model --\u003e DeleteCommand"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate Model"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "create CommandResult"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "DeleteCommand -\u003e CommandResult"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "activate CommandResult"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "CommandResult --\u003e DeleteCommand"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate CommandResult"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "DeleteCommand --\u003e LogicManager : result"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate DeleteCommand"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "[\u003c--LogicManager"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "deactivate LogicManager"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "-": 58,
      "junhui-phoon": 10
    }
  },
  {
    "path": "docs/diagrams/LogicClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowColor LOGIC_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam classBackgroundColor LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "package Logic {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "package Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Parser \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Class MyFitnessBuddyParser"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Class XYZCommandParser"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Class CliSyntax"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Class ParserUtil"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Class ArgumentMultimap"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Class ArgumentTokenizer"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Class Prefix"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "package Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Class XYZCommand"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Class CommandResult"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Class \"{abstract}\\nCommand\" as Command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Logic \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Class LogicManager"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "package Model{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenModel #FFFFFF"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "HiddenOutside ..\u003e Logic"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "LogicManager .up.|\u003e Logic"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "LogicManager --\u003e\"1\" MyFitnessBuddyParser"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "MyFitnessBuddyParser .left.\u003e XYZCommandParser: creates \u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommandParser ..\u003e XYZCommand : creates \u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommandParser ..|\u003e Parser"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommandParser ..\u003e ArgumentMultimap"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommandParser ..\u003e ArgumentTokenizer"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "ArgumentTokenizer .left.\u003e ArgumentMultimap"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommandParser ..\u003e CliSyntax"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "CliSyntax ..\u003e Prefix"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommandParser ..\u003e ParserUtil"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "ParserUtil .down.\u003e Prefix"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "ArgumentTokenizer .down.\u003e Prefix"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "XYZCommand -up-|\u003e Command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "LogicManager .left.\u003e Command : executes \u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "LogicManager --\u003e Model"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "Command .right.\u003e Model"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Logic ..\u003e CommandResult"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "LogicManager .down.\u003e CommandResult"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "Command .up.\u003e CommandResult"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "CommandResult -[hidden]-\u003e Parser"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "-": 59,
      "junhui-phoon": 3
    }
  },
  {
    "path": "docs/diagrams/ModelClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowColor MODEL_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam classBackgroundColor MODEL_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Package Model \u003c\u003cRectangle\u003e\u003e{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Model \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Interface ObservableList \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class MyFitnessBuddy"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class ReadOnlyMyFitnessBuddy"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Class Model"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Class ModelManager"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "Class UserPrefs"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Class ReadOnlyUserPrefs"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Package Day {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class Day"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class Weight"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class Date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class UniqueDayList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Package Calorie {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class Calorie"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class Input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class Output"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class CalorieManager"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class CalorieCount"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class Time"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class Exercise"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Class Food"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "CalorieManager \"*\"-\u003e Input"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "CalorieManager \"*\"-\u003e Output"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Calorie *--\u003e Time"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Calorie *--\u003e CalorieCount"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Calorie \u003c|-- Input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Calorie \u003c|-- Output"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Input *--\u003e Food"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Output *--\u003e Exercise"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "Package Tag {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "Class Tag"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "HiddenOutside ..\u003e Model"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "MyFitnessBuddy .up.|\u003e ReadOnlyMyFitnessBuddy"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "ModelManager .up.|\u003e Model"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "Model .right.\u003e ObservableList"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "ModelManager o--\u003e \"1\" MyFitnessBuddy"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "ModelManager o-left-\u003e \"1\" UserPrefs"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "UserPrefs .up.|\u003e ReadOnlyUserPrefs"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "MyFitnessBuddy *--\u003e \"1\" UniqueDayList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "UniqueDayList o--\u003e \"*\" Day"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Day *--\u003e CalorieManager"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Day *--\u003e \"*\" Tag"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Day *--\u003e Date"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Day *--\u003e Weight"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "ModelManager --\u003e\"1\" Day : filtered list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "-": 34,
      "wayne987": 37
    }
  },
  {
    "path": "docs/diagrams/RemoveCalorieSequenceDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "participant \":LogicManager\" as LogicManager LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "participant \":MyFitnessBuddyParser\" as MyFitnessBuddyParser LOGIC_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "participant \":RemoveCommandParser\" as RemoveCommandParser LOGIC_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "participant \"r:RemoveCommand\" as RemoveCommand LOGIC_COLOR"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "end box"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "box Model MODEL_COLOR_T1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "participant \":Model\" as Model MODEL_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "participant \":UniqueDayList\" as UniqueDayList MODEL_COLOR"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "participant \"cm:CalorieManager\" as CalorieManager MODEL_COLOR"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "end box"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "[-\u003e LogicManager : execute(\"remove type date index\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "activate LogicManager"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "LogicManager -\u003e MyFitnessBuddyParser : parseCommand(remove)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "activate  MyFitnessBuddyParser"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "create RemoveCommandParser"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "MyFitnessBuddyParser -\u003e RemoveCommandParser : parse(\"type date index\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "activate RemoveCommandParser"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "create RemoveCommand"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "RemoveCommandParser -\u003e RemoveCommand"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "activate RemoveCommand"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deactivate RemoveCommandParser"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "destroy RemoveCommandParser"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "RemoveCommand --\u003e  MyFitnessBuddyParser"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deactivate RemoveCommand"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": " MyFitnessBuddyParser --\u003e LogicManager : r"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deactivate MyFitnessBuddyParser"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "LogicManager -\u003e RemoveCommand : execute()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "activate RemoveCommand"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "RemoveCommand -\u003e Model : getDay(date)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "activate Model"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Model -\u003e UniqueDayList : getDate(date)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "activate UniqueDayList"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "UniqueDayList -\u003e CalorieManager : getCalorieManager()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "activate CalorieManager"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "alt Type \u003d\u003d Output"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "CalorieManager -\u003e CalorieManager : removeCalorieOutput(Index)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "else Type \u003d\u003d Input"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "CalorieManager -\u003e CalorieManager : removeCalorieInput(Index)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "end"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "CalorieManager -\u003e UniqueDayList"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deactivate CalorieManager"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "UniqueDayList -\u003e Model"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deactivate UniqueDayList"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "Model -\u003e RemoveCommand"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deactivate Model"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "RemoveCommand --\u003e LogicManager : result"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deactivate RemoveCommand"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "RemoveCommand -[hidden]-\u003e LogicManager : result"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "destroy RemoveCommand"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "[\u003c--LogicManager"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "deactivate LogicManager"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "wayne987": 75
    }
  },
  {
    "path": "docs/diagrams/UiClassDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "package UI \u003c\u003cRectangle\u003e\u003e{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Ui \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Class \"{abstract}\\nUiPart\" as UiPart"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Class UiManager"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Class HelpWindow"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Class ResultDisplay"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Class DayListPanel"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Class DayCard"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Class StatusBarFooter"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Class CommandBox"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Class CalorieStatsWindow"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Class WeightStatsWindow"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Class CalorieInputCard"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Class CalorieInputListPanel"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Class CalorieOutputCard"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Class CalorieOutputListPanel"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Class StatusBarDaySelected"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenModel #FFFFFF"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenLogic #FFFFFF"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "HiddenOutside ..\u003e Ui"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "UiManager .left.|\u003e Ui"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "UiManager -down-\u003e MainWindow"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow --\u003e HelpWindow"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow *-down-\u003e CommandBox"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow *-down-\u003e ResultDisplay"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "MainWindow *-down-\u003e WeightStatsWindow"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "MainWindow *-down-\u003e CalorieStatsWindow"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "MainWindow *-down-\u003e DayListPanel"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow *-down-\u003e StatusBarFooter"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "MainWindow *-down-\u003e CalorieInputListPanel"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "MainWindow *-down-\u003e CalorieOutputListPanel"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "MainWindow *-down-\u003e StatusBarDaySelected"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "DayCard *-down-\u003e MainWindow"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "DayListPanel -down--\u003e DayCard"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "CalorieInputListPanel -down--\u003e CalorieInputCard"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "CalorieOutputListPanel -down--\u003e CalorieOutputCard"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "MainWindow --|\u003e UiPart"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "ResultDisplay --|\u003e UiPart"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "CommandBox ----|\u003e UiPart"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "DayListPanel --|\u003e UiPart"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "DayCard --|\u003e UiPart"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "CalorieInputCard --|\u003e UiPart"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "CalorieOutputCard --|\u003e UiPart"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "StatusBarFooter --|\u003e UiPart"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "HelpWindow --|\u003e UiPart"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "WeightStatsWindow --|\u003e UiPart"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "CalorieStatsWindow --|\u003e UiPart"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "StatusBarDaySelected --|\u003e UiPart"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "CalorieStatsWindow -down-..\u003e Model"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "WeightStatsWindow ......\u003e Model"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "DayCard ...\u003e Model"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "CalorieInputCard ..\u003e Model"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "CalorieOutputCard ..\u003e Model"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "UiManager -right-\u003e Logic"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow -left-\u003e Logic"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "StatusBarFooter -[hidden]right- ResultDisplay"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "ResultDisplay -[hidden]right- CommandBox"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "CommandBox -[hidden]right- HelpWindow"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "HelpWindow -[hidden]right- WeightStatsWindow"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "WeightStatsWindow -[hidden]right- CalorieStatsWindow"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "CalorieStatsWindow -[hidden]right- DayListPanel"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow -[hidden]-|\u003e UiPart"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 21,
      "-": 48,
      "junhui-phoon": 21
    }
  },
  {
    "path": "docs/diagrams/ViewSequenceDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "box Ui UI_COLOR_T1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "participant \":MainWindow\" as MainWindow UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "end box"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "participant \":LogicManager\" as LogicManager LOGIC_COLOR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "participant \":MyFitnessBuddyParser\" as MyFitnessBuddyParser LOGIC_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "participant \"d:ViewCommand\" as ViewCommand LOGIC_COLOR"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "participant \":CommandResult\" as CommandResult LOGIC_COLOR"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "end box"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "activate MainWindow"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "MainWindow-\u003e LogicManager : execute(\"view 1\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "activate LogicManager"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "LogicManager -\u003e MyFitnessBuddyParser : parseCommand(\"view 1\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "activate MyFitnessBuddyParser"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "create ViewCommandParser"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "MyFitnessBuddyParser -\u003e ViewCommandParser"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "activate ViewCommandParser"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "ViewCommandParser --\u003e MyFitnessBuddyParser"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "deactivate ViewCommandParser"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "MyFitnessBuddyParser -\u003e ViewCommandParser : parse(\"1\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "activate ViewCommandParser"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "create ViewCommand"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "ViewCommandParser -\u003e ViewCommand"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "activate ViewCommand"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "ViewCommand --\u003e ViewCommandParser : v"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "deactivate ViewCommand"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "ViewCommandParser --\u003e MyFitnessBuddyParser : v"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "deactivate ViewCommandParser"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u0027Hidden arrow to position the destroy marker below the end of the activation bar."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "ViewCommandParser -[hidden]-\u003e MyFitnessBuddyParser"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "destroy ViewCommandParser"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "MyFitnessBuddyParser --\u003e LogicManager : v"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "deactivate MyFitnessBuddyParser"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "LogicManager -\u003e ViewCommand : execute()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "activate ViewCommand"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "create CommandResult"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "ViewCommand -\u003e CommandResult"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "activate CommandResult"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "CommandResult --\u003e ViewCommand"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "deactivate CommandResult"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "ViewCommand --\u003e LogicManager : result"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "deactivate ViewCommand"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "MainWindow\u003c--LogicManager"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "deactivate LogicManager"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "MainWindow -\u003e MainWindow :handleView(0)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "activate MainWindow UI_COLOR"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "MainWindow --\u003e MainWindow"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "deactivate MainWindow"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 72
    }
  },
  {
    "path": "docs/diagrams/tracing/LogicSequenceDiagram.puml",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include ../style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \":LogicManager\" as logic LOGIC_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \":AddressBookParser\" as abp LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \":EditCommandParser\" as ecp LOGIC_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Participant \"command:EditCommand\" as ec LOGIC_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "[-\u003e logic : execute"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "activate logic"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "logic -\u003e abp ++: parseCommand(commandText)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "create ecp"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "abp -\u003e ecp"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "abp -\u003e ecp ++: parse(arguments)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "create ec"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "ecp -\u003e ec ++: index, editDayDescriptor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "ec --\u003e ecp --"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "ecp --\u003e abp --: command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "abp --\u003e logic --: command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "-": 20
    }
  },
  {
    "path": "docs/index.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "title: My Fitness Buddy"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "[![CI Status](https://github.com/AY2021S1-CS2103T-W11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S1-CS2103T-W11-3/tp/actions)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "[![codecov](https://codecov.io/gh/AY2021S1-CS2103T-W11-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S1-CS2103T-W11-3/tp)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![Ui](images/Ui.png)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "**My Fitness Buddy is desktop application that helps users keep track of their weight and calorie intake.**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* If you are interested in using MyFitnessBuddy, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* If you are interested about developing MyFitnessBuddy, the [**Developer Guide**](DeveloperGuide.html) is a good place to start."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "**Acknowledgements**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "junhui-phoon": 7
    }
  },
  {
    "path": "docs/team/ethanso56.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "title: Ethan\u0027s Project Portfolio Page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "## Project: My Fitness Buddy"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "My Fitness Buddy is a desktop application that helps PES B pending recruits keep track of their"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "overall change in fitness level by allowing them to add daily records of their weight and calorie input/output.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "           "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Given below are my contributions to the project."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* **New Feature**: View command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Added a view command for the ability to view calorie inputs and calorie outputs for a specific day."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* What it does: allows users to view all calorie inputs and calorie outputs for a particular day when a view command is used"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* Justification: This feature is a core feature of the product as a user should be "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "able to see their calorie inputs and outputs of a day that they have recorded. "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* Highlights: There were some initial difficulty with figuring out how the Ui "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "elements work and what causes the list to update itself. I had to also figure out "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "the design of my implementation without affecting the design of the architecture.   "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                   "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Added additional functionality of allowing users to view calories by clicking on the Day card instead. "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* **New Feature**: Double clicking on a DayCard would allow you to view calorie inputs and calorie outputs that particular day."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Justification: Allows users an additional way to view their daily calories. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s1.github.io/tp-"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                                         dashboard/#breakdown\u003dtrue\u0026search\u003dethanso56\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                                         2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                                         ~functional-code~test-code~other) "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* **Enhancements to existing feature**:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    * Refactored Person class to Day class (Pull request: [\\#47](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/47))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    * Refactored Name class to Date class (Pull request: [\\#58](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/58))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    * Removed unused classes (Pull request: [\\#82](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/82))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    * Added a new status bar to show which day is currently showing its calorie lists (Pull request: [\\#145](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/145))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* **Documentation**:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    * User Guide:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        * Added documentation for the feature `view` (Pull request: [\\#156](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/156))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        * Edited sections: Introduction and General Commands (Pull request: [\\#129](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/129))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    * Developer Guide:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        * Added use cases and user stories (Pull request: [\\#28](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/28))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        * Added the implementation of the View all calorie inputs and outputs of a day feature (Pull request: [\\#101](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/101))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        * Edited sections: Purpose, audience and UI components (Pull request: [\\#101](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/101))"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "* **Community**:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    * PRs reviewed (with non-trival comments):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#50](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/50)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#73](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/73)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#85](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/85)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#89](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/89)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#94](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/94)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#99](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/99)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#82](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/82)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#113](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/113)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#117](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/117)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#121](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/121)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#122](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/122)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#124](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/124)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#82](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/82)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#132](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/132)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#150](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/150)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#222](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/222)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#224](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/224)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    [\\#225](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/225)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "   "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ethanso56": 68
    }
  },
  {
    "path": "docs/team/hoperawr.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "title: Hope\u0027s Project Portfolio Page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "## Project: My Fitness Buddy"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "My Fitness Buddy is My Fitness Buddy is a desktop application that helps PES B pending recruits keep track of their"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " overall change in fitness level by allowing them to add daily records of their weight and calorie input/output.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "           "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "Given below are my contributions to the project."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* **New Feature**: Update Profile"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  * What it does: allows the user to update their profile after creation."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  * Justification: This feature improves the product significantly because a user can make mistakes when creating their profile and be allowed to edit it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* **New Feature**: Storage able to handle new classes"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* **Code contributed**: [RepoSense link]()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* **Project management**:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  * Handled the entire storage system and storage test cases which included the creation of 5 new classes to handle "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  the new and constantly changing features of the application (Pull requests [\\#76](), [\\#133](), [\\#159]())"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  * Solved various bugs throughout the project. (Pull requests [\\#76](), [\\#111](), [\\#112](), [\\#222]())"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  * Removal of redundant code and refactoring of names. (Pull requests [\\#133](), [\\#224]())"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* **Enhancements to existing features**:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  * Changed the implementation of the add feature to add it by date (Pull requests [\\#103]())"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  * Wrote additional tests for existing features to increase coverage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* **Documentation**:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  * User Guide:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    * Changed existing User Guide to fit v1.2 of our application [\\#33]()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    * Edited the Introduction, Application Overview, Target Audience, Rationale, About, Using his User Guide"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     , Symbols and Syntax and Command Format. Also created a logo for the application. [\\#153]()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  * Developer Guide:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    * Added implementation details of the Storage package in Developer Guide."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* **Community**:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  * Handle the organisation and delegation of duties within the team."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "* _{you can add/remove categories in the list above}_"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 43
    }
  },
  {
    "path": "docs/team/junhui-phoon.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "title: Jun Hui\u0027s Project Portfolio Page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "## Project: My Fitness Buddy"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "My Fitness Buddy is My Fitness Buddy is a desktop application that helps PES B pending recruits keep track of their"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "overall change in fitness level by allowing them to add daily records of their weight and calorie input/output.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "Given below are my contributions to the project."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* **New Feature**: Data visualization of daily weight and calorie input/output"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * What it does:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Justification:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Highlights:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Credits:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* **New Feature**: Data visualization of the overall BMI progress of the recruits"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * What it does:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Justification:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Highlights:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Credits:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* **New Feature**: Added `stats` command that allows the user to see the data visualizations "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* **New Feature**: Added Profile Panels in the GUI that allows the user the see the details of"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "their profile such as weight, height, BMI and ID."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * What it does:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Justification:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Highlights:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Credits:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003djunhui-phoon\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* **Project management**:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Git Repo Maintainer - Handled most of the merging of pull requests; in particular, pull"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  requests that affects the main code base of My Fitness Buddy."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Managed releases `v1.3.trial` - `v1.4` (3 releases) on GitHub."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Various Bug Fixes (Pull Requests: [\\#119](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/119), [\\#219](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/219),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [#\\161](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/161), [\\#124](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/124))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* **Enhancements to existing features**:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Updated the GUI color scheme (Pull request: [\\#54](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/54))"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Rearranged the GUI elements (Command Box, Result Display Box etc.) (Pull request: [\\#54](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/54))"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Refactored Phone class to Weight Class (Pull request: [\\#50](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/50))"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Changed the GUI icon (Pull request: [\\#154](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/154))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Removed unused parameters for `add` command (Pull request: [\\#73](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/73))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * General housekeeping tasks - Edited AboutUs, README, index.md, GitHub Workflows (Pull Requests: [\\#36](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/36), [\\#35](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/35),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "   [\\#23](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/23))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* **Documentation**:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * User Guide:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    * Added documentation for the features `stats` (Pull Request: [\\#99](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/99), [\\#152](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/152), [\\#158](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/158))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    * Edited sections: Table of Contents, Getting Started and General Commands (Pull Request: [\\#148](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/148))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Developer Guide:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    * Edited sections: UI Components (Pull Request: [\\#99](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/99/files))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "* **Community**:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * PRs reviewed (with non-trivial comments): "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#218](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/218),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#213](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/213),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#212](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/212),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#211](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/211),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#151](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/151),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#145](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/145),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#143](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/143),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#139](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/139),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#138](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/138),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#135](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/135),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#133](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/133),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#128](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/121),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#127](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/127),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#122](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/122),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#121](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/121),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#101](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/101),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#94](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/94),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#47](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/47),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  [\\#38](https://github.com/AY2021S1-CS2103T-W11-3/tp/pull/38)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  * Assisted with team members\u0027 problems pertaining to Git and GitHub "
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 83
    }
  },
  {
    "path": "docs/tutorials/AddRemark.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Tutorial: Adding a command\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s walk you through the implementation of a new command — `remark`."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "## Create a new `remark` command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "**`RemarkCommand.java`:**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "``` java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Changes the remark of an existing day in the address book."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class RemarkCommand extends Command {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"remark\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(\"Hello from remark\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "### Hook `RemarkCommand` into the application"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "### Run the application"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "![Output displayed](../images/add-remark/RemarkHello.png)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "## Change `RemarkCommand` to throw an exception"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw an `CommandException` to accurately reflect that our command is still a work in progress."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "Following the convention in other commands, we add relevant messages as constants and use them."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "**`RemarkCommand.java`:**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "``` java"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the day identified \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            + \"by the index number used in the last day listing. \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Existing remark will be overwritten by the input.\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"r/ [REMARK]\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"r/ Likes to swim.\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "## Enhancing `RemarkCommand`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s change `RemarkCommand` to parse input from the user."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "### Make the command accept parameters"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "``` java"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "public class RemarkCommand extends Command {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String remark;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param index of the day in the filtered day list to edit the remark"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param remark of the day to be updated to"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public RemarkCommand(Index index, String remark) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(index, remark);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        this.remark \u003d remark;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof RemarkCommand)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        RemarkCommand e \u003d (RemarkCommand) other;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 remark.equals(e.remark);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "### Parse user input"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "**`ArgumentTokenizer.java`:**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "``` java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": " * Tokenizes an arguments string and returns an {@code ArgumentMultimap}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": " * object that maps prefixes to their respective argument values. Only the"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": " * given prefixes will be recognized in the arguments string."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": " * @param argsString Arguments string of the form:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": " * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": " * @param prefixes   Prefixes to tokenize the arguments string with"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": " * @return           ArgumentMultimap object that maps prefixes to their"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": " * arguments"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "**`ArgumentMultimap.java`:**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "``` java"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": " * Returns the last value of {@code prefix}."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "public Optional\u003cString\u003e getValue(Prefix prefix) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    List\u003cString\u003e values \u003d getAllValues(prefix);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    return values.isEmpty() ? Optional.empty() :"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional.of(values.get(values.size() - 1));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "**`DeleteCommandParser.java`:**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "``` java"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "return new DeleteCommand(index);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "There appears to be another utility class that obtains an `Index` from the input provided by the user."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "**`RemarkCommandParser.java`:**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "``` java"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "public RemarkCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(args);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        PREFIX_REMARK);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    Index index;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            RemarkCommand.MESSAGE_USAGE), ive);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    return new RemarkCommand(index, remark);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "If you are stuck, check out the sample"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508)."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "## Add `Remark` to the model"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of day data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the day’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a day."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "### Add a new `Remark` class"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Create a new `Remark` in `seedu.address.model.day`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "validation."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "### Make use of `Remark`"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "## Add a placeholder element for remark to the UI"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each day."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "Simply add the following to [`seedu.address.ui.DayCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe)."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "**`PersonCard.java`:**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "``` java"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "@FXML"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "private Label remark;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71)."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "**`PersonListCard.fxml`:**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "``` xml"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "That’s it! Fire up the application again and you should see something like this:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "![$remark shows up in each entry](../images/add-remark/$Remark.png)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "## Modify `Person` to support a `Remark` field"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "### Modify `Person`"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "### Update other usages of `Person`"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "## Updating Storage"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "While the changes to code may be minimal, the test data will have to be updated as well."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "to see what the changes entail."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "## Finalizing the UI"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "**`PersonCard.java`:**"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "``` java"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public PersonCard(Person day, int displayedIndex) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    remark.setText(day.getRemark().value);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "![The remark label is bound properly!](../images/add-remark/RemarkBound.png)"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "## Putting everything together"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "### Update `RemarkCommand` and `RemarkCommandParser`"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "save it with `Model#setPerson()`."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "**`RemarkCommand.java`:**"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "``` java"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Person dayToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Person editedDay \u003d new Person(dayToEdit.getName(), dayToEdit.getPhone(), dayToEdit.getEmail(),"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                dayToEdit.getAddress(), remark, dayToEdit.getTags());"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        model.setPerson(dayToEdit, editedDay);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return new CommandResult(generateSuccessMessage(editedDay));"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates a command execution success message based on whether the remark is added to or removed from"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * {@code dayToEdit}."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private String generateSuccessMessage(Person dayToEdit) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return String.format(message, dayToEdit);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "![Congratulations!](../images/add-remark/RemarkComplete.png)"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "## Writing tests"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s verify the correctness of our code by writing some tests!"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "### Automatically generating tests"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "The convention for test names is `methodName_testScenario_expectedResult`. An example would be"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "`execute_filteredList_success`."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "Then, create a test for the `execute` method."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "![Creating a test for `execute`.](../images/add-remark/CreateTest.png)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9)."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "## Conclusion"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "This concludes the tutorial for adding a new `Command` to AddressBook."
      }
    ],
    "authorContributionMap": {
      "ethanso56": 19,
      "-": 375
    }
  },
  {
    "path": "docs/tutorials/RemovingFields.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Tutorial: Removing Fields\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e —  Antoine de Saint-Exupery"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "## Safely deleting `Address`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "### Assisted refactoring"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "The `address` field in `Person` is actually an instance of the `seedu.address.model.day.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "![Usages detected](../images/remove/UnsafeDelete.png)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "![List of conflicts](../images/remove/SafeDeleteConflicts.png)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s try removing references to `Address` in `EditPersonDescriptor`."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "1. Safe delete the field `address` in `EditPersonDescriptor`."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Yes` when prompted to remove getters and setters."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `View Usages` again.\u003cbr\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "1. Remove the usages of `address` and select `Do refactor` when you are done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/div\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. Repeat the steps for the remaining usages of `Address`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "After you are done, verify that the application still works by compiling and running it again."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "### Manual refactoring"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`)."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "![$address](../images/remove/$address.png)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "**`PersonCard.java`**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "``` java"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "..."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "@FXML"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "private Label address;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "..."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "**`PersonCard.fxml`**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "``` xml"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "..."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "..."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "## Tidying up"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "**`invalidPersonAddressBook.json`:**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "```json"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "  \"days\": [ {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\","
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    \"phone\": \"9482424\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    \"email\": \"hans@example.com\","
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    \"address\": \"4th street\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  } ]"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "You can go through each individual `json` file and manually remove the `address` field."
      }
    ],
    "authorContributionMap": {
      "ethanso56": 2,
      "-": 101
    }
  },
  {
    "path": "docs/tutorials/TracingCode.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "title: \"Tutorial: Tracing code\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "## Before we start"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "![ArchitectureDiagram](../images/ArchitectureDiagram.png)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "![Architecture sequence diagram from the developer"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "guide](../images/ArchitectureSequenceDiagram.png)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Before we proceed, ensure that you have done the following:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the project in Intellij IDEA"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "1. Learn basic debugging features of Intellij IDEA"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting a break point"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.address.ui.CommandBox.CommandExecutor`."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": " ![LeftGutter](../images/tracing/LeftGutter.png)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "## Tracing the execution path"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "1. To start the debugging session, simply `Run` \\\u003e `Debug Main`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "1. The Debugger tool window should show up and look something like this:\u003cbr\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    ![StepInto](../images/tracing/StepInto.png)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   **LogicManager\\#execute().**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   ``` java"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "   @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "   public CommandResult execute(String commandText)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "           throws CommandException, ParseException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        //Logging, safe to ignore"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        //Parse user input from String to a Command"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        Command command \u003d addressBookParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        //Executes the Command and stores the result"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            //We can deduce that the previous line of code modifies model in some way"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            // since it\u0027s being stored here."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveAddressBook(model.getAddressBook());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "1. `Step into` the line where user input in parsed from a String to a Command."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    **`AddressBookParser\\#parseCommand()`**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "   ``` java"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "   public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "       ..."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "       final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "       final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "       ..."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    ![Variables](../images/tracing/Variables.png)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    ``` java"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        return new EditCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s see what `EditCommandParser#parse()` does by stepping into it."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003c/div\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "   ![EditCommand](../images/tracing/EditCommand.png)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s continue stepping through until we return to `LogicManager#execute()`."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "1. Now let’s see what happens when we call `command#execute()`\\!"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "   **`EditCommand\\#execute()`:**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "   ``` java"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "   @Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "   public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "       ..."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       Person dayToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       Person editedDay \u003d createEditedPerson(dayToEdit, editDayDescriptor);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       if (!dayToEdit.isSamePerson(editedDay) \u0026\u0026 model.hasPerson(editedDay)) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "           throw new CommandException(MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "       }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       model.setPerson(dayToEdit, editedDay);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedDay));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "1. As suspected, `command#execute()` does indeed make changes to `model`."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    `JsonAddressBook#saveAddressBook()`."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "   ``` java"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "   /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    * @param source future changes to this will not affect the created"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    * {@code JsonSerializableAddressBook}."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "       days.addAll("
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "           source.getPersonList()"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                 .stream()"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                 .map(JsonAdaptedPerson::new)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                 .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "1. We can continue to step through until we return to `MainWindow#executeCommand()`."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    **`ResultDisplay\\#setFeedbackToUser()`**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    ``` java"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setFeedbackToUser(String feedbackToUser) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay.setText(feedbackToUser);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "1. Finally, we step through until we reach the end of"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    `MainWindow#executeCommand()`."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "## Conclusion"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "In this tutorial, we traced a valid edit command from raw user input to"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "the result being displayed to the user. From this tutorial, you learned"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "more about the inner workings of AddressBook and how the various"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "components mesh together to form one cohesive product."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "Here are some quick questions you can try to answer based on your"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "execution path tracing. In some cases, you can do further tracing for"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "the given commands to find exactly what happens."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    do you think will happen if we traced the following commands"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    instead? What exceptions do you think will be thrown(if any), where"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    will the exceptions be thrown and where will they be handled?"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    1.  `redit 1 n/Alice Yu`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    2.  `edit 0 n/Alice Yu`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    3.  `edit 1 n/Alex Yeoh`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    4.  `edit 1`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    5.  `edit 1 n/アリス ユー`"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    6.  `edit 1 t/one t/two t/three t/one`"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "2.  What components will you have to modify to perform the following"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    enhancements to the application?"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    1.  Make command words case-insensitive"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    2.  Allow `delete` to remove more than one index at a time"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    3.  Save the address book in the CSV format instead"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    4.  Add a new command"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    5.  Add a new field to `Person`"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    6.  Add a new entity to the address book"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 6,
      "-": 244
    }
  },
  {
    "path": "src/main/java/seedu/address/MainApp.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Config;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Version;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.ConfigUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.LogicManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.storage.JsonMyFitnessBuddyStorage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.storage.MyFitnessBuddyStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.UserPrefsStorage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.UiManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final Version VERSION \u003d new Version(1, 3, 0, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Model model;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config config;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing MyFitnessBuddy ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d AppParameters.parse(getParameters());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        config \u003d initConfig(appParameters.getConfigPath());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        MyFitnessBuddyStorage myFitnessBuddyStorage \u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                new JsonMyFitnessBuddyStorage(userPrefs.getMyFitnessBuddyFilePath());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        storage \u003d new StorageManager(myFitnessBuddyStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        initLogging(config);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d initModelManager(storage, userPrefs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new UiManager(logic);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s records and {@code userPrefs}. \u003cbr\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * The data from the sample my fitness buddy records will be used instead if {@code storage}\u0027s records is not found,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * or an empty person"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * will be used instead if errors occur when reading {@code storage}\u0027s records for my fitness buddy."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * ."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Optional\u003cReadOnlyMyFitnessBuddy\u003e myFitnessBuddyOptional;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        ReadOnlyMyFitnessBuddy initialData;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            myFitnessBuddyOptional \u003d storage.readFitnessBuddy();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (!myFitnessBuddyOptional.isPresent()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                logger.info(\"Data file not found. Will be starting with a sample MyFitnessBuddy\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            initialData \u003d myFitnessBuddyOptional.orElseGet(SampleDataUtil::getSampleMyFitnessBuddy);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            storage.saveFitnessBuddy(initialData);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            logger.warning(\"Data file not in the correct format. Will be starting with a new MyFitnessBuddy\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            initialData \u003d new MyFitnessBuddy();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with a new MyFitnessBuddy\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            initialData \u003d new MyFitnessBuddy();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ModelManager(initialData, userPrefs);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initLogging(Config config) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        LogsCenter.init(config);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code configFilePath} is null."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        Config initializedConfig;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePathUsed;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configFilePath !\u003d null) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Custom Config file specified \" + configFilePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            configFilePathUsed \u003d configFilePath;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using config file : \" + configFilePathUsed);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d configOptional.orElse(new Config());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"Using default config properties\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d new Config();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update config file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedConfig;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     * or a new {@code UserPrefs} with default configuration if errors occur when"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * reading from the file."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    protected UserPrefs initPrefs(UserPrefsStorage storage) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d storage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using prefs file : \" + prefsFilePath);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs initializedPrefs;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"Using default user prefs\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty MyFitnessBuddy\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update prefs file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(initializedPrefs);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedPrefs;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        logger.info(\"Starting My Fitness Buddy \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping My Fitness Buddy\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                +"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                \" ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(model.getUserPrefs());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 6,
      "-": 158,
      "jiaax": 23,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/GuiSettings.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A Serializable class that contains the GUI settings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiSettings implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private static final double DEFAULT_HEIGHT \u003d 560;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final double DEFAULT_WIDTH \u003d 1024;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowWidth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowHeight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Point windowCoordinates;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code GuiSettings} with the default height, width and position."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        windowWidth \u003d DEFAULT_WIDTH;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        windowHeight \u003d DEFAULT_HEIGHT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d null; // null represent no coordinates"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code GuiSettings} with the specified height, width and position."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d new Point(xPosition, yPosition);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowWidth() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowHeight() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowHeight;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public Point getWindowCoordinates() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof GuiSettings)) { //this handles null as well."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings o \u003d (GuiSettings) other;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth \u003d\u003d o.windowWidth"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Width : \" + windowWidth + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Height : \" + windowHeight + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Position : \" + windowCoordinates);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "-": 77,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String MESSAGE_INVALID_DAY_DISPLAYED_INDEX \u003d \"The day index provided is invalid\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_INVALID_CALORIE_DISPLAYED_INDEX \u003d \"The calorie index provided is invalid\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "-": 12,
      "wayne987": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/Logic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Logic component"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Logic {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandText The command as entered by the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the result of the command execution."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException If an error occurs during parsing."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns MyFitnessBuddy."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @see seedu.address.model.Model#getMyFitnessBuddy()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    ReadOnlyMyFitnessBuddy getMyFitnessBuddy();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /** Returns an unmodifiable view of the filtered list of days */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    ObservableList\u003cDay\u003e getFilteredDayList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns an unmodifiable view of the filtered list of persons */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cPerson\u003e getFilteredPersonList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns the user prefs\u0027 My Fitness Buddy file path."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    Path getMyFitnessBuddyFilePath();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Set the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 2,
      "-": 45,
      "jiaax": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/LogicManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.logic.parser.MyFitnessBuddyParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final MyFitnessBuddyParser myFitnessBuddyParser;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public LogicManager(Model model, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        myFitnessBuddyParser \u003d new MyFitnessBuddyParser();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Command command \u003d myFitnessBuddyParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            storage.saveFitnessBuddy(model.getMyFitnessBuddy());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public ReadOnlyMyFitnessBuddy getMyFitnessBuddy() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return model.getMyFitnessBuddy();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public ObservableList\u003cDay\u003e getFilteredDayList() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return model.getFilteredDayList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getFilteredPersonList();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Path getMyFitnessBuddyFilePath() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return model.getMyFitnessBuddyFilePath();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getGuiSettings();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "ethanso56": 3,
      "-": 74,
      "jiaax": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " * Adds a day to the records."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a day to the records. \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Parameters: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            + PREFIX_DATE + \"DATE \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            + PREFIX_WEIGHT + \"WEIGHT \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            + PREFIX_DATE + \"2020-10-14 \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            + PREFIX_WEIGHT + \"70 \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New day added: %1$s\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_DAY \u003d \"This day already exists in the records.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_PAST \u003d \"Bruh going back in time?\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_FUTURE \u003d \"Bruh you travelling through time?\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String MESSAGE_NO_LOGIN \u003d \"Please login to a profile before adding a new day.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final Day toAdd;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Creates an AddCommand to add the specified {@code Day}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public AddCommand(Day day) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        requireNonNull(day);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        toAdd \u003d day;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private boolean isBefore(Date toAdd, Date start) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate add \u003d LocalDate.parse(toAdd.value);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate compareTo \u003d LocalDate.parse(start.value);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return add.isBefore(compareTo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private boolean isAfter(Date toAdd) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate add \u003d LocalDate.parse(toAdd.value);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate compareTo \u003d LocalDate.now();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return add.isAfter(compareTo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Date start \u003d model.getMyFitnessBuddy().getPerson().getDay();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Date check \u003d toAdd.getDate();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (start \u003d\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            throw new CommandException(MESSAGE_NO_LOGIN);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (isBefore(check, start)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new CommandException(MESSAGE_PAST);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (isAfter(check)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new CommandException(MESSAGE_FUTURE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (model.hasDay(toAdd)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            throw new CommandException(MESSAGE_DUPLICATE_DAY);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (model.isDefaultProfile()) { //no profile"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            throw new CommandException(CreateCommand.MESSAGE_NO_PROFILE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        model.addDay(toAdd);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        model.updateDay();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof AddCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 9,
      "-": 42,
      "wayne987": 26,
      "junhui-phoon": 13,
      "jiaax": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CalorieCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_CALORIE_COUNT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_CALORIE_TYPE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_FOOD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DAYS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Calorie;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Add a certain calorie input/output for a particular day"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class CalorieCommand extends Command {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"calorie\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String NO_AVAILABLE_DAY \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"Please add a new day entry for the date intended before adding calorie input/output\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String DUPLICATE_TIME \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"A calorie record with the same time already exist\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String INVALID_DATE \u003d \"Please input a valid Date\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String INSANE_INPUT_CALORIE \u003d \"why are you eat so much calories?\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"It is physically impossible to consume more than 2147483647KCal\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String INSANE_OUTPUT_CALORIE \u003d \"Good you are exercising so much!!\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"But it is physically impossible to expend more than 2147483647KCal\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_PARAMETERS \u003d \"Parameters: \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_CALORIE_TYPE + \"IN/OUT\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_DATE + \"(OPTIONAL) 2020-10-14\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_TIME + \"TIME\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_EXERCISE + \"(IN) EXERCISE\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_FOOD + \"(OUT) FOOD\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_CALORIE_COUNT + \"CALORIE COUNT\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_CALORIE_TYPE + \"out \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_TIME + \"1230 \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_EXERCISE + \"RUNNING \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_CALORIE_COUNT + \"123\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a calorie to a particular day. \\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + MESSAGE_PARAMETERS;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_USAGE_2 \u003d \"There can only be f/FOOD field for tp/in and e/EXERCISE for tp/out \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + MESSAGE_PARAMETERS;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Calorie calorie;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Boolean isOut;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Creates an CalorieCommand to add the specified {@code Calorie}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieCommand(Calorie calorie, Boolean isOut, String date) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(calorie);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(isOut);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorie \u003d calorie;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.isOut \u003d isOut;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public LocalDate getDate(String date) throws CommandException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate addDate;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (date.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            addDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (Date.isValidDate(date)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                addDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(INVALID_DATE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return addDate;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param calorie to be added"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param cm of the Day added"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param isOut determine the type of calorie"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return true if the calorie added will cause an overflow"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    boolean inRange(Calorie calorie, CalorieManager cm, Boolean isOut) throws CommandException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int currentTotalCalorie;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int calorieCount;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            calorieCount \u003d Integer.parseInt(calorie.getCalorieCount().calorieCount);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (isOut) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(INSANE_OUTPUT_CALORIE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(INSANE_INPUT_CALORIE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (isOut) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            currentTotalCalorie \u003d cm.getTotalOutputCalorie();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            currentTotalCalorie \u003d cm.getTotalInputCalorie();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return currentTotalCalorie + calorieCount \u003e 0;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate date \u003d getDate(this.date);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (model.hasDay(date)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Day editDay \u003d model.getDay(date);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            CalorieManager cm \u003d editDay.getCalorieManager();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (editDay.getCalorieManager().contains(calorie, isOut)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(DUPLICATE_TIME);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (!inRange(calorie, cm, isOut)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                if (isOut) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    throw new CommandException(INSANE_OUTPUT_CALORIE);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    throw new CommandException(INSANE_INPUT_CALORIE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            //            if (editDay.getCalorieManager().contains(calorie, isOut)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            //                throw new CommandException(DUPLICATE_TIME);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            //            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (!isOut) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                editDay.getCalorieManager().addCalorieInput((Input) calorie);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                System.out.println(\"hello\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                editDay.getCalorieManager().addCalorieOutput((Output) calorie);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            model.setDay(model.getDay(date), editDay);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            model.updateFilteredDayList(PREDICATE_SHOW_ALL_DAYS);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new CommandException(NO_AVAILABLE_DAY);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new CommandResult(calorie.toString());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieCommand oC \u003d (CalorieCommand) other;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                || (other instanceof CalorieCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u0026\u0026 isOut.equals(((CalorieCommand) other).isOut))"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u0026\u0026 date.equals(((CalorieCommand) other).date)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u0026\u0026 calorie.toString().equals(oC.calorie.toString());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 155,
      "jiaax": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ChangeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DAYS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Calorie;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieCount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Exercise;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Food;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Edit a certain calorie input/output for a particular day"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class ChangeCommand extends Command {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"change\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String DUPLICATE_TIME \u003d \"There exist a calorie with the same time\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the calorie identified \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"by the index number used in the displayed calorie list. \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"Existing values will be overwritten by the input values.\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"[\" + PREFIX_TIME + \"TIME] \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_EDIT_DAY_SUCCESS \u003d \"Edited Calorie: %1$s\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_NOT_EDITED \u003d \"Please edit at least one of the calorie field\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Index index;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Index calorieIndex;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private ChangeCalorieDescriptor changeCalorieDescriptor;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param index of the calorie in the list to edit."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param changeCalorieDescriptor details to edit the calorie with."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public ChangeCommand(Index index, ChangeCommand.ChangeCalorieDescriptor changeCalorieDescriptor,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                         Index calorieIndex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(changeCalorieDescriptor);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.changeCalorieDescriptor \u003d new ChangeCommand.ChangeCalorieDescriptor(changeCalorieDescriptor);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorieIndex \u003d calorieIndex;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param date of the calorie is in."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param changeCalorieDescriptor details to edit the calorie with."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public ChangeCommand(LocalDate date, ChangeCommand.ChangeCalorieDescriptor changeCalorieDescriptor,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                         Index calorieIndex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(date);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(changeCalorieDescriptor);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.changeCalorieDescriptor \u003d new ChangeCommand.ChangeCalorieDescriptor(changeCalorieDescriptor);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorieIndex \u003d calorieIndex;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        List\u003cDay\u003e lastShownList \u003d model.getMyFitnessBuddy().getDayList();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Day editDay;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (index !\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(Messages.MESSAGE_INVALID_DAY_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                editDay \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            editDay \u003d model.getDay(date);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Boolean isOut \u003d changeCalorieDescriptor.getIsOut();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager calorieManager \u003d editDay.getCalorieManager();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Calorie calorieToEdit \u003d calorieManager.getCalorie(isOut, calorieIndex);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Calorie editedCalorie \u003d createEditedCalorie(calorieToEdit, changeCalorieDescriptor);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (isOut) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Output toEdit \u003d (Output) calorieToEdit;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Output edited \u003d (Output) editedCalorie;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (toEdit.isSameOutput(edited)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!isOut) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Input toEdit \u003d (Input) calorieToEdit;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Input edited \u003d (Input) editedCalorie;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (toEdit.isSameInput(edited)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager cm \u003d calorieManager.setCalorie(calorieIndex, changeCalorieDescriptor.getIsOut(), editedCalorie);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Date date \u003d editDay.getDate();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Weight weight \u003d editDay.getWeight();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Day editedDay \u003d new Day(date, weight, cm);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        model.setDay(editDay, editedDay);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        model.updateFilteredDayList(PREDICATE_SHOW_ALL_DAYS);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_EDIT_DAY_SUCCESS, editedCalorie));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Creates and returns a {@code Calorie} with the details of {@code dayToEdit}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * edited with {@code editCalorieDescriptor}."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private static Calorie createEditedCalorie(Calorie calorieToEdit,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                               ChangeCommand.ChangeCalorieDescriptor changeCalorieDescriptor) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assert changeCalorieDescriptor !\u003d null;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Time updatedTime \u003d changeCalorieDescriptor.getTime().orElse(calorieToEdit.getTime());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieCount updatedCalorieCount \u003d changeCalorieDescriptor.getCalorieCount()"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                .orElse(calorieToEdit.getCalorieCount());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Boolean isOut \u003d changeCalorieDescriptor.getIsOut();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (isOut) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Exercise updatedExercise \u003d changeCalorieDescriptor.getExercise()"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    .orElse(((Output) calorieToEdit).getExercise());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new Output(updatedTime, updatedExercise, updatedCalorieCount);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Food updatedFood \u003d changeCalorieDescriptor.getFood()"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    .orElse(((Input) calorieToEdit).getFood());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new Input(updatedTime, updatedFood, updatedCalorieCount);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Stores the details to edit the calorie with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * corresponding field value of the calorie."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static class ChangeCalorieDescriptor {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        private Time time;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        private Food food;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        private Exercise exercise;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        private CalorieCount calorieCount;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        private Boolean isOut;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public ChangeCalorieDescriptor() {}"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         * Copy constructor."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         * A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public ChangeCalorieDescriptor(ChangeCommand.ChangeCalorieDescriptor toCopy) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            setTime(toCopy.time);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            setFood(toCopy.food);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            setExercise(toCopy.exercise);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            setCalorieCount(toCopy.calorieCount);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            setIsOut(toCopy.isOut);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return CollectionUtil.isAnyNonNull(time, calorieCount, food, exercise);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void setIsOut(Boolean isOut) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.isOut \u003d isOut;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public Boolean getIsOut() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return isOut;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void setTime(Time time) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public Optional\u003cTime\u003e getTime() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return Optional.ofNullable(time);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void setFood(Food food) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.food \u003d food;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public Optional\u003cFood\u003e getFood() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return Optional.ofNullable(food);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void setExercise(Exercise exercise) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.exercise \u003d exercise;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public Optional\u003cExercise\u003e getExercise() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return Optional.ofNullable(exercise);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void setCalorieCount(CalorieCount calorieCount) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.calorieCount \u003d calorieCount;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public Optional\u003cCalorieCount\u003e getCalorieCount() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return Optional.ofNullable(calorieCount);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public boolean equals(Object other) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            // short circuit if same object"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            // instanceof handles nulls"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (!(other instanceof EditCommand.EditDayDescriptor)) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            // state check"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            ChangeCommand.ChangeCalorieDescriptor e \u003d (ChangeCommand.ChangeCalorieDescriptor) other;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return getTime().equals(e.getTime())"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    \u0026\u0026 getTime().equals(e.getTime())"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    \u0026\u0026 getCalorieCount().equals(e.getCalorieCount())"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    \u0026\u0026 getExercise().equals(e.getExercise())"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    \u0026\u0026 getFood().equals(e.getFood());"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "wayne987": 252
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ClearCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Clears the days in My Fitness Buddy."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"My Fitness Buddy has been cleared!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        model.setMyFitnessBuddy(new MyFitnessBuddy());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS, true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "-": 17,
      "junhui-phoon": 2,
      "jiaax": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CommandResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Help information should be shown to the user. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean showHelp;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /** The application should exit. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /** Statistics should be shown to the user */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private final boolean showAllStats;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private final boolean showCalorieStats;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private final boolean showWeightStats;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private final boolean showCommanderStats;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /** All lists should be cleared */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final boolean clear;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /** If the index matches the current day\u0027s calories being shown, remove them */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final boolean delete;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final int indexDelete;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final boolean view;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final int indexView;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private final boolean profileHasChanged;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean showAllStats,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                         boolean showCalorieStats, boolean showWeightStats, boolean clear, boolean delete,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                         int indexDelete, boolean profileHasChanged, boolean view, int indexView,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                         boolean showCommanderStats) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        this.showHelp \u003d showHelp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.showAllStats \u003d showAllStats;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.showCalorieStats \u003d showCalorieStats;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.showWeightStats \u003d showWeightStats;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.clear \u003d clear;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.delete \u003d delete;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.indexDelete \u003d indexDelete;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.profileHasChanged \u003d profileHasChanged;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.view \u003d view;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.indexView \u003d indexView;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.showCommanderStats \u003d showCommanderStats;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this(feedbackToUser, false, false, false, false, false, false, false, 0, false, false, 0, false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser, showAllStats, showCalorieStats,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * showWeightStats},"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean showAllStats, boolean showCalorieStats,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                         boolean showWeightStats, boolean showCommanderStats) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this(feedbackToUser, false, false, showAllStats, showCalorieStats, showWeightStats,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 0, false, false, 0,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                showCommanderStats);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser, showHelp, exit},"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this(feedbackToUser, showHelp, exit, false, false, false, false, false, 0, false, false, 0, false);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser, clear},"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean clear) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this(feedbackToUser, false, false, false, false, false, clear, false, 0, false, false, 0, false);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser, delete, index},"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean delete, int indexDelete) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this(feedbackToUser, false, false, false, false, false, false, delete, indexDelete, false, false, 0, false);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code profileHasChanged, feedbackToUser},"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public CommandResult(boolean profileHasChanged, String feedbackToUser) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this(feedbackToUser, false, false, false, false, false, false, false, 0, profileHasChanged, false, 0, false);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser, indexView, view},"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public CommandResult(String feedbackToUser, int indexView, boolean view) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this(feedbackToUser, false, false, false, false, false, false, false, 0, false, view, indexView, false);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowHelp() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return showHelp;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public boolean isShowAllStats() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return showAllStats;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public boolean isShowCalorieStats() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return showCalorieStats;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public boolean isShowWeightStats() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return showWeightStats;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public boolean isClear() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return clear;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public boolean isDelete() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return delete;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public int getIndexDelete() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return indexDelete;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public boolean isProfileChanged() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return profileHasChanged;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public boolean isView() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return view;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public int getIndexView() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return indexView;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public boolean isShowCommanderStats() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return showCommanderStats;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof CommandResult)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult otherCommandResult \u003d (CommandResult) other;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                \u0026\u0026 showAllStats \u003d\u003d otherCommandResult.showAllStats"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                \u0026\u0026 showCalorieStats \u003d\u003d otherCommandResult.showCalorieStats"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 showWeightStats \u003d\u003d otherCommandResult.showWeightStats"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 clear \u003d\u003d otherCommandResult.clear"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 delete \u003d\u003d otherCommandResult.delete"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 indexDelete \u003d\u003d otherCommandResult.indexDelete"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 profileHasChanged \u003d\u003d otherCommandResult.profileHasChanged"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 view \u003d\u003d otherCommandResult.view"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 indexView \u003d\u003d otherCommandResult.indexView;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return Objects.hash(feedbackToUser, showHelp, exit, showAllStats, showCalorieStats,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                showWeightStats, clear, delete, indexDelete, profileHasChanged, view, indexView, showCommanderStats);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 68,
      "-": 69,
      "junhui-phoon": 67
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CreateCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.logic.LogicManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Creates a profile for the new Person and add it into My Fitness Buddy."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class CreateCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"create\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a profile in the records. \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            + \"Parameters: \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            + PREFIX_NAME + \"Name \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            + PREFIX_ID + \"ID \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            + PREFIX_HEIGHT + \"Height(cm) \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            + PREFIX_WEIGHT + \"Target Weight \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            + PREFIX_NAME + \"John \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_ID + \"4312 \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            + PREFIX_HEIGHT + \"170 \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            + PREFIX_WEIGHT + \"70 \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_NO_PROFILE \u003d \"Create a profile before adding a day. \\n\" + MESSAGE_USAGE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_SAME_ID \u003d \"There exists a profile with the same ID \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New profile created: %1$s\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String MESSAGE_ERROR \u003d \"There exists a profile. \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final Profile profile;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Creates a new {@code profile}."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public CreateCommand(Profile profile) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(profile);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.profile \u003d profile;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Creates a new {@code profile}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean isUnique(ID id, ObservableList\u003cPerson\u003e ul) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return ul.size() \u003d\u003d 0 || ul.stream().noneMatch(x -\u003e x.getProfile().getId().value.equals(id.value));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Person newPerson \u003d new Person(profile);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (model.hasPerson(newPerson)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            throw new CommandException(MESSAGE_ERROR);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!isUnique(profile.id, model.getMyFitnessBuddy().getPersons())) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new CommandException(MESSAGE_SAME_ID);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        model.addPerson(newPerson);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        model.updateDay();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        logger.info(\"---------------[USER COMMAND][Profile\" + profile.toString() + \" created]\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return new CommandResult(true, String.format(MESSAGE_SUCCESS, profile));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                || (other instanceof CreateCommand"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                \u0026\u0026 profile.equals(((CreateCommand) other).profile));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 21,
      "jiaax": 61,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Deletes a day identified using it\u0027s displayed index from My Fitness Buddy."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            + \": Deletes the day identified by the index number used in the displayed day list.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String MESSAGE_DELETE_DAY_SUCCESS \u003d \"Deleted Day: %1$s\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public DeleteCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        List\u003cDay\u003e lastShownList \u003d model.getFilteredDayList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_DAY_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day dayToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        model.deleteDay(dayToDelete);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DELETE_DAY_SUCCESS, dayToDelete),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                true, targetIndex.getOneBased());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof DeleteCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 7,
      "-": 44,
      "jiaax": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DAYS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Edits the details of an existing day in My Fitness Buddy."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the day identified \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            + \"by the index number used in the displayed day list. \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Existing values will be overwritten by the input values.\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            + \"[\" + PREFIX_DATE + \"DATE] \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String MESSAGE_EDIT_DAY_SUCCESS \u003d \"Edited Day: %1$s\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_DAY \u003d \"This day already exists in My Fitness Buddy.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final EditDayDescriptor editDayDescriptor;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param index of the day in the filtered day list to edit."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param editDayDescriptor details to edit the day with."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public EditCommand(Index index, EditDayDescriptor editDayDescriptor) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        requireNonNull(editDayDescriptor);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.editDayDescriptor \u003d new EditDayDescriptor(editDayDescriptor);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        List\u003cDay\u003e lastShownList \u003d model.getMyFitnessBuddy().getDayList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_DAY_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day dayToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day editedDay \u003d createEditedDay(dayToEdit, editDayDescriptor);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (!dayToEdit.isSameDay(editedDay) \u0026\u0026 model.hasDay(editedDay)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new CommandException(MESSAGE_DUPLICATE_DAY);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        model.setDay(dayToEdit, editedDay);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        model.updateFilteredDayList(PREDICATE_SHOW_ALL_DAYS);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_EDIT_DAY_SUCCESS, editedDay));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Creates and returns a {@code Day} with the details of {@code dayToEdit}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * edited with {@code editDayDescriptor}."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private static Day createEditedDay(Day dayToEdit, EditDayDescriptor editDayDescriptor) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert dayToEdit !\u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Date updatedDate \u003d editDayDescriptor.getDate().orElse(dayToEdit.getDate());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Weight updatedWeight \u003d editDayDescriptor.getWeight().orElse(dayToEdit.getWeight());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CalorieManager calorieManager \u003d dayToEdit.getCalorieManager();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return new Day(updatedDate, updatedWeight, calorieManager);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof EditCommand)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand e \u003d (EditCommand) other;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 editDayDescriptor.equals(e.editDayDescriptor);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Stores the details to edit the day with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * corresponding field value of the day."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static class EditDayDescriptor {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        private Date date;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        private Weight weight;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        public EditDayDescriptor() {}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "         * Copy constructor."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "         * A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        public EditDayDescriptor(EditDayDescriptor toCopy) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            setDate(toCopy.date);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            setWeight(toCopy.weight);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return CollectionUtil.isAnyNonNull(date, weight);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        public void setDate(Date date) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            this.date \u003d date;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        public Optional\u003cDate\u003e getDate() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return Optional.ofNullable(date);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        public void setWeight(Weight weight) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            this.weight \u003d weight;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        public Optional\u003cWeight\u003e getWeight() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            return Optional.ofNullable(weight);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean equals(Object other) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            // short circuit if same object"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            // instanceof handles nulls"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (!(other instanceof EditDayDescriptor)) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            // state check"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            EditDayDescriptor e \u003d (EditDayDescriptor) other;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return getDate().equals(e.getDate())"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    \u0026\u0026 getWeight().equals(e.getWeight());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 4,
      "ethanso56": 42,
      "-": 109,
      "wayne987": 1,
      "junhui-phoon": 8,
      "jiaax": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting My Fitness Buddy as requested ...\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "jiaax": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.BelowCertainBmiPredicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Finds and lists all persons in My Fitness Buddy whose name contains any of the argument keywords."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Keyword matching is case insensitive."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final Predicate\u003cPerson\u003e predicate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param predicate constructor to find by name"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public FindCommand(NameContainsKeywordsPredicate predicate) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param predicate constructor to find by bmi"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public FindCommand(BelowCertainBmiPredicate predicate) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.predicate \u003d predicate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(predicate);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof FindCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 40,
      "wayne987": 16,
      "jiaax": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Lists all days in My fitness Buddy to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Listed all days\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 22,
      "jiaax": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/LoginCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * 換使用者"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class LoginCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"login\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final int i;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * 換使用者指令构造构造函数"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param i"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public LoginCommand(Index i) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.i \u003d i.getZeroBased();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        List\u003cPerson\u003e ul \u003d model.getMyFitnessBuddy().getPersons();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (ul.size() \u003c\u003d i || ul.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new CommandException(\"not valid index\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Person toChange \u003d ul.get(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        System.out.println(\"current bmi :\" + toChange.getCurrentBmi());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        model.setCurrentPerson(toChange);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        model.updateDay();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return new CommandResult(true, toChange.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 38,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/RemoveCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_CALORIE_TYPE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DAYS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Calorie;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Removes a certain calorie input/output from a particular day"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class RemoveCommand extends Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"remove\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String NO_AVAILABLE_DAY \u003d \"Please add a new day entry for the date intended \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"before removing any calorie entry\\\";\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \": Removes the calorie identified by the index number and type used in the displayed day list.\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"Parameters:\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_CALORIE_TYPE + \"IN / OUT\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_DATE + \"Date\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + PREFIX_INDEX + \"Positive index number\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + PREFIX_CALORIE_TYPE + \" tp/out \" + PREFIX_INDEX + \" 1\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_DELETE_CALORIE_SUCCESS \u003d \"Removed Calorie - \" + \": %1$s\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final Boolean isOut;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private LocalDate date \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Index index \u003d null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param targetIndex of the calorie in the day to delete"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param isOut if the calorie is Output calorie"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param date of the day that the calorie belongs to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public RemoveCommand(Index targetIndex, Boolean isOut, LocalDate date) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.isOut \u003d isOut;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param targetIndex of the calorie in the day to delete"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param isOut if the calorie is Output calorie"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param index of the day that the calorie belongs to"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public RemoveCommand(Index targetIndex, Boolean isOut, Index index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.isOut \u003d isOut;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        List\u003cDay\u003e lastShownList \u003d model.getMyFitnessBuddy().getDayList();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Day editDay;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (index !\u003d null) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(Messages.MESSAGE_INVALID_DAY_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                editDay \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (!model.hasDay(date)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(NO_AVAILABLE_DAY);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            editDay \u003d model.getDay(date);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager calorieManager \u003d editDay.getCalorieManager();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d calorieManager.getListSize(isOut)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_CALORIE_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Calorie remove \u003d calorieManager.getCalorie(isOut, targetIndex);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        editDay.getCalorieManager().removeCalorie(isOut, targetIndex);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        model.setDay(editDay, editDay);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        model.updateFilteredDayList(PREDICATE_SHOW_ALL_DAYS);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DELETE_CALORIE_SUCCESS, remove));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                || (other instanceof RemoveCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u0026\u0026 targetIndex.equals(((RemoveCommand) other).targetIndex) // state check"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u0026\u0026 isOut.equals(((RemoveCommand) other).isOut));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 112
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/StatsCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_VIEW_STATS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " * Shows the respective statistics in a new window"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class StatsCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"stats\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows the relevant statistics. \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            + \"Options: \" + COMMAND_WORD + \" \" + PREFIX_VIEW_STATS + \"all \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            + COMMAND_WORD + \" \" + PREFIX_VIEW_STATS + \"calorie \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            + COMMAND_WORD + \" \" + PREFIX_VIEW_STATS + \"weight \\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String SHOWING_ALL_STATS_MESSAGE \u003d \"Opened both stats window.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String SHOWING_CALORIE_STATS_MESSAGE \u003d \"Opened calories stats window.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String SHOWING_WEIGHT_STATS_MESSAGE \u003d \"Opened weight stats window.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String SHOWING_COMMANDER_STATS_MESSAGE \u003d \"Opened commander stats window\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private boolean showCalorie;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private boolean showWeight;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private boolean showCommander;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param showCalorie to show the calorie statistics"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param showWeight to show the weight statistics"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public StatsCommand(boolean showCalorie, boolean showWeight, boolean showCommander) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.showCalorie \u003d showCalorie;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.showWeight \u003d showWeight;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.showCommander \u003d showCommander;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public CommandResult execute (Model model) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (!showCalorie \u0026\u0026 !showWeight \u0026\u0026 showCommander) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            return new CommandResult(SHOWING_COMMANDER_STATS_MESSAGE, false, false, false, true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        } else if (showCalorie \u0026\u0026 !showWeight) { /* Show calorie statistics only*/"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            return new CommandResult(SHOWING_CALORIE_STATS_MESSAGE, false, true, false, false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        } else if (!showCalorie \u0026\u0026 showWeight) { /* Show weight statistics only*/"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            return new CommandResult(SHOWING_WEIGHT_STATS_MESSAGE, false, false, true, false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        } else { /* Show both statistics */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            return new CommandResult(SHOWING_ALL_STATS_MESSAGE, true, false, false, false);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return other \u003d\u003d this //short circuit if same object"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                || (other instanceof StatsCommand //instanceof handles nulls"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                \u0026\u0026 showCalorie \u003d\u003d ((StatsCommand) other).showCalorie"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                \u0026\u0026 showWeight \u003d\u003d ((StatsCommand) other).showWeight"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                \u0026\u0026 showCommander \u003d\u003d ((StatsCommand) other).showCommander);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/UpdateCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.logic.LogicManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Height;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " * Updates the profile in My Fitness Buddy"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"update\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Update the profile in the records.\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            + \"Parameters: \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            + PREFIX_NAME + \"Name \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            + PREFIX_ID + \"ID \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            + PREFIX_HEIGHT + \"Height(cm) \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            + PREFIX_WEIGHT + \"Target Weight \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            + PREFIX_NAME + \"John \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            + PREFIX_ID + \"1234 \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            + PREFIX_HEIGHT + \"170 \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            + PREFIX_WEIGHT + \"70 \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Profile updated!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final String MESSAGE_ERROR \u003d \"No profile found. \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final String MESSAGE_NOT_EDITED \u003d \"At least one valid field to edit must be provided.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_SAME_ID \u003d \"The ID you intending to change to belongs to someone else\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final EditProfileDescriptor editProfileDescriptor;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Creates a new {@code EditProfileDescriptor}."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public UpdateCommand(EditProfileDescriptor editProfileDescriptor) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        requireNonNull(editProfileDescriptor);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.editProfileDescriptor \u003d new EditProfileDescriptor(editProfileDescriptor);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * checks if the id intended to be change is taken"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean isUnique(ID id, ObservableList\u003cPerson\u003e ul) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        System.out.println(id);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return ul.size() \u003d\u003d 0 || ul.stream().noneMatch(x -\u003e x.getProfile().getId().value.equals(id.value));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (model.isDefaultProfile()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new CommandException(MESSAGE_ERROR);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (editProfileDescriptor.id !\u003d null \u0026\u0026 !isUnique(editProfileDescriptor.id, model.getFilteredPersonList())) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new CommandException(MESSAGE_SAME_ID);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Profile toEdit \u003d model.getMyFitnessBuddy().getProfile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Profile editedProfile \u003d createEditedProfile(toEdit, editProfileDescriptor);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        editedProfile.setStartingDay(toEdit.getStartDate());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        model.setProfile(editedProfile);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        logger.info(\"---------------[USER COMMAND][Profile updated]\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return new CommandResult(true, String.format(MESSAGE_SUCCESS, editedProfile));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Creates and returns a {@code Profile} with the details of {@code profileToEdit}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * edited with {@code editProfileDescriptor}."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static Profile createEditedProfile(Profile profileToEdit, EditProfileDescriptor editProfileDescriptor) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assert profileToEdit !\u003d null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Name updatedName \u003d editProfileDescriptor.getName().orElse(profileToEdit.getName());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        ID updatedID \u003d editProfileDescriptor.getId().orElse(profileToEdit.getId());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Height updatedHeight \u003d editProfileDescriptor.getHeight().orElse(profileToEdit.getHeight());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Weight updatedTargetWeight \u003d editProfileDescriptor.getWeight().orElse(profileToEdit.getTargetWeight());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return new Profile(updatedName, updatedID, updatedHeight, updatedTargetWeight);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                || (other instanceof UpdateCommand"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                \u0026\u0026 editProfileDescriptor.equals(((UpdateCommand) other).editProfileDescriptor));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Stores the details to edit the profile with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * corresponding field value of the profile."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static class EditProfileDescriptor {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        private Name name;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        private ID id;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        private Height height;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        private Weight weight;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public EditProfileDescriptor() {}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "         * Copy constructor."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "         */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public EditProfileDescriptor(EditProfileDescriptor toCopy) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            setName(toCopy.name);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            setId(toCopy.id);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            setHeight(toCopy.height);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            setWeight(toCopy.weight);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "         * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "         */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return CollectionUtil.isAnyNonNull(name, id, height, weight);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public void setName(Name name) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public void setId(ID id) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            System.out.println(id);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            this.id \u003d id;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public Optional\u003cID\u003e getId() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return Optional.ofNullable(id);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public void setHeight(Height height) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            this.height \u003d height;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public Optional\u003cHeight\u003e getHeight() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return Optional.ofNullable(height);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public void setWeight(Weight weight) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            this.weight \u003d weight;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public Optional\u003cWeight\u003e getWeight() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return Optional.ofNullable(weight);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public boolean equals(Object other) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            // short circuit if same object"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            // instanceof handles nulls"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            if (!(other instanceof EditProfileDescriptor)) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            // state check"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            EditProfileDescriptor e \u003d (EditProfileDescriptor) other;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return getName().equals(e.getName())"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    \u0026\u0026 getId().equals(e.getId())"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    \u0026\u0026 getHeight().equals(e.getHeight())"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    \u0026\u0026 getWeight().equals(e.getWeight());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hoperawr": 174,
      "wayne987": 18,
      "junhui-phoon": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ViewCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Views a day\u0027s calorie lists."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * It is identified using it\u0027s displayed index from My Fitness Buddy."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            + \": Views the day identified by the index number used in the displayed day list.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer)\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String MESSAGE_VIEW_DAY_SUCCESS \u003d \"Viewing Day: %1$s\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final Index targetIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public ViewCommand(Index targetIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        List\u003cDay\u003e lastShownList \u003d model.getFilteredDayList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_DAY_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day dayToView \u003d lastShownList.get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_VIEW_DAY_SUCCESS, dayToView),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                targetIndex.getOneBased(), true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                || (other instanceof ViewCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 55
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/exceptions/CommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an error which occurs during execution of a {@link Command}."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 2,
      "-": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new AddCommand object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandParser implements Parser\u003cAddCommand\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the AddCommand"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * and returns an AddCommand object for execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_TAG, PREFIX_WEIGHT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_WEIGHT)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Weight weight \u003d ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT).get());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Day day \u003d new Day(date, weight);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return new AddCommand(day);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "ethanso56": 5,
      "-": 40,
      "junhui-phoon": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.ParserUtil.MESSAGE_DUPLICATE_PREFIX;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " *    in the above example.\u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class ArgumentTokenizer {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * respective argument values. Only the given prefixes will be recognized in the arguments string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefixes   Prefixes to tokenize the arguments string with"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return           ArgumentMultimap object that maps prefixes to their arguments"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) throws ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (isDuplicatePrefix(argsString, prefixes)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(MESSAGE_DUPLICATE_PREFIX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return extractArguments(argsString, positions);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private static boolean isDuplicatePrefix(String argsString, Prefix... prefixes) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        ArrayList\u003cInteger\u003e test \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for (Prefix prefix : prefixes) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (!(prefix.getPrefix() \u003d\u003d \"/t\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String copy \u003d argsString;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            test.add(copy.split(prefix.getPrefix()).length);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return test.stream().anyMatch(x -\u003e x \u003e 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Finds all zero-based prefix positions in the given arguments string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefixes   Prefixes to find in the arguments string"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return           List of zero-based prefix positions in the given arguments string"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(prefixes)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@see findAllPrefixPositions}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        while (prefixPosition !\u003d -1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            positions.add(extendedPrefix);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return positions;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the index of the first occurrence of {@code prefix} in"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code argsString} starting from index {@code fromIndex}. An occurrence"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * such occurrence can be found."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * occurrences of \"p/\" with whitespace before it. However, if"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code fromIndex} \u003d 0, this method returns 5."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        return prefixIndex \u003d\u003d -1 ? -1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                : prefixIndex + 1; // +1 as offset for whitespace"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code argsString}."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return                ArgumentMultimap object that maps prefixes to their arguments"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        // Sort by start position"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        // Insert a PrefixPosition to represent the preamble"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        prefixPositions.add(0, preambleMarker);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        // Add a dummy PrefixPosition to represent the end of the string"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        prefixPositions.add(endPositionMarker);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        // Map prefixes to their argument values (if any)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            // Extract and store prefixes and their arguments"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            argMultimap.put(argPrefix, argValue);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        return argMultimap;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     * The end position of the value is determined by {@code nextPrefixPosition}."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String extractArgumentValue(String argsString,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                                        PrefixPosition currentPrefixPosition,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                                        PrefixPosition nextPrefixPosition) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        Prefix prefix \u003d currentPrefixPosition.getPrefix();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        return value.trim();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     * Represents a prefix\u0027s position in an arguments string."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class PrefixPosition {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        private int startPosition;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        private final Prefix prefix;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        PrefixPosition(Prefix prefix, int startPosition) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            this.prefix \u003d prefix;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            this.startPosition \u003d startPosition;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        int getStartPosition() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            return startPosition;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        Prefix getPrefix() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            return prefix;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 147,
      "wayne987": 21
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CalorieCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_CALORIE_COUNT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_CALORIE_TYPE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_FOOD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.CalorieCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Calorie;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieCount;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Exercise;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Food;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Parses input arguments and creates a new CalorieCommand object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class CalorieCommandParser implements Parser\u003cCalorieCommand\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the CalorieCommand"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * and returns a CalorieCommand object for execution."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_CALORIE_TYPE, PREFIX_DATE, PREFIX_TIME,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        PREFIX_EXERCISE, PREFIX_FOOD, PREFIX_CALORIE_COUNT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_CALORIE_TYPE) || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CalorieCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Boolean isOut \u003d ParserUtil.parseType(argMultimap.getValue(PREFIX_CALORIE_TYPE).get());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (arePrefixesPresent(argMultimap, PREFIX_DATE)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            date \u003d argMultimap.getValue(PREFIX_DATE).get();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            date \u003d LocalDate.now().toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_TIME, PREFIX_CALORIE_COUNT)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CalorieCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Time time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieCount calorieCount \u003d ParserUtil.parseCalorieCount(argMultimap.getValue(PREFIX_CALORIE_COUNT).get());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Calorie calorie;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (arePrefixesPresent(argMultimap, PREFIX_FOOD) \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_EXERCISE)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CalorieCommand.MESSAGE_USAGE_2));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if ((!arePrefixesPresent(argMultimap, PREFIX_EXERCISE) \u0026\u0026 !isOut)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                || (!arePrefixesPresent(argMultimap, PREFIX_FOOD) \u0026\u0026 isOut)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CalorieCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!isOut) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Food food \u003d ParserUtil.parseFood(argMultimap.getValue(PREFIX_FOOD).get(), isOut);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            calorie \u003d new Input(time, food, calorieCount);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Exercise exercise \u003d ParserUtil.parseExercise(argMultimap.getValue(PREFIX_EXERCISE).get(), isOut);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            calorie \u003d new Output(time, exercise, calorieCount);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new CalorieCommand(calorie, isOut, date);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 82,
      "jiaax": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ChangeCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_CALORIE_COUNT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_CALORIE_TYPE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EXERCISE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_FOOD;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.ChangeCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Parses input arguments and creates a new ChangeCommand object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class ChangeCommandParser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the CalorieCommand"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * and returns an CalorieCommand object for execution."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public ChangeCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_CALORIE_TYPE, PREFIX_DATE, PREFIX_FOOD,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        PREFIX_EXERCISE, PREFIX_TIME, PREFIX_CALORIE_COUNT, PREFIX_INDEX);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (argMultimap.getPreamble().isEmpty() \u0026 !argMultimap.getValue(PREFIX_DATE).isPresent()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(\"Either input a date or an index to specify which \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    + \"date the calorie to be edited is present but not both\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Index index \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            } catch (ParseException pe) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (index \u003d\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            date \u003d ParserUtil.parseLocalDate(argMultimap.getValue(PREFIX_DATE).get());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        ChangeCommand.ChangeCalorieDescriptor changeCalorieDescriptor \u003d new ChangeCommand.ChangeCalorieDescriptor();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        boolean isOut;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (argMultimap.getValue(PREFIX_CALORIE_TYPE).isPresent()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            isOut \u003d ParserUtil.parseType(argMultimap.getValue(PREFIX_CALORIE_TYPE).get());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            changeCalorieDescriptor.setIsOut(isOut);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(\"Calorie type field cannot be empty\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Index calorieIndex;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (argMultimap.getValue(PREFIX_INDEX).isPresent()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            calorieIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(\"Index field to determine calorie to change cannot be empty\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (argMultimap.getValue(PREFIX_TIME).isPresent()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            changeCalorieDescriptor.setTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (argMultimap.getValue(PREFIX_CALORIE_COUNT).isPresent()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            changeCalorieDescriptor"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    .setCalorieCount(ParserUtil.parseCalorieCount(argMultimap.getValue(PREFIX_CALORIE_COUNT).get()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (argMultimap.getValue(PREFIX_EXERCISE).isPresent()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            changeCalorieDescriptor"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    .setExercise(ParserUtil.parseExercise(argMultimap.getValue(PREFIX_EXERCISE).get(), isOut));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (argMultimap.getValue(PREFIX_FOOD).isPresent()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            changeCalorieDescriptor.setFood(ParserUtil.parseFood(argMultimap.getValue(PREFIX_FOOD).get(), isOut));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!changeCalorieDescriptor.isAnyFieldEdited()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (index !\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new ChangeCommand(index, changeCalorieDescriptor, calorieIndex);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new ChangeCommand(date, changeCalorieDescriptor, calorieIndex);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wayne987": 103
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains Command Line Interface (CLI) syntax definitions common to multiple commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CliSyntax {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Prefix definitions*/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /* Prefixes for day commands */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final Prefix PREFIX_WEIGHT \u003d new Prefix(\"w/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /* Prefixes for calorie commands */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Prefix PREFIX_CALORIE_TYPE \u003d new Prefix(\"tp/\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Prefix PREFIX_CALORIE_COUNT \u003d new Prefix(\"c/\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Prefix PREFIX_EXERCISE \u003d new Prefix(\"e/\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Prefix PREFIX_FOOD \u003d new Prefix(\"f/\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /* Prefixes for profile commands */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Prefix PREFIX_ID \u003d new Prefix(\"id/\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Prefix PREFIX_HEIGHT \u003d new Prefix(\"h/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Prefix PREFIX_BMI \u003d new Prefix(\"bmi/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /* Prefix for stats command */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final Prefix PREFIX_VIEW_STATS \u003d new Prefix(\"v/\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 2,
      "-": 11,
      "wayne987": 6,
      "junhui-phoon": 7,
      "jiaax": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CreateCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.logic.commands.CreateCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Height;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Parses input arguments and creates a new CreateCommand object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class CreateCommandParser implements Parser\u003cCreateCommand\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Parses the given {@code userInput} of arguments in the context of the CreateCommand"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * and returns a CreateCommand object for execution."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public CreateCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_ID, PREFIX_HEIGHT, PREFIX_WEIGHT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Profile profile;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID, PREFIX_HEIGHT, PREFIX_WEIGHT)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        ID id \u003d ParserUtil.parseID(argMultimap.getValue(PREFIX_ID).get());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Height height \u003d ParserUtil.parseHeight(argMultimap.getValue(PREFIX_HEIGHT).get());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Weight targetWeight \u003d ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT).get());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        profile \u003d new Profile(name, id, height, targetWeight);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        Date start \u003d new Date(LocalDate.now().toString()); set the created day to be 1999-06-06 for testing"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        profile.setStartingDay(start);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        profile.setStartingDay(new Date(LocalDate.parse(\"1999-12-31\").toString()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return new CreateCommand(profile);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wayne987": 5,
      "jiaax": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/EditCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new EditCommand object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandParser implements Parser\u003cEditCommand\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the EditCommand"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * and returns an EditCommand object for execution."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_TAG, PREFIX_WEIGHT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        Index index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditCommand.EditDayDescriptor editDayDescriptor \u003d new EditCommand.EditDayDescriptor();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            editDayDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (argMultimap.getValue(PREFIX_WEIGHT).isPresent()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            editDayDescriptor.setWeight(ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT).get()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (!editDayDescriptor.isAnyFieldEdited()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return new EditCommand(index, editDayDescriptor);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 8,
      "-": 40,
      "junhui-phoon": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/FindCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_BMI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.BelowCertainBmiPredicate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new FindCommand object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommandParser implements Parser\u003cFindCommand\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the FindCommand"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * and returns a FindCommand object for execution."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public FindCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedArgs \u003d args.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_BMI);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        if (trimmedArgs.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else if (argMultimap.getValue(PREFIX_BMI).isPresent()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            double bmi \u003d ParserUtil.parseBmi(argMultimap.getValue(PREFIX_BMI).get());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new FindCommand(new BelowCertainBmiPredicate(bmi));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 31,
      "wayne987": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/LoginCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.LoginCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * 解析輸入參數並且製造換人指令模型"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class LoginCommandParser implements Parser\u003cLoginCommand\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Parse userInput into index and returns a LoginCommand"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public LoginCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Index index \u003d ParserUtil.parseIndex(userInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new LoginCommand(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 23
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/MyFitnessBuddyParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.logic.commands.CalorieCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.ChangeCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ClearCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.logic.commands.CreateCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.LoginCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.RemoveCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.logic.commands.StatsCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.logic.commands.UpdateCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.logic.commands.ViewCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class MyFitnessBuddyParser {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            return new EditCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            return new DeleteCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            return new FindCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        case CreateCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return new CreateCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        case CalorieCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new CalorieCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        case StatsCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            return new StatsCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        case RemoveCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new RemoveCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        case ChangeCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new ChangeCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        case UpdateCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return new UpdateCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        case LoginCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new LoginCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        case ViewCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return new ViewCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 4,
      "ethanso56": 4,
      "-": 75,
      "wayne987": 15,
      "jiaax": 6,
      "junhui-phoon": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ParserUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.model.day.Date.isCorrectRegrex;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieCount;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Exercise;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Food;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Height;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods used for parsing strings in the various *Parser classes."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserUtil {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_PREFIX \u003d \"There should only be one prefix for each field\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final double HEAVIEST_PERSON \u003d 635;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final double LIGHTEST_PERSON \u003d 2.13;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * trimmed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index parseIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return Index.fromOneBased(Integer.parseInt(trimmedIndex));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Parses a {@code String date} into a {@code Date}."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @throws ParseException if the given {@code date} is invalid."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static Date parseDate(String date) throws ParseException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        requireNonNull(date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String trimmedDate \u003d date.trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!isCorrectRegrex(trimmedDate)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new ParseException(Date.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            LocalDate.parse(trimmedDate);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String errorMessage \u003d (e.toString().split(\"parsed: \")[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(errorMessage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return new Date(trimmedDate);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Parses a {@code String weight} into a {@code Weight}."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @throws ParseException if the given {@code weight} is invalid."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static Weight parseWeight(String weight) throws ParseException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        requireNonNull(weight);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String trimmedWeight \u003d weight.trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (!Weight.isValidWeight(trimmedWeight)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            throw new ParseException(Weight.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double w \u003d Double.parseDouble(weight);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (w \u003c LIGHTEST_PERSON) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(Weight.MESSAGE_TOO_LIGHT);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (w \u003e HEAVIEST_PERSON) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(Weight.MESSAGE_TOO_HEAVY);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return new Weight(trimmedWeight);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Parses a {@code String time} into @code Time."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static Time parseTime(String time) throws ParseException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(time);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String trimmedTime \u003d time.trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!Time.isValidTime(trimmedTime)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(Time.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Time(trimmedTime);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Parses a {@code String exercise} into @code Exercise."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static Exercise parseExercise(String exercise, Boolean isOut) throws ParseException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(exercise);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String trimmedExercise \u003d exercise.trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!isOut) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(Exercise.MESSAGE_CONSTRAINTS_WRONG_TYPE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!Exercise.isValidExercise(trimmedExercise)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(Exercise.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Exercise(trimmedExercise);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Parses a {@code String calorieCount} into @code CalorieCount."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static CalorieCount parseCalorieCount(String calorieCount) throws ParseException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(calorieCount);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String trimmedCalorieCount \u003d calorieCount.trim();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!CalorieCount.isValidCalorieCount(trimmedCalorieCount)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(CalorieCount.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new CalorieCount(trimmedCalorieCount);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Parses a {@code String food} into @code Food."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static Food parseFood(String food, Boolean isOut) throws ParseException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(food);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String trimmedFood \u003d food.trim();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (isOut) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(Food.MESSAGE_CONSTRAINTS_WRONG_TYPE);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (!Food.isValidFood(trimmedFood)) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            throw new ParseException(Food.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return new Food(trimmedFood);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Check if {@code String type} is of correct type."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static boolean parseType(String type) throws ParseException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(type);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String trimmedType \u003d type.trim().toLowerCase();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        switch (trimmedType) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        case \"out\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        case \"in\":"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(\"type can only be either in/out\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Parse {@code String date} into LocalDate"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static LocalDate parseLocalDate(String date) throws ParseException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(date);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String toCheck \u003d date.trim();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!isCorrectRegrex(toCheck)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(Date.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate result;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            result \u003d LocalDate.parse(toCheck);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            String errorMessage \u003d (e.toString().split(\"parsed: \")[1]);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(errorMessage);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Parses a {@code String name} into @code Name."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static Name parseName(String name) throws ParseException {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String trimmedName \u003d name.trim();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (!Name.isValidName(trimmedName)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            throw new ParseException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return new Name(trimmedName);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Parses a {@code String id} into @code ID."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static ID parseID(String id) throws ParseException {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(id);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String trimmedID \u003d id.trim();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (!ID.isValidId(trimmedID)) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            throw new ParseException(ID.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return new ID(trimmedID);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Parses a {@code String height} into @code Height."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static Height parseHeight(String height) throws ParseException {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(height);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String trimmedHeight \u003d height.trim();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (!Height.isValidHeight(trimmedHeight)) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            throw new ParseException(Height.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return new Height(trimmedHeight);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Parses a {@code String BMI} into @code BMI."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static double parseBmi(String bmi) throws ParseException {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(bmi);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String trimmedHeight \u003d bmi.trim();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return Double.parseDouble(bmi);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(\"Please input a valid BMI\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 7,
      "-": 67,
      "wayne987": 109,
      "jiaax": 46,
      "junhui-phoon": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/RemoveCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_CALORIE_TYPE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.RemoveCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Parses input arguments and creates a new RemoveCommand object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class RemoveCommandParser implements Parser\u003cRemoveCommand\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the RemoveCommand"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * and returns a RemoveCommand object for execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public RemoveCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_CALORIE_TYPE, PREFIX_DATE, PREFIX_INDEX);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_CALORIE_TYPE, PREFIX_INDEX)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (argMultimap.getPreamble().isEmpty() \u0026 !argMultimap.getValue(PREFIX_DATE).isPresent()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(\"Either input a date or an index to specify which \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    + \"date the calorie to be edited is present but not both\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Index dayIndex \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                dayIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            } catch (ParseException pe) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (dayIndex \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            date \u003d ParserUtil.parseLocalDate(argMultimap.getValue(PREFIX_DATE).get());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Index index;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Boolean isOut \u003d ParserUtil.parseType(argMultimap.getValue(PREFIX_CALORIE_TYPE).get());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (dayIndex \u003d\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new RemoveCommand(index, isOut, date);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return new RemoveCommand(index, isOut, dayIndex);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wayne987": 83
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/StatsCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_VIEW_STATS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.logic.commands.StatsCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " * Parses input arguments and creates a new StatsCommand object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class StatsCommandParser implements Parser\u003cStatsCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the StatsCommand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * and returns a StatsCommand object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public StatsCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_VIEW_STATS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_VIEW_STATS) || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatsCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        boolean showCalorie;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        boolean showWeight;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        boolean showCommander;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (argMultimap.getValue(PREFIX_VIEW_STATS).get().equals(\"calorie\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showCalorie \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showWeight \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showCommander \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        } else if (argMultimap.getValue(PREFIX_VIEW_STATS).get().equals(\"weight\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showCalorie \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showWeight \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showCommander \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        } else if (argMultimap.getValue(PREFIX_VIEW_STATS).get().equals(\"all\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showCalorie \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showWeight \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showCommander \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        } else if (argMultimap.getValue(PREFIX_VIEW_STATS).get().equals(\"commander\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showCalorie \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showWeight \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            showCommander \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatsCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return new StatsCommand(showCalorie, showWeight, showCommander);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 63
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/UpdateCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.logic.commands.UpdateCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " * Parses input arguments and creates a new UpdateCommand object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class UpdateCommandParser implements Parser\u003cUpdateCommand\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Parses the given {@code userInput} of arguments in the context of the UpdateCommand"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * and returns a UpdateCommand object for execution."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public UpdateCommand parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        requireNonNull(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_ID, PREFIX_HEIGHT, PREFIX_WEIGHT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        UpdateCommand.EditProfileDescriptor editProfileDescriptor \u003d new UpdateCommand.EditProfileDescriptor();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            editProfileDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (argMultimap.getValue(PREFIX_ID).isPresent()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            System.out.println(\"---\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            editProfileDescriptor.setId(ParserUtil.parseID(argMultimap.getValue(PREFIX_ID).get()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (argMultimap.getValue(PREFIX_HEIGHT).isPresent()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            editProfileDescriptor.setHeight(ParserUtil.parseHeight(argMultimap.getValue(PREFIX_HEIGHT).get()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (argMultimap.getValue(PREFIX_WEIGHT).isPresent()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            editProfileDescriptor.setWeight(ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT).get()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!editProfileDescriptor.isAnyFieldEdited()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            System.out.println(editProfileDescriptor.getId());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new ParseException(UpdateCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return new UpdateCommand(editProfileDescriptor);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hoperawr": 48,
      "wayne987": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ViewCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.logic.commands.ViewCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Parses input arguments and creates a new ViewCommand object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class ViewCommandParser implements Parser\u003cViewCommand\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the ViewCommand"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * and returns a ViewCommand object for execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public ViewCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return new ViewCommand(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new ParseException("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Model.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /** {@code Predicate} that always evaluate to true */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    Predicate\u003cDay\u003e PREDICATE_SHOW_ALL_DAYS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /** {@code Predicate} that always evaluate to true */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns the user prefs\u0027 myFitnessBuddy file path."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    Path getMyFitnessBuddyFilePath();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Sets the user prefs\u0027 myFitnessBuddy file path."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void setMyFitnessBuddyFilePath(Path myFitnessBuddyFilePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Replaces myFitnessBuddy data records with the data in {@code myFitnessBuddy}."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void setMyFitnessBuddy(ReadOnlyMyFitnessBuddy myFitnessBuddy);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /** Returns MyFitnessBuddy */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    ReadOnlyMyFitnessBuddy getMyFitnessBuddy();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if a day with the same values as {@code day} exists in the days."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    boolean hasDay(Day day);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if a day with the same date as {@code date} exists in the days."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    boolean hasDay(LocalDate date);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns the day with given {@code date}."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    Day getDay(LocalDate date);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Deletes the given day."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * The day must exist in the list of days in my fitness buddy."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void deleteDay(Day target);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Adds the given day."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * {@code day} must not already exist in the list of days in my fitness buddy."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void addDay(Day day);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Replaces the given day {@code target} with {@code editedDay}."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * {@code target} must exist in the days."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * The day identity of {@code editedPerson} must not be the same as another existing day in the list of days."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void setDay(Day target, Day editedDay);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Returns an unmodifiable view of the filtered day list */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    ObservableList\u003cDay\u003e getFilteredDayList();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /** Returns an unmodifiable view of the filtered day list */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cPerson\u003e getFilteredPersonList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Updates the filter of the filtered day list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void updateFilteredDayList(Predicate\u003cDay\u003e predicate);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the filter of the filtered person list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Updates the profile of a person in MyFitnessBuddy."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void setProfile(Profile profile);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Checks if the current data {@code MyFitnessBuddy} has a profile."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    boolean isDefaultProfile();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Sets the currentPerson pointer to toSet"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void setCurrentPerson(Person toSet);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Checks if a person is in the list"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    boolean hasPerson(Person toCheck);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Update day"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void updateDay();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Add new person"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void addPerson(Person toAdd);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Add new person"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void resetPersons();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "-": 78,
      "wayne987": 43,
      "jiaax": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Represents the in-memory model of My Fitness Buddy data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final MyFitnessBuddy myFitnessBuddy;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final FilteredList\u003cDay\u003e filteredDays;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FilteredList\u003cPerson\u003e filteredPersons;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Initializes a ModelManager with the given myFitnessBuddy and userPrefs."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public ModelManager(ReadOnlyMyFitnessBuddy readOnlyMyFitnessBuddy, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireAllNonNull(readOnlyMyFitnessBuddy, userPrefs);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        logger.fine(\"Initializing with MyFitnessBuddy: \" + readOnlyMyFitnessBuddy + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.myFitnessBuddy \u003d new MyFitnessBuddy(readOnlyMyFitnessBuddy);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        filteredDays \u003d new FilteredList\u003c\u003e(this.myFitnessBuddy.getDayList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        filteredPersons \u003d new FilteredList\u003c\u003e(this.myFitnessBuddy.getPersonList());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this(new MyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Path getMyFitnessBuddyFilePath() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return userPrefs.getMyFitnessBuddyFilePath();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Sets the user prefs\u0027 My Fitness Buddy file path."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param myFitnessBuddyFilePath"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setMyFitnessBuddyFilePath(Path myFitnessBuddyFilePath) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(myFitnessBuddyFilePath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        userPrefs.setMyFitnessBuddyFilePath(myFitnessBuddyFilePath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d My Fitness Buddy \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setMyFitnessBuddy(ReadOnlyMyFitnessBuddy myFitnessBuddy) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.myFitnessBuddy.resetData(myFitnessBuddy);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns my fitness buddy."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public ReadOnlyMyFitnessBuddy getMyFitnessBuddy() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return myFitnessBuddy;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean hasDay(Day day) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(day);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return myFitnessBuddy.hasDay(day);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean hasDay(LocalDate date) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return myFitnessBuddy.hasDay(date);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Day getDay(LocalDate date) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return myFitnessBuddy.getDay(date);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void deleteDay(Day target) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        myFitnessBuddy.removeDay(target);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void addDay(Day day) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        myFitnessBuddy.addDay(day);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        updateFilteredDayList(PREDICATE_SHOW_ALL_DAYS);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void addPerson(Person toAdd) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        myFitnessBuddy.addPerson(toAdd);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setCurrentPerson(Person toSet) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        myFitnessBuddy.setCurrentPerson(toSet);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setDay(Day target, Day editedDay) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireAllNonNull(target, editedDay);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        myFitnessBuddy.setDay(target, editedDay);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Day List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Day} backed by the internal list of"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * {@code versionedMyFitnessBuddy}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public ObservableList\u003cDay\u003e getFilteredDayList() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return filteredDays;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void updateFilteredDayList(Predicate\u003cDay\u003e predicate) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        filteredDays.setPredicate(predicate);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Day} backed by the internal list of"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * {@code versionedMyFitnessBuddy}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        return filteredPersons;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredPersons.setPredicate(predicate);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setProfile(Profile profile) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        myFitnessBuddy.setProfile(profile);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void resetPersons() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        myFitnessBuddy.resetPersons();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean isDefaultProfile() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return myFitnessBuddy.isDefaultProfile();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean hasPerson(Person toCheck) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return myFitnessBuddy.hasPerson(toCheck);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void updateDay() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        myFitnessBuddy.updateDay();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof ModelManager)) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager other \u003d (ModelManager) obj;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return myFitnessBuddy.equals(other.myFitnessBuddy)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 userPrefs.equals(other.userPrefs)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u0026\u0026 filteredDays.equals(other.filteredDays);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "-": 136,
      "wayne987": 41,
      "jiaax": 47
    }
  },
  {
    "path": "src/main/java/seedu/address/model/MyFitnessBuddy.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.UniquePersonList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Wraps all data at the My Fitness Buddy level"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Duplicates are not allowed (by .isSamePerson comparison)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class MyFitnessBuddy implements ReadOnlyMyFitnessBuddy {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private UniquePersonList persons;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //private Profile profile;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //serves as a container for all the ui to obtain information from"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Person person;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //serves as a pointer to which profile is being selected"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Person currentPerson;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        persons \u003d new UniquePersonList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        person \u003d new Person();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        currentPerson \u003d new Person();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public MyFitnessBuddy() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Creates an MyFitnessBuddy using the data in the {@code toBeCopied}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public MyFitnessBuddy(ReadOnlyMyFitnessBuddy toBeCopied) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Replaces the contents of the day list with {@code days}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * {@code days} must not contain duplicate days."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setDays(List\u003cDay\u003e days) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        getPerson().setDays(days);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setPerson(Person p) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.person \u003d p;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void setPersons(List\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.persons.setPersons(persons);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Resets the existing data of this {@code MyFitnessBuddy} with {@code newData}."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void resetData(ReadOnlyMyFitnessBuddy newData) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        setDays(newData.getDayList());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        setPersons(newData.getPersonList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        setCurrentPerson(new Person());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Resets the existing data of this {@code MyFitnessBuddy} with {@code newData}."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void resetPersons() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        persons \u003d new UniquePersonList();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Sets the profile information of current data to {@code profile}."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setProfile(Profile profile) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.currentPerson.setProfile(profile);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.person.setProfile(profile);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Checks if the current data {@code Person} has a profile."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean isDefaultProfile() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return this.currentPerson.isDefaultProfile();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //// day-level operations"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if a day with the same identity as {@code day} exists in My Fitness Buddy."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean hasDay(Day day) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(day);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return getPerson().hasDay(day);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if a day in My Fitness Buddy with the same date as the current date."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean hasDay(LocalDate date) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(date);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return getPerson().hasDay(date);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * get a day in My Fitness Buddy with a specific date"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Day getDay(LocalDate date) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return getPerson().getDay(date);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Adds a day to My Fitness Buddy."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * The day must not already exist in My Fitness Buddy."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void addDay(Day day) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        currentPerson.addDay(day);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        day.setStartingWeight(person.getProfile().getTargetWeight());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        day.setHeight(person.getProfile().getHeight());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Replaces the given day {@code target} in the list with {@code editedPerson}."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * {@code target} must exist in My Fitness Buddy."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * The day identity of {@code editedPerson} must not be the same as another existing day in My Fitness Buddy."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setDay(Day target, Day editedDay) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(editedDay);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        getPerson().setDay(target, editedDay);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Removes {@code key} from this {@code MyFitnessBuddy}."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * {@code key} must exist in My Fitness Buddy."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void removeDay(Day key) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.currentPerson.getDays().remove(key);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        updateDay();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public ObservableList\u003cDay\u003e getDayList() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return getPerson().getDayList();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Profile getProfile() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return getPerson().getProfile();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Person getPerson() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return person;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setCurrentPerson(Person toSet) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.currentPerson \u003d toSet;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.person.setProfile(currentPerson.getProfile());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.person.setDays(currentPerson.getDayList());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Adds a new person"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param toAdd is the person to be added"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void addPerson(Person toAdd) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.currentPerson \u003d toAdd;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.person.setProfile(currentPerson.getProfile());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.person.setDays(currentPerson.getDayList());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.persons.add(currentPerson);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean hasPerson(Person toCheck) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return this.persons.contains(toCheck);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void updateDay() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.person.setDays(this.currentPerson.getDayList());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public ObservableList\u003cPerson\u003e getPersonList() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return this.persons.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public ObservableList\u003cPerson\u003e getPersons() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return persons.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                || (other instanceof MyFitnessBuddy // instanceof handles nulls"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                \u0026\u0026 getPersonList().equals(((MyFitnessBuddy) other).getPersonList()));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return getPerson().hashCode();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return getPerson().getDayList().size() + \" persons\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // TODO: refine later"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 3,
      "wayne987": 64,
      "jiaax": 154,
      "junhui-phoon": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ReadOnlyMyFitnessBuddy.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Unmodifiable view of My Fitness Buddy"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public interface ReadOnlyMyFitnessBuddy {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns an unmodifiable view of the days list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * This list will not contain any duplicate days."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    ObservableList\u003cDay\u003e getDayList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns an unmodifiable view of the persons list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * This list will not contain any duplicate persons."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    ObservableList\u003cPerson\u003e getPersonList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns the profile of a person."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    Profile getProfile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    Person getPerson();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    ObservableList\u003cPerson\u003e getPersons();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 2,
      "-": 11,
      "wayne987": 9,
      "jiaax": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ReadOnlyUserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Unmodifiable view of user prefs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public interface ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    Path getMyFitnessBuddyFilePath();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "jiaax": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/UserPrefs.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents User\u0027s preferences."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefs implements ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private GuiSettings guiSettings \u003d new GuiSettings();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private Path myFitnessBuddyFilePath \u003d Paths.get(\"data\" , \"myfitnessbuddy.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with default values."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public UserPrefs() {}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public UserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        resetData(userPrefs);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyUserPrefs newUserPrefs) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(newUserPrefs);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        setGuiSettings(newUserPrefs.getGuiSettings());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        setMyFitnessBuddyFilePath(newUserPrefs.getMyFitnessBuddyFilePath());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        this.guiSettings \u003d guiSettings;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Path getMyFitnessBuddyFilePath() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return myFitnessBuddyFilePath;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setMyFitnessBuddyFilePath(Path myFitnessBuddyFilePath) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(myFitnessBuddyFilePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.myFitnessBuddyFilePath \u003d myFitnessBuddyFilePath;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof UserPrefs)) { //this handles null as well."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs o \u003d (UserPrefs) other;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings.equals(o.guiSettings)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                \u0026\u0026 myFitnessBuddyFilePath.equals(o.myFitnessBuddyFilePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return Objects.hash(guiSettings, myFitnessBuddyFilePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Gui Settings : \" + guiSettings);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        sb.append(\"\\nLocal data file location : \" + myFitnessBuddyFilePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "-": 77,
      "jiaax": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/model/calculator/Bmi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calculator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.Height;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * class that contains methods to calculate BMI"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Bmi {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param height"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param weight"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return bmi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static double calculateBmi(Height height, Weight weight) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double h \u003d Integer.parseInt(height.value);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double w \u003d Integer.parseInt(weight.value);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double bmi \u003d w / ((h / 100) * (h / 100));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return bmi;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 23
    }
  },
  {
    "path": "src/main/java/seedu/address/model/calculator/CalorieBudget.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calculator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.Height;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * class that contains methods to Calorie related calculation"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class CalorieBudget {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param height of the person"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param weight of the person"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param age of the person"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return Basal Metabolic Rate in KCal"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static int calculateBasalMetabolic(Height height, Weight weight, int age) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double h \u003d Integer.parseInt(height.value);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double w \u003d Integer.parseInt(weight.value);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double bmr \u003d 66.47 + (13.75 * w) + (5.003 * h) - (6.755 * age);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return (int) bmr;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param totalCalorieIn"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param totalCalorieOut"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param basalMetabolic"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @return calorie surplus that user can afford to consume"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static int calculateCalorieSurplus(int totalCalorieIn, int totalCalorieOut, int basalMetabolic) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return totalCalorieIn + basalMetabolic - totalCalorieOut;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/model/calorie/Calorie.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * abstract class that input and output extends from"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public abstract class Calorie {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    // Identity fields"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected CalorieCount calorieCount;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    protected Time time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Calorie(CalorieCount calorieCount, Time time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorieCount \u003d calorieCount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieCount getCalorieCount() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return calorieCount;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Time getTime() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return Objects.hash(time);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!(other instanceof Calorie)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Calorie otherCalorie \u003d (Calorie) other;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return otherCalorie.getTime().time.equals(getTime().time);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "wayne987": 41,
      "jiaax": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/model/calorie/CalorieCount.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Represents a Input\u0027s/Output\u0027s calorie count in the record"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class CalorieCount {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"Calorie Count should only be positive integer, and it should not be blank\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[1-9][\\\\p{Digit}]*\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public final String calorieCount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Constructs a {@code CalorieCount}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param calorieCount A valid calorieCount."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieCount(String calorieCount) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(calorieCount);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        checkArgument(isValidCalorieCount(calorieCount), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorieCount \u003d calorieCount;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static boolean isValidCalorieCount(String test) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return calorieCount;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns true if both Calories have the same calorie string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * This defines a stronger notion of equality between two calories."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!(other instanceof CalorieCount)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        CalorieCount otherCalorieCount \u003d (CalorieCount) other;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return otherCalorieCount.calorieCount.equals(this.calorieCount);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hoperawr": 17,
      "wayne987": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/model/calorie/CalorieManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.ChangeCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Stores and handles operation related to calories"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class CalorieManager {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private ObservableList\u003cInput\u003e calorieInputList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private ObservableList\u003cOutput\u003e calorieOutputList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private int totalCalorieIn;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private int totalCalorieOut;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(CalorieManager.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Constructor for Manager that manage calorie input/output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieManager() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.calorieOutputList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.calorieInputList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Constructor for Manager that manage calorie input/output"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public CalorieManager(ObservableList\u003cInput\u003e inputList, ObservableList\u003cOutput\u003e outputList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorieInputList \u003d inputList;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorieOutputList \u003d outputList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        updateTotalCalorieCounts(inputList, outputList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * returns the total input calorie"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public int getTotalInputCalorie() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return totalCalorieIn;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * returns the total input calorie"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public int getTotalOutputCalorie() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return totalCalorieOut;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * A method to update all the counters"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param inputList list of inputs"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param outputList list of outputs"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void updateTotalCalorieCounts(List\u003cInput\u003e inputList, List\u003cOutput\u003e outputList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for (Input x: inputList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            totalCalorieIn +\u003d Integer.parseInt(x.getCalorieCount().calorieCount);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for (Output y: outputList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            totalCalorieOut +\u003d Integer.parseInt(y.getCalorieCount().calorieCount);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * A method to update TotalCalorieOut"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param calorieOutput amount of calorie output to be updated"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void addTotalCalorieOut(CalorieCount calorieOutput) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int previousTotalCalorieOut \u003d totalCalorieOut;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        totalCalorieOut +\u003d Integer.parseInt(calorieOutput.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        logger.info(\"----------update total calorie output----------\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        logger.info(previousTotalCalorieOut + \"+\" + calorieOutput.toString() + \"\u003d\" + totalCalorieOut);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * A method to update TotalCalorieIn"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param calorieInput amount of calorie Input to be updated"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void addTotalCalorieInput(CalorieCount calorieInput) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int previousTotalCalorieIn \u003d totalCalorieIn;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        totalCalorieIn +\u003d Integer.parseInt(calorieInput.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        logger.info(\"----------update total calorie Input----------\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        logger.info(previousTotalCalorieIn + \"+\" + calorieInput.toString() + \"\u003d\" + totalCalorieIn);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * delete calorie output from the calorieOutputList and update the total calorie output."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void deleteTotalCalorieOutput(int index) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieCount calorieCount \u003d getCalorieOutputList().get(index).getCalorieCount();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        totalCalorieOut -\u003d Integer.parseInt(calorieCount.toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * delete calorie input from the calorieInputList and update the total calorie input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void deleteTotalCalorieInput(int index) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieCount calorieCount \u003d getCalorieInputList().get(index).getCalorieCount();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        totalCalorieIn -\u003d Integer.parseInt(calorieCount.toString());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public ObservableList\u003cOutput\u003e getCalorieOutputList() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return calorieOutputList;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public ObservableList\u003cInput\u003e getCalorieInputList() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return calorieInputList;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * add a calorie input into an already sorted calorieInputList and update the total calorie input"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void addCalorieInput(Input calorieInput) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        boolean isAdded \u003d false;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        for (int index \u003d calorieInputList.size() - 1; index \u003e\u003d 0; index -\u003d 1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            if (calorieInput.happenAfter(calorieInputList.get(index))) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                calorieInputList.add(index + 1, calorieInput);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                isAdded \u003d true;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (isAdded \u003d\u003d false) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            calorieInputList.add(0, calorieInput);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        addTotalCalorieInput(calorieInput.getCalorieCount());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * add a calorie output into an already sorted calorieOutputList and update the total calorie output"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void addCalorieOutput(Output calorieOutput) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        boolean isAdded \u003d false;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        for (int index \u003d calorieOutputList.size() - 1; index \u003e\u003d 0; index -\u003d 1) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            if (calorieOutput.happenAfter(calorieOutputList.get(index))) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                calorieOutputList.add(index + 1, calorieOutput);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                isAdded \u003d true;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (isAdded \u003d\u003d false) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            calorieOutputList.add(0, calorieOutput);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        addTotalCalorieOut(calorieOutput.getCalorieCount());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * removes a calorie from the List and update the total calorie input"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void removeCalorie(Boolean isOut, Index targetIndex) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int index \u003d targetIndex.getZeroBased();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!isOut) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            deleteTotalCalorieInput(index);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            calorieInputList.remove(index);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            deleteTotalCalorieOutput(index);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            calorieOutputList.remove(index);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Get size of list depending on type"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param isOut is the calorie type Output?"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public int getListSize(Boolean isOut) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!isOut) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return calorieInputList.size();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return calorieOutputList.size();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Get a calorie of a certain type and index"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param isOut is the calorie type Output?"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param index of the calorie to be retrieved"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Calorie getCalorie(Boolean isOut, Index index) throws CommandException {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!isOut) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (calorieInputList.size() \u003c\u003d index.getZeroBased()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(\"please give an valid index\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return calorieInputList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (calorieOutputList.size() \u003c\u003d index.getZeroBased()) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(\"please give an valid index\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return calorieOutputList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieManager setCalorie(Index index, Boolean isOut, Calorie editedCalorie) throws CommandException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireAllNonNull(index, isOut, editedCalorie);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (isOut) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Output temp \u003d calorieOutputList.remove(index.getZeroBased());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (contains(editedCalorie, true)) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                calorieOutputList.add(temp);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(ChangeCommand.DUPLICATE_TIME);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            addCalorieOutput((Output) editedCalorie);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Input temp \u003d calorieInputList.remove(index.getZeroBased());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (contains(editedCalorie, false)) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                calorieInputList.add(temp);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                throw new CommandException(ChangeCommand.DUPLICATE_TIME);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            addCalorieInput((Input) editedCalorie);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new CalorieManager(getCalorieInputList(), getCalorieOutputList());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Check if there is a calorie in the list with the same time as param"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param toCheck if the list contains this calorie entry"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param isOut determines which list to check"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean contains(Calorie toCheck, Boolean isOut) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (isOut) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return calorieOutputList.stream().anyMatch(toCheck::equals);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return calorieInputList.stream().anyMatch(toCheck::equals);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns true if both CalorieManager have the same lists."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * This defines a stronger notion of equality between two calorie managers."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!(other instanceof CalorieManager)) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        CalorieManager otherCalorieManager \u003d (CalorieManager) other;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return otherCalorieManager.getCalorieInputList().equals(getCalorieInputList())"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                \u0026\u0026 otherCalorieManager.getCalorieOutputList().equals(getCalorieOutputList());"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hoperawr": 43,
      "ethanso56": 9,
      "wayne987": 201
    }
  },
  {
    "path": "src/main/java/seedu/address/model/calorie/Exercise.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Represents a Output exercise"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Exercise {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"Exercise can take any values, and it should not be blank\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS_WRONG_TYPE \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"Exercise can only be used with Calorie Type: Output\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public final String exercise;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Constructs a {@code Exercise}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param exercise A valid exercise."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Exercise(String exercise) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(exercise);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        checkArgument(isValidExercise(exercise), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.exercise \u003d exercise;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * check if test is a valid exercise"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static boolean isValidExercise(String test) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assert test !\u003d null : \"test must not be empty\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return exercise;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns true if both Exercises have the same exercise string."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * This defines a stronger notion of equality between two Exercises."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!(other instanceof Exercise)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Exercise otherExercise \u003d (Exercise) other;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return otherExercise.exercise.equals(this.exercise);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 18,
      "wayne987": 45
    }
  },
  {
    "path": "src/main/java/seedu/address/model/calorie/Food.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Represents a Input food"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Food {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            \"Food can take any values, and it should not be blank\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS_WRONG_TYPE \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"Food can only be used with Calorie Type: Input\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public final String food;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Constructs a {@code Food}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param food A valid food."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Food(String food) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(food);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        checkArgument(isValidFood(food), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.food \u003d food;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Checks if input is valid"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static boolean isValidFood(String test) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assert test !\u003d null : \"test must be not be empty\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return food;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns true if both Foods have the same food string."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * This defines a stronger notion of equality between two foods."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!(other instanceof Food)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Food otherFood \u003d (Food) other;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return otherFood.food.equals(this.food);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 18,
      "wayne987": 13,
      "jiaax": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/model/calorie/Input.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Class to store the relevant information for any calorie input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Input extends Calorie {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Food food;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Input(Time time, Food food, CalorieCount calorieCount) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(calorieCount, time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireAllNonNull(food, time, calorieCount);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.food \u003d food;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Food getFood() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return food;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        builder.append(\" Food: \")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(getFood())"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(\" Time: \")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(getTime())"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(\" Calorie Intake: \")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(getCalorieCount());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns true if the current input happens after the input input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public boolean happenAfter(Input input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return this.getTime().isAfter(input.getTime());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns true if a otherInput has the same attributes as this Input"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param otherInput that is being checked with"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean isSameInput(Input otherInput) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return otherInput.getFood().food.equals(this.food.toString())"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "               \u0026\u0026 otherInput.getTime().time.equals(this.time.toString())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "               \u0026\u0026 otherInput.getCalorieCount().calorieCount.equals(this.calorieCount.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 7,
      "wayne987": 14,
      "jiaax": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/model/calorie/Output.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Class to store the relevant information for any calorie output"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Output extends Calorie {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Exercise exercise;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Output(Time time, Exercise exercise, CalorieCount calorieCount) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(calorieCount, time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireAllNonNull(exercise, time, calorieCount);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.exercise \u003d exercise;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Exercise getExercise() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return exercise;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        builder.append(\" Exercise: \")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                .append(getExercise())"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(\" Time: \")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(getTime())"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                .append(\" Calorie Burnt: \")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                .append(getCalorieCount());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns true if the current output happens after the input output"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public boolean happenAfter(Output output) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return this.getTime().isAfter(output.getTime());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns true if a otherOutput has the same attributes as this Output"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param otherOutput that is being checked with"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean isSameOutput(Output otherOutput) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return otherOutput.getExercise().exercise.equals(this.exercise.toString())"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u0026\u0026 otherOutput.getTime().time.equals(this.time.toString())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u0026\u0026 otherOutput.getCalorieCount().calorieCount.equals(this.calorieCount.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 6,
      "wayne987": 43,
      "jiaax": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/model/calorie/Time.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Represents the time of the activity for a Input/Output"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"Time should be in the format of HHMM and it should not be blank\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"^[0-9]{4}$\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public final String time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Constructs a {@code Time}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param time A valid Time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Time(String time) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(time);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns if a given string is a valid Time."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static boolean isValidTime(String test) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (test.matches(VALIDATION_REGEX)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            int hour \u003d Integer.parseInt(test.substring(0, 2));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            int min \u003d Integer.parseInt(test.substring(2, 4));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return hour \u003c\u003d 23 \u0026\u0026 min \u003c\u003d 59;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns true if the current time is after the input time"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public boolean isAfter(Time inputTime) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return Integer.parseInt(this.time) \u003e\u003d Integer.parseInt(inputTime.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns true if both Times have the same time string."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * This defines a stronger notion of equality between two times."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!(other instanceof Time)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Time otherTime \u003d (Time) other;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return otherTime.time.equals(this.time);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 25,
      "wayne987": 45
    }
  },
  {
    "path": "src/main/java/seedu/address/model/day/Date.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.model.day;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents a Person\u0027s weight in the record."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"Date should be in the form of YYYY-MM-DD.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Constructs a {@code Date}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param date A valid date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Date(String date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        requireNonNull(date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        checkArgument(isCorrectRegrex(date), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        checkArgument(isValidDate(date), getErrorMessage(date));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.value \u003d date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * checks if test matches validation regrex"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param test to be checked"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static boolean isCorrectRegrex(String test) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Returns true if a given string is a valid date number."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static boolean isValidDate(String test) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            LocalDate.parse(test);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (java.time.format.DateTimeParseException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns error message"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private String getErrorMessage(String date) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            LocalDate.parse(date);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            result \u003d e.toString().split(\"parse: \")[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns true if a date is after the other date"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public boolean dateAfter(Date otherDate) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return this.get().isAfter(otherDate.get());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns the LocalDate stored in the Date class"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public LocalDate get() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                || (other instanceof Date) // instanceof handles nulls"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u0026\u0026 date.equals(((Date) other).get()); // state check"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return date.hashCode();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 7,
      "ethanso56": 46,
      "wayne987": 51
    }
  },
  {
    "path": "src/main/java/seedu/address/model/day/Day.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.day;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calculator.Bmi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calculator.CalorieBudget;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.Height;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Represents a Day in the Person in MyFitnessBuddy."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class Day {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    // Identity fields"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final Date date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final Weight weight;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final CalorieManager calorieManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private int age \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Height height \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Weight startingWeight \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private int surplus \u003d getBalance();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Class constructor"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public Day(Date date, Weight weight) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        requireAllNonNull(date, weight);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Class constructor"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public Day(Date date, Weight weight, CalorieManager calorieManager) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        requireAllNonNull(date, weight, calorieManager);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorieManager \u003d calorieManager;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Weight getWeight() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieManager getCalorieManager() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return calorieManager;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if both days are of the same date and not the weight and tag field."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean isSameDay(Day otherDay) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (otherDay \u003d\u003d this) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return otherDay !\u003d null"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                \u0026\u0026 otherDay.getDate().equals(getDate());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns true if the date of this day is after otherDay"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public boolean isAfter(Day otherDay) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return this.getDate().dateAfter(otherDay.getDate());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setAge(int age) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setStartingWeight(Weight weight) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.startingWeight \u003d weight;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setHeight(Height height) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if both days have the same date and data fields."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * This defines a stronger notion of equality between two days."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!(other instanceof Day)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Day otherDay \u003d (Day) other;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return otherDay.getDate().equals(getDate());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return Objects.hash(date, weight);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        builder.append(getDate())"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                .append(\" Weight: \")"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                .append(getWeight());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public int getBalance() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (height \u003d\u003d null || weight \u003d\u003d null) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            int bmr \u003d CalorieBudget.calculateBasalMetabolic(height, weight, age);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            int calorieIn \u003d calorieManager.getTotalInputCalorie();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            int calorieOut \u003d getCalorieManager().getTotalOutputCalorie();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return CalorieBudget.calculateCalorieSurplus(bmr, calorieIn, calorieOut);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean isLosing() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return getBalance() \u003e\u003d 0;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public double getProgress() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double currentBmi \u003d Bmi.calculateBmi(height, weight);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double startBmi \u003d Bmi.calculateBmi(height, startingWeight);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double endBmi \u003d 22.5;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double totalBmiToChange \u003d startBmi - endBmi;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double differenceWithEnd \u003d currentBmi - endBmi;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double percentageChange \u003d 1 - (differenceWithEnd / totalBmiToChange);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (percentageChange \u003e 1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            percentageChange \u003d 1;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (percentageChange \u003c 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            percentageChange \u003d 0;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return percentageChange;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 19,
      "ethanso56": 6,
      "wayne987": 81,
      "-": 46,
      "jiaax": 3,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/day/UniqueDayList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.day;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.exceptions.DayNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.exceptions.DuplicateDayException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * A list of days that enforces uniqueness between its elements and does not allow nulls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * A day is considered unique by comparing using {@code Day#isSameDay(Day)}. As such, adding and updating of"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * days uses Day#isSameDay(Day) for equality so as to ensure that the day being added or updated is"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * unique in terms of identity in the UniqueDayList. However, the removal of a day uses Day#equals(Object) so"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * as to ensure that the day with exactly the same fields will be removed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * @see Day#isSameDay(Day)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class UniqueDayList implements Iterable\u003cDay\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final ObservableList\u003cDay\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final ObservableList\u003cDay\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns true if the list contains an equivalent day as the given argument."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean contains(Day toCheck) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::isSameDay);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns true if the list contains the a day with an LocalDate same as toCheck."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean contains(LocalDate toCheck) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assert toCheck !\u003d null : \"toCheckDate cannot be null\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return internalList.stream().anyMatch(x-\u003ex.getDate().get().equals(toCheck));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Adds a day to the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * The day must not already exist in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Adds it according to the order of dates."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void add(Day toAdd) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (contains(toAdd)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new DuplicateDayException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            boolean isAdded \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            for (int index \u003d internalList.size() - 1; index \u003e\u003d 0; index -\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                if (toAdd.isAfter(internalList.get(index))) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    internalList.add(index + 1, toAdd);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    isAdded \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            if (isAdded \u003d\u003d false) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                internalList.add(0, toAdd);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Replaces the day {@code target} in the list with {@code editedPerson}."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * {@code target} must exist in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * The day identity of {@code editedPerson} must not be the same as another existing day in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setDay(Day target, Day editedDay) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireAllNonNull(target, editedDay);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new DayNotFoundException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (!target.isSameDay(editedDay) \u0026\u0026 contains(editedDay)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new DuplicateDayException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        internalList.remove(target);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.add(editedDay);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Removes the equivalent day from the list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * The day must exist in the list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void remove(Day toRemove) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new DayNotFoundException();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Day getDate(LocalDate date) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assert date !\u003d null : \"getDate cannot be null\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(date);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return internalList.stream().filter(x-\u003ex.getDate().get().equals(date)).reduce((x, y)-\u003ex).get();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setDays(UniqueDayList replacement) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Replaces the contents of this list with {@code days}."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * {@code days} must not contain duplicate days."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setDays(List\u003cDay\u003e days) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireAllNonNull(days);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!daysAreUnique(days)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new DuplicateDayException();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        internalList.setAll(days);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public ObservableList\u003cDay\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Iterator\u003cDay\u003e iterator() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                || (other instanceof UniqueDayList // instanceof handles nulls"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        \u0026\u0026 internalList.equals(((UniqueDayList) other).internalList));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Returns true if {@code days} contains only unique days."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private boolean daysAreUnique(List\u003cDay\u003e days) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for (int i \u003d 0; i \u003c days.size() - 1; i++) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            for (int j \u003d i + 1; j \u003c days.size(); j++) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                if (days.get(i).isSameDay(days.get(j))) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hoperawr": 14,
      "ethanso56": 18,
      "wayne987": 133,
      "junhui-phoon": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/model/day/Weight.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.model.day;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " * Represents a Person\u0027s weight in the record."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidWeight(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class Weight {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"Weight should only contain numbers, and it can only take up to at most 2 decimal points \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_TOO_LIGHT \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"are you the world\u0027s lightest person?\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String MESSAGE_TOO_HEAVY \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"are you the world\u0027s heaviest person?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"^[0-9]+(\\\\.[0-9]{1,2})?$\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Constructs a {@code Weight}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param weight A valid weight in kilograms."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public Weight(String weight) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        requireNonNull(weight);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        checkArgument(isValidWeight(weight), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        value \u003d weight;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Constructs a {@code Weight}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * for default profile"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Weight() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        value \u003d \"DEFAULT\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Returns true if a given string is a valid weight number."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static boolean isValidWeight(String test) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                || (other instanceof Weight // instanceof handles nulls"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                \u0026\u0026 value.equals(((Weight) other).value)); // state check"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "-": 31,
      "wayne987": 14,
      "junhui-phoon": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/model/day/exceptions/DayNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.model.day.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Signals that the operation is unable to find the specified day."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DayNotFoundException extends RuntimeException {}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/model/day/exceptions/DuplicateDayException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.model.day.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Signals that the operation will result in duplicate Days (Days are considered duplicates if they have the same"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * identity)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DuplicateDayException extends RuntimeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DuplicateDayException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(\"Operation would result in duplicate days\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 3,
      "-": 6,
      "jiaax": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/BelowCertainBmiPredicate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class BelowCertainBmiPredicate implements Predicate\u003cPerson\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private double bmi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public BelowCertainBmiPredicate(double bmi) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.bmi \u003d bmi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean test(Person person) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return person.getCurrentBmi() \u003e bmi;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                || (other instanceof BelowCertainBmiPredicate // instanceof handles nulls"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u0026\u0026 bmi \u003d\u003d ((BelowCertainBmiPredicate) other).bmi); // state check"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 22,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Height.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Represents a Person\u0027s heights in the profile."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidHeight(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Height {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \"Height should be in between 50-272 unless you are the world\u0027s tallest or shortest person\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Constructs a {@code Height}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param height A valid height in centimetres."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Height(String height) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(height);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        checkArgument(isValidHeight(height), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        value \u003d height;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Constructs a {@code Height}."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * for default profile"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Height() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        value \u003d \"DEFAULT\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if a given string is a valid height number."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static boolean isValidHeight(String test) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int testHeight;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assert test.length() \u003e 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            testHeight \u003d Integer.parseInt(test);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return (50 \u003c testHeight) \u0026\u0026 (testHeight \u003c 272);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                || (other instanceof Height // instanceof handles nulls"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                \u0026\u0026 value.equals(((Height) other).value)); // state check"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "wayne987": 15,
      "jiaax": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/ID.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Represents a Person\u0027s Id in the profile."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class ID {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            \"Key in a valid 4D number!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Constructs a {@code ID}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param id A valid id."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public ID(String id) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(id);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        value \u003d id;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Constructs a {@code ID}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * for default profile"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public ID() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        value \u003d \"DEFAULT\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if a given string is a valid Id number."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static boolean isValidId(String test) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assert test.length() \u003e 3;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (test.matches(VALIDATION_REGEX)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            int firstIndex \u003d Integer.parseInt(test.substring(0, 1));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            int secondIndex \u003d Integer.parseInt(test.substring(1, 2));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            int value \u003d Integer.parseInt(test.substring(2, 4));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return firstIndex \u003e 0"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    \u0026\u0026 firstIndex \u003c 5"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    \u0026\u0026 secondIndex \u003e 0"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    \u0026\u0026 secondIndex \u003c 5"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    \u0026\u0026 value \u003e 0"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    \u0026\u0026 value \u003c 21;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                || (other instanceof ID // instanceof handles nulls"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                \u0026\u0026 value.equals(((ID) other).value)); // state check"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 8,
      "jiaax": 64
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Name.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Represents a Person\u0027s name in the person."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Name {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * The first character of the address must not be a whitespace,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * otherwise \" \" (a blank string) becomes a valid input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String fullName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code Name}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param name A valid name."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Name(String name) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        fullName \u003d name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a given string is a valid name."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static boolean isValidName(String name) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assert name !\u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return name.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return fullName;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof Name // instanceof handles nulls"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        return fullName.hashCode();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 54,
      "jiaax": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Tests that a {@code Day}\u0027s {@code Date} matches any of the keywords given."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private final List\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean test(Person person) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        return keywords.stream()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                .anyMatch(keyword -\u003e StringUtil"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        .containsWordIgnoreCase(person.getProfile().name.toString(), keyword));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "-": 29,
      "wayne987": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Person.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calculator.Bmi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.UniqueDayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Represents a Person in My Fitness Buddy."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Person {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    // if a person has DEFAULT_PROFILE, it means that the profile has not been set by user so no"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    // daily records can be added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    // Identity fields"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private static Profile defaultProfile \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            new Profile(new Name(\"DEFAULT\"), new ID(), new Height(), new Weight());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Profile profile;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final UniqueDayList days;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final int age \u003d 20;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    private double currentBmi \u003d -1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Date startingDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Person(Profile profile, UniqueDayList days) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireAllNonNull(profile, days);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.profile \u003d profile;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.days \u003d days;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Profile cannot be null and be present."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Person() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.profile \u003d defaultProfile;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.days \u003d new UniqueDayList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Profile cannot be null and be present."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Person(Profile profile) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(profile);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.profile \u003d profile;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.days \u003d new UniqueDayList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if the profile is not changed from default."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean isDefaultProfile() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assert profile !\u003d null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return profile.equals(defaultProfile);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns the profile of a Person instance."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Profile getProfile() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assert profile !\u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return profile;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns an unmodifiable day list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public ObservableList\u003cDay\u003e getDayList() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return days.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns the UniqueDayList that can be modified."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public UniqueDayList getDays() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return days;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Replaces the contents of the day list with {@code days}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * {@code persons} must not contain duplicate days."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setDays(List\u003cDay\u003e days) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assert days !\u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.days.setDays(days);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Sets the profile information of current data to {@code profile}."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setStartingDay(Date date) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assert date !\u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        profile.setStartingDay(date);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Sets the profile information of current data to {@code profile}."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setProfile(Profile profile) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assert profile !\u003d null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.profile \u003d profile;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if a day with the same identity as {@code day} exists in the my fitness buddy records."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean hasDay(Day day) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(day);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return days.contains(day);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if a day in the my fitness buddy records with the same date as the current date."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean hasDay(LocalDate date) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return days.contains(date);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Gets a day in the my fitness buddy records with a specific date."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Day getDay(LocalDate date) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return days.getDate(date);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Gets starting day"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Date getDay() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return profile.getStartDate();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Adds a day to the my fitness buddy records."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * The day must not already exist in the my fitness buddy records."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void addDay(Day day) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assert day !\u003d null;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        day.setAge(this.age);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        day.setHeight(profile.height);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        day.setStartingWeight(profile.getTargetWeight());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        days.add(day);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Replaces the given day {@code target} in the list with {@code editedPerson}."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * {@code target} must exist in the my fitness buddy records."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * The day identity of {@code editedPerson} must not be the same as another"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * existing day in the my fitness buddy records."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setDay(Day target, Day editedDay) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(editedDay);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        days.setDay(target, editedDay);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Removes {@code key} from this {@code MyFitnessBuddy}."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * {@code key} must exist in the records."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void removeDay(Day key) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        days.remove(key);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Returns true if both persons have the same ID."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isSamePerson(Person otherPerson) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        if (otherPerson \u003d\u003d this) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        return otherPerson !\u003d null"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                \u0026\u0026 otherPerson.equals(this); // check is same id and name"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if both persons have the same identity and data fields."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     * This defines a stronger notion of equality between two persons."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof Person)) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        Person otherPerson \u003d (Person) other;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return otherPerson.getProfile().getId().equals(getProfile().getId());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return Objects.hash(profile, days);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        builder.append(\" Profile: \")"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(getProfile().toString())"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(\" Days: \")"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(getDayList());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns true if the date of this day is after otherDay"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public boolean isAfter(Person otherPerson) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int thisPerson \u003d Integer.parseInt(this.profile.id.value);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int otherPer \u003d Integer.parseInt(otherPerson.profile.id.value);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return thisPerson \u003e otherPer;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Returns current bmi"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public double getCurrentBmi() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        List\u003cDay\u003e list \u003d days.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        int size \u003d list.size();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return Bmi.calculateBmi(profile.height, profile.getTargetWeight());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Day currentDay \u003d list.get(size - 1);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Weight currentWeight \u003d currentDay.getWeight();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            Height currentHeight \u003d profile.height;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return Bmi.calculateBmi(currentHeight, currentWeight);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * returns current bmi progress"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public double getProgress() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double currentBmi \u003d getCurrentBmi();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double startBmi \u003d Bmi.calculateBmi(profile.getHeight(), profile.getTargetWeight());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double endBmi \u003d 22.5;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double totalBmiToChange \u003d startBmi - endBmi;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double differenceWithEnd \u003d currentBmi - endBmi;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        double percentageChange \u003d 1 - (differenceWithEnd / totalBmiToChange);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (percentageChange \u003e 1) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            percentageChange \u003d 1;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (percentageChange \u003c 0) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            percentageChange \u003d 0;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return percentageChange;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "-": 70,
      "wayne987": 66,
      "jiaax": 131
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Profile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Represents a profile in My Fitness Buddy records."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Profile {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    // identity fields"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public final Name name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public final ID id;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    // data fields"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public final Height height;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Weight targetWeight;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final int age \u003d 20;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Date startingDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Creates a profile."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Profile(Name name, ID id, Height height, Weight targetWeight) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireAllNonNull(name, id, height, targetWeight);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.targetWeight \u003d targetWeight;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Creates a profile with the option to indicate starting date for storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Profile(Name name, ID id, Height height, Weight targetWeight, Date date) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        requireAllNonNull(name, id, height, targetWeight);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.targetWeight \u003d targetWeight;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.startingDate \u003d date;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assert name !\u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public ID getId() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Height getHeight() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return height;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Weight getTargetWeight() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return targetWeight;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public int getAge() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return this.age;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Date getStartDate() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return startingDate;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Sets the profile information of current data to {@code profile}."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void setStartingDay(Date date) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assert date !\u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.startingDate \u003d date;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (!(other instanceof Profile)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Profile otherProfile \u003d (Profile) other;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return otherProfile.getId().equals(getId())"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                \u0026\u0026 otherProfile.getName().equals(getName())"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                \u0026\u0026 otherProfile.getHeight().equals(getHeight())"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                \u0026\u0026 otherProfile.getTargetWeight().equals(getTargetWeight());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        builder.append(\" Name: \")"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(getName())"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(\" ID: \")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(getId())"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(\" Height: \")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(getHeight())"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(\" Target Weight: \")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .append(getTargetWeight());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 32,
      "jiaax": 78
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/UniquePersonList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.exceptions.DuplicatePersonException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.exceptions.PersonNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * A list of persons that enforces uniqueness between its elements and does not allow nulls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * as to ensure that the person with exactly the same fields will be removed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Supports a minimal set of list operations."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * @see Person#isSamePerson(Person)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class UniquePersonList implements Iterable\u003cPerson\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            FXCollections.unmodifiableObservableList(internalList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the list contains an equivalent person as the given argument."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean contains(Person toCheck) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(toCheck);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return internalList.stream().anyMatch(toCheck::isSamePerson);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a person to the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person must not already exist in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void add(Person toAdd) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(toAdd);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (contains(toAdd)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuplicatePersonException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            boolean isAdded \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            for (int index \u003d internalList.size() - 1; index \u003e\u003d 0; index -\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                if (toAdd.isAfter(internalList.get(index))) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    internalList.add(index + 1, toAdd);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    isAdded \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (isAdded \u003d\u003d false) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                internalList.add(0, toAdd);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the person {@code target} in the list with {@code editedPerson}."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code target} must exist in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person identity of {@code editedPerson} must not be the same as another existing person in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(target, editedPerson);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d internalList.indexOf(target);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new PersonNotFoundException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuplicatePersonException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        internalList.set(index, editedPerson);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Person getPerson(Person otherPerson) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        requireNonNull(otherPerson);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        for (Person p: internalList) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (p.isSamePerson(otherPerson)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                return p;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        throw new PersonNotFoundException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes the equivalent person from the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person must exist in the list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    public void remove(Person toRemove) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(toRemove);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!internalList.remove(toRemove)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new PersonNotFoundException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPersons(UniquePersonList replacement) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(replacement);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        internalList.setAll(replacement.internalList);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the contents of this list with {@code persons}."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code persons} must not contain duplicate persons."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPersons(List\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(persons);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!personsAreUnique(persons)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DuplicatePersonException();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        internalList.setAll(persons);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the backing list as an unmodifiable {@code ObservableList}."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        return internalUnmodifiableList;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    public Iterator\u003cPerson\u003e iterator() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        return internalList.iterator();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof UniquePersonList // instanceof handles nulls"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        return internalList.hashCode();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if {@code persons} contains only unique persons."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean personsAreUnique(List\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int j \u003d i + 1; j \u003c persons.size(); j++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                if (persons.get(i).isSamePerson(persons.get(j))) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 135,
      "wayne987": 12,
      "jiaax": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieCount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Exercise;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Food;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.day.UniqueDayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Height;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Contains utility methods for populating {@code MyFitnessBuddy} with sample data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class SampleDataUtil {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static UniqueDayList getSampleDays() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ObservableList\u003cInput\u003e sampleInput \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        sampleInput.add(new Input(new Time(\"1230\"), new Food(\"Laksa\"), new CalorieCount(\"800\")));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ObservableList\u003cOutput\u003e sampleOutput \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        sampleOutput.add(new Output(new Time(\"1800\"), new Exercise(\"Run\"), new CalorieCount(\"200\")));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        CalorieManager sampleCalorieManager \u003d new CalorieManager(sampleInput, sampleOutput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        UniqueDayList sampleDays \u003d new UniqueDayList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        sampleDays.add(new Day(new Date(\"2020-10-11\"), new Weight(\"80\"), sampleCalorieManager));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        sampleDays.add(new Day(new Date(\"2020-10-12\"), new Weight(\"82\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return sampleDays;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static Person getSamplePerson() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Profile sampleProfile \u003d new Profile(new Name(\"John\"),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new ID(\"2103\"), new Height(\"177\"), new Weight(\"80\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        UniqueDayList dayList \u003d generateDayList(sampleProfile);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Person samplePerson \u003d new Person(sampleProfile, dayList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        samplePerson.setStartingDay(new Date(\"2020-09-30\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return samplePerson;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static Person getSamplePerson2() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Profile sampleProfile \u003d new Profile(new Name(\"Daniel\"),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new ID(\"2104\"), new Height(\"170\"), new Weight(\"75\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        UniqueDayList dayList \u003d generateDayList(sampleProfile);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Person samplePerson \u003d new Person(sampleProfile, dayList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        samplePerson.setStartingDay(new Date(\"2020-08-29\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return samplePerson;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static Person getSamplePerson3() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Profile sampleProfile \u003d new Profile(new Name(\"Tom\"),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new ID(\"2105\"), new Height(\"180\"), new Weight(\"75\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        UniqueDayList dayList \u003d generateDayList(sampleProfile);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Person samplePerson \u003d new Person(sampleProfile, dayList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        samplePerson.setStartingDay(new Date(\"2020-08-29\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return samplePerson;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static Person getSamplePerson4() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Profile sampleProfile \u003d new Profile(new Name(\"Adam\"),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new ID(\"2106\"), new Height(\"176\"), new Weight(\"79\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        UniqueDayList dayList \u003d generateDayList(sampleProfile);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Person samplePerson \u003d new Person(sampleProfile, dayList);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        samplePerson.setStartingDay(new Date(\"2020-08-29\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return samplePerson;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static Person getSamplePerson5() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Profile sampleProfile \u003d new Profile(new Name(\"Harry\"),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new ID(\"2107\"), new Height(\"178\"), new Weight(\"71\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        UniqueDayList dayList \u003d generateDayList(sampleProfile);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Person samplePerson \u003d new Person(sampleProfile, dayList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        samplePerson.setStartingDay(new Date(\"2020-08-29\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return samplePerson;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static Person getSamplePerson6() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Profile sampleProfile \u003d new Profile(new Name(\"Charlie\"),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new ID(\"2108\"), new Height(\"175\"), new Weight(\"72\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        UniqueDayList dayList \u003d generateDayList(sampleProfile);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Person samplePerson \u003d new Person(sampleProfile, dayList);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        samplePerson.setStartingDay(new Date(\"2020-08-29\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return samplePerson;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static Person getSamplePerson7() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Profile sampleProfile \u003d new Profile(new Name(\"William\"),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new ID(\"2109\"), new Height(\"172\"), new Weight(\"68\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        UniqueDayList dayList \u003d generateDayList(sampleProfile);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Person samplePerson \u003d new Person(sampleProfile, dayList);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        samplePerson.setStartingDay(new Date(\"2020-08-29\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return samplePerson;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static Person getSamplePerson8() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Profile sampleProfile \u003d new Profile(new Name(\"Bob\"),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new ID(\"2110\"), new Height(\"174\"), new Weight(\"82\"));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        UniqueDayList dayList \u003d generateDayList(sampleProfile);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Person samplePerson \u003d new Person(sampleProfile, dayList);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        samplePerson.setStartingDay(new Date(\"2020-08-29\"));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return samplePerson;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Generates a sample {@code UniqueDayList} for each sample profile."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static UniqueDayList generateDayList(Profile sampleProfile) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        UniqueDayList dayList \u003d getSampleDays();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        for (Day day : dayList) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            day.setAge(sampleProfile.getAge());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            day.setHeight(sampleProfile.getHeight());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            day.setStartingWeight(sampleProfile.getTargetWeight());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return dayList;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static ReadOnlyMyFitnessBuddy getSampleMyFitnessBuddy() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        MyFitnessBuddy sampleMyFitnessBuddy \u003d new MyFitnessBuddy();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        sampleMyFitnessBuddy.addPerson(getSamplePerson());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        sampleMyFitnessBuddy.addPerson(getSamplePerson2());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        sampleMyFitnessBuddy.addPerson(getSamplePerson3());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        sampleMyFitnessBuddy.addPerson(getSamplePerson4());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        sampleMyFitnessBuddy.addPerson(getSamplePerson5());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        sampleMyFitnessBuddy.addPerson(getSamplePerson6());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        sampleMyFitnessBuddy.addPerson(getSamplePerson7());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        sampleMyFitnessBuddy.addPerson(getSamplePerson8());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return sampleMyFitnessBuddy;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 20,
      "ethanso56": 6,
      "-": 18,
      "wayne987": 7,
      "jiaax": 4,
      "junhui-phoon": 82
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedCalorieManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " * Jackson-friendly version of {@link seedu.address.model.calorie.CalorieManager}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "class JsonAdaptedCalorieManager {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final List\u003cJsonAdaptedInput\u003e inputList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final List\u003cJsonAdaptedOutput\u003e outputList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Constructs a {@code JsonCalorieManager} with the given CalorieManager details."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public JsonAdaptedCalorieManager(@JsonProperty(\"inputList\") List\u003cJsonAdaptedInput\u003e inputList,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                     @JsonProperty(\"outputList\") List\u003cJsonAdaptedOutput\u003e outputList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.inputList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.outputList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (inputList !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.inputList.addAll(inputList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (outputList !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.outputList.addAll(outputList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonAdaptedCalorieManager (CalorieManager source) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.inputList \u003d source.getCalorieInputList().stream()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                .map(JsonAdaptedInput::new).collect(Collectors.toList());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.outputList \u003d source.getCalorieOutputList().stream()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                .map(JsonAdaptedOutput::new).collect(Collectors.toList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Converts this Jackson-friendly adapted CalorieManager"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * object into the CalorieManager {@code CalorieManager} object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted CalorieManager."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieManager toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        final ObservableList\u003cInput\u003e dayInputs \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for (JsonAdaptedInput input : inputList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            dayInputs.add(input.toModelType());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        final ObservableList\u003cOutput\u003e dayOutputs \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        for (JsonAdaptedOutput output : outputList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            dayOutputs.add(output.toModelType());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new CalorieManager(dayInputs, dayOutputs);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 15,
      "ethanso56": 4,
      "wayne987": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedDay.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Jackson-friendly version of {@link Day}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "class JsonAdaptedDay {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Day\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private final String weight;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final JsonAdaptedCalorieManager calorieManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Constructs a {@code JsonAdaptedDay} with the given day details."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonAdaptedDay(@JsonProperty(\"date\") String date,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                          @JsonProperty(\"weight\") String weight,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                          @JsonProperty(\"calorie manager\") JsonAdaptedCalorieManager calorieManager) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.calorieManager \u003d calorieManager;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Converts a given {@code Day} into this class for Jackson use."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public JsonAdaptedDay(Day source) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        date \u003d source.getDate().value;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        weight \u003d source.getWeight().value;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        calorieManager \u003d new JsonAdaptedCalorieManager(source.getCalorieManager());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Converts this Jackson-friendly adapted day object into the model\u0027s {@code Day} object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted day."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Day toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (!Date.isValidDate(date)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        final Date modelDate \u003d new Date(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (weight \u003d\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (!Weight.isValidWeight(weight)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            throw new IllegalValueException(Weight.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        final Weight modelWeight \u003d new Weight(weight);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (calorieManager \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    CalorieManager.class.getSimpleName()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        final CalorieManager modelCalorieManager \u003d calorieManager.toModelType();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return new Day(modelDate, modelWeight, modelCalorieManager);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 11,
      "ethanso56": 17,
      "-": 32,
      "wayne987": 8,
      "junhui-phoon": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedInput.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieCount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Food;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " * Jackson-friendly version of {@link seedu.address.model.calorie.Input}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "class JsonAdaptedInput {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Input\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final String calorieCount;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final String food;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Constructs a {@code JsonAdaptedInput} with the given Input details."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonAdaptedInput(@JsonProperty(\"time\") String time,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                            @JsonProperty(\"food\") String food,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                            @JsonProperty(\"calorieCount\") String calorieCount) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.food \u003d food;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.calorieCount \u003d calorieCount;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Converts a given {@code Input} into this class for Jackson use."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonAdaptedInput(Input source) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        calorieCount \u003d source.getCalorieCount().calorieCount;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        time \u003d source.getTime().time;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        food \u003d source.getFood().food;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Converts this Jackson-friendly adapted Input object into the model\u0027s {@code Input} object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted Input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public Input toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (time \u003d\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!Time.isValidTime(time)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(Time.MESSAGE_CONSTRAINTS));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        final Time modelTime \u003d new Time(time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (food \u003d\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Food.class.getSimpleName()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!Food.isValidFood(food)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(Food.MESSAGE_CONSTRAINTS));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        final Food modelFood \u003d new Food(food);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (calorieCount \u003d\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    CalorieCount.class.getSimpleName()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!CalorieCount.isValidCalorieCount(calorieCount)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(CalorieCount.MESSAGE_CONSTRAINTS));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        final CalorieCount modelCalorieCount \u003d new CalorieCount(calorieCount);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return new Input(modelTime, modelFood, modelCalorieCount);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 76,
      "ethanso56": 1,
      "wayne987": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedOutput.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieCount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Exercise;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " * Jackson-friendly version of {@link seedu.address.model.calorie.Output}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "class JsonAdaptedOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Output\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final String calorieCount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final String exercise;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Constructs a {@code JsonAdaptedOutput} with the given Output details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonAdaptedOutput(@JsonProperty(\"time\") String time,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                             @JsonProperty(\"exercise\") String exercise,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                             @JsonProperty(\"calorieCount\") String calorieCount) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.exercise \u003d exercise;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.calorieCount \u003d calorieCount;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Converts a given {@code Output} into this class for Jackson use."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonAdaptedOutput(Output source) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        calorieCount \u003d source.getCalorieCount().calorieCount;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        time \u003d source.getTime().time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        exercise \u003d source.getExercise().exercise;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Converts this Jackson-friendly adapted output object into the model\u0027s {@code Output} object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted output."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public Output toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (time \u003d\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!Time.isValidTime(time)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(Time.MESSAGE_CONSTRAINTS));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        final Time modelTime \u003d new Time(time);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (exercise \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    Exercise.class.getSimpleName()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!Exercise.isValidExercise(exercise)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(Exercise.MESSAGE_CONSTRAINTS));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        final Exercise modelExercise \u003d new Exercise(exercise);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (calorieCount \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    CalorieCount.class.getSimpleName()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!CalorieCount.isValidCalorieCount(calorieCount)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(CalorieCount.MESSAGE_CONSTRAINTS));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        final CalorieCount modelCalorieCount \u003d new CalorieCount(calorieCount);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return new Output(modelTime, modelExercise, modelCalorieCount);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 73,
      "ethanso56": 1,
      "wayne987": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * Jackson-friendly version of {@link Person}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "class JsonAdaptedPerson {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_DAY \u003d \"Day list contains duplicate days(s).\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final JsonAdaptedProfile profile;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final List\u003cJsonAdaptedDay\u003e days \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Constructs a {@code JsonAdaptedPerson} with the given day details."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonAdaptedPerson(@JsonProperty(\"profile\") JsonAdaptedProfile profile,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                             @JsonProperty(\"days\") List\u003cJsonAdaptedDay\u003e days) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.profile \u003d profile;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (days !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            this.days.addAll(days);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given {@code Person} into this class for Jackson use."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonAdaptedPerson(Person source) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        profile \u003d new JsonAdaptedProfile(source.getProfile());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        days.addAll(source.getDayList().stream().map(JsonAdaptedDay::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted Person."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public Person toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (profile \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Profile.class.getSimpleName()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Profile modelProfile \u003d profile.toModelType();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Person modelPerson \u003d new Person();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        modelPerson.setProfile(modelProfile);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (days.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Day.class.getSimpleName()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        for (JsonAdaptedDay jsonAdaptedDay : days) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            Day day \u003d jsonAdaptedDay.toModelType();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            if (modelPerson.hasDay(day)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                throw new IllegalValueException(MESSAGE_DUPLICATE_DAY);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            modelPerson.addDay(day);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return modelPerson;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 29,
      "-": 44
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedProfile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Height;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " * Jackson-friendly version of {@link Profile}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "class JsonAdaptedProfile {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Profile\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final String id;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final String height;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final String targetWeight;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final String startingDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Constructs a {@code JsonAdaptedProfile} with the given day details."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonAdaptedProfile(@JsonProperty(\"name\") String name, @JsonProperty(\"id\") String id,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                          @JsonProperty(\"height\") String height, @JsonProperty(\"targetWeight\") String targetWeight,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        @JsonProperty(\"startingDate\") String startingDate) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.targetWeight \u003d targetWeight;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.startingDate \u003d startingDate;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Converts a given {@code Profile} into this class for Jackson use."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonAdaptedProfile(Profile source) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        name \u003d source.getName().fullName;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        id \u003d source.getId().value;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        height \u003d source.getHeight().value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        targetWeight \u003d source.getTargetWeight().value;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        startingDate \u003d source.getStartDate().value;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Converts this Jackson-friendly adapted profile object into the model\u0027s {@code Profile} object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted day."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public Profile toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (id \u003d\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, ID.class.getSimpleName()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!ID.isValidId(id)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(ID.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        final ID modelID \u003d new ID(id);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (height \u003d\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Height.class.getSimpleName()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!Height.isValidHeight(height)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(Height.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        final Height modelHeight \u003d new Height(height);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (targetWeight \u003d\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName()));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!Weight.isValidWeight(targetWeight)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(Weight.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        final Weight modelWeight \u003d new Weight(targetWeight);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (startingDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!Date.isValidDate(startingDate)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        final Date startDate \u003d new Date(startingDate);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Profile(modelName, modelID, modelHeight, modelWeight, startDate);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 92,
      "wayne987": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonMyFitnessBuddyStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.FileUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " * A class to access My Fitness Buddy data stored as a json file on the hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class JsonMyFitnessBuddyStorage implements MyFitnessBuddyStorage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(JsonMyFitnessBuddyStorage.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonMyFitnessBuddyStorage(Path filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public Path getMyFitnessBuddyFilePath() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public Optional\u003cReadOnlyMyFitnessBuddy\u003e readFitnessBuddy() throws DataConversionException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return readFitnessBuddy(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Similar to {@link #readFitnessBuddy()}."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the file is not in the correct format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public Optional\u003cReadOnlyMyFitnessBuddy\u003e readFitnessBuddy(Path filePath) throws DataConversionException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Optional\u003cJsonSerializableMyFitnessBuddy\u003e jsonFitnessBuddy \u003d JsonUtil.readJsonFile("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                filePath, JsonSerializableMyFitnessBuddy.class);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        if (!jsonFitnessBuddy.isPresent()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            return Optional.of(jsonFitnessBuddy.get().toModelType());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DataConversionException(ive);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void saveFitnessBuddy(ReadOnlyMyFitnessBuddy addressBook) throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        saveFitnessBuddy(addressBook, filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Similar to {@link #saveFitnessBuddy(ReadOnlyMyFitnessBuddy)}."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath location of the data. Cannot be null."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void saveFitnessBuddy(ReadOnlyMyFitnessBuddy myFitnessBuddy, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        requireNonNull(myFitnessBuddy);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(filePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.createIfMissing(filePath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assert FileUtil.isFileExists(filePath) : \"Error creating new file\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonUtil.saveJsonFile(new JsonSerializableMyFitnessBuddy(myFitnessBuddy), filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        logger.info(\"Save completed\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 21,
      "-": 56,
      "jiaax": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonSerializableMyFitnessBuddy.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonRootName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " * An Immutable My Fitness Buddy that is serializable to JSON format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "@JsonRootName(value \u003d \"My Fitness Buddy\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "class JsonSerializableMyFitnessBuddy {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Person list contains duplicate person(s).\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Constructs a {@code JsonSerializableMyFitnessBuddy} with the given persons."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonSerializableMyFitnessBuddy(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.persons.addAll(persons);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Converts a given {@code ReadOnlyMyFitnessBuddy} into this class for Jackson use."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * @param source future changes to this will not affect the created {@code JsonSerializableMyFitnessBuddy}."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public JsonSerializableMyFitnessBuddy(ReadOnlyMyFitnessBuddy source) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Converts this address book into the model\u0027s {@code MyFitnessBuddy} object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public MyFitnessBuddy toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        MyFitnessBuddy modelMyFitnessBuddy \u003d new MyFitnessBuddy();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        for (JsonAdaptedPerson person: persons) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            Person modelPerson \u003d person.toModelType();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            if (modelMyFitnessBuddy.hasPerson(modelPerson)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            modelMyFitnessBuddy.addPerson(modelPerson);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return modelMyFitnessBuddy;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/MyFitnessBuddyStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Represents a storage for {@link MyFitnessBuddy}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public interface MyFitnessBuddyStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the file path of the data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    Path getMyFitnessBuddyFilePath();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns MyFitnessBuddy data as a {@link ReadOnlyMyFitnessBuddy}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     *   Returns {@code Optional.empty()} if storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DataConversionException if the data in storage is not in the expected format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was any problem when reading from the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    Optional\u003cReadOnlyMyFitnessBuddy\u003e readFitnessBuddy() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * @see #getMyFitnessBuddyFilePath()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    Optional\u003cReadOnlyMyFitnessBuddy\u003e readFitnessBuddy(Path filePath) throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Saves the given {@link ReadOnlyMyFitnessBuddy} to the storage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * @param myFitnessBuddy cannot be null."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there was any problem writing to the file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    void saveFitnessBuddy(ReadOnlyMyFitnessBuddy myFitnessBuddy) throws IOException;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * @see #saveFitnessBuddy(ReadOnlyMyFitnessBuddy)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    void saveFitnessBuddy(ReadOnlyMyFitnessBuddy myFitnessBuddy, Path filePath) throws IOException;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 10,
      "-": 32,
      "jiaax": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Storage component"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public interface Storage extends MyFitnessBuddyStorage, UserPrefsStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    Path getMyFitnessBuddyFilePath();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    Optional\u003cReadOnlyMyFitnessBuddy\u003e readFitnessBuddy() throws DataConversionException, IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    void saveFitnessBuddy(ReadOnlyMyFitnessBuddy myFitnessBuddy) throws IOException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 4,
      "-": 27,
      "jiaax": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/StorageManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Manages storage of AddressBook data in local storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManager implements Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private MyFitnessBuddyStorage myFitnessBuddyStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private UserPrefsStorage userPrefsStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Creates a {@code StorageManager} with the given {@code MyFitnessBuddyStorage} and {@code UserPrefStorage}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public StorageManager(MyFitnessBuddyStorage myFitnessBuddyStorage, UserPrefsStorage userPrefsStorage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        this.myFitnessBuddyStorage \u003d myFitnessBuddyStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefsStorage \u003d userPrefsStorage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsStorage.readUserPrefs();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefsStorage.saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d My Fitness Buddy methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public Path getMyFitnessBuddyFilePath() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return myFitnessBuddyStorage.getMyFitnessBuddyFilePath();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public Optional\u003cReadOnlyMyFitnessBuddy\u003e readFitnessBuddy() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return readFitnessBuddy(myFitnessBuddyStorage.getMyFitnessBuddyFilePath());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public Optional\u003cReadOnlyMyFitnessBuddy\u003e readFitnessBuddy(Path filePath)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Attempting to read data from file: \" + filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return myFitnessBuddyStorage.readFitnessBuddy(filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void saveFitnessBuddy(ReadOnlyMyFitnessBuddy myFitnessBuddy) throws IOException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        saveFitnessBuddy(myFitnessBuddy, myFitnessBuddyStorage.getMyFitnessBuddyFilePath());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void saveFitnessBuddy(ReadOnlyMyFitnessBuddy myFitnessBuddy, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Attempting to write to data file: \" + filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        myFitnessBuddyStorage.saveFitnessBuddy(myFitnessBuddy, filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 16,
      "-": 63,
      "jiaax": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CalorieInputCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * An UI component that displays information of a {@code Input}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class CalorieInputCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private static final String FXML \u003d \"CalorieInputListCard.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public final Input calorieInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Label calorieCount;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Label time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Label food;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Creates a {@code PersonCode} with the given {@code Person} and index to display."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public CalorieInputCard(Input calorieInput, int displayedIndex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.calorieInput \u003d calorieInput;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        time.setText(\"Time: \" + calorieInput.getTime().toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        food.setText(\"Food: \" + calorieInput.getFood().toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieCount.setText(\"Calories: \" + calorieInput.getCalorieCount().toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (!(other instanceof CalorieInputCard)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        CalorieInputCard card \u003d (CalorieInputCard) other;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 calorieInput.equals(card.calorieInput);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CalorieInputListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Panel containing a list of Inputs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class CalorieInputListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private static final String FXML \u003d \"CalorieInputListPanel.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private ListView\u003cInput\u003e calorieInputListView;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Creates an empty {@code CalorieInputListPanel}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public CalorieInputListPanel() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Updates the {@code CalorieInputListPanel} with the given {@code ObservableList}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param inputList the list of Inputs to be displayed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void update(ObservableList\u003cInput\u003e inputList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieInputListView.setItems(inputList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieInputListView.setCellFactory(listView -\u003e new CalorieInputListViewCell());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Clears the {@code CalorieInputListPanel} with an empty {@code ObservableList}."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieInputListView.setItems(FXCollections.observableArrayList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieInputListView.setCellFactory(listView -\u003e new CalorieInputListViewCell());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Input} using a {@code CalorieInputCard}."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    class CalorieInputListViewCell extends ListCell\u003cInput\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        protected void updateItem(Input calorieInput, boolean empty) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            super.updateItem(calorieInput, empty);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (empty || calorieInput \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                setGraphic(new CalorieInputCard(calorieInput, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 63
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CalorieOutputCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * An UI component that displays information of a {@code Output}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class CalorieOutputCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private static final String FXML \u003d \"CalorieOutputListCard.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public final Output calorieOutput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Label calorieCount;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Label time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Label exercise;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Creates a {@code PersonCode} with the given {@code Person} and index to display."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public CalorieOutputCard(Output calorieOutput, int displayedIndex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.calorieOutput \u003d calorieOutput;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        time.setText(\"Time: \" + calorieOutput.getTime().toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        exercise.setText(\"Exercise: \" + calorieOutput.getExercise().toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieCount.setText(\"Calories: \" + calorieOutput.getCalorieCount().toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (!(other instanceof CalorieInputCard)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        CalorieOutputCard card \u003d (CalorieOutputCard) other;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 calorieOutput.equals(card.calorieOutput);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CalorieOutputListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Panel containing a list of Outputs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class CalorieOutputListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private static final String FXML \u003d \"CalorieOutputListPanel.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private ListView\u003cOutput\u003e calorieOutputListView;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Creates an empty {@code CalorieOutputListPanel}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public CalorieOutputListPanel() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Updates the {@code CalorieOutputListPanel} with the given {@code ObservableList}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param outputList the list of Outputs to be displayed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void update(ObservableList\u003cOutput\u003e outputList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieOutputListView.setItems(outputList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieOutputListView.setCellFactory(listView -\u003e new CalorieOutputListViewCell());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Clears the {@code CalorieOutputListPanel} with an empty {@code ObservableList}."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieOutputListView.setItems(FXCollections.observableArrayList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieOutputListView.setCellFactory(listView -\u003e new CalorieOutputListViewCell());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Output} using a {@code CalorieOutputCard}."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    class CalorieOutputListViewCell extends ListCell\u003cOutput\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        protected void updateItem(Output calorieOutput, boolean empty) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            super.updateItem(calorieOutput, empty);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (empty || calorieOutput \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                setGraphic(new CalorieOutputCard(calorieOutput, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 63
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CalorieStatsWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.chart.BarChart;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.chart.CategoryAxis;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.chart.NumberAxis;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.chart.XYChart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " * The controller for the calorie statistics window."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class CalorieStatsWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(CalorieStatsWindow.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final String FXML \u003d \"CalorieStatsWindow.fxml\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private ObservableList\u003cDay\u003e dayList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private BarChart\u003cString, Integer\u003e barChart;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private CategoryAxis xAxis;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private NumberAxis yAxis;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private ObservableList\u003cString\u003e dates \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Creates a new CalorieStatsWindow."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param root Stage to use as the root of the CalorieStatsWindow."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public CalorieStatsWindow(Stage root) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Creates a new CalorieStatsWindow."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param dayList dayList from seedu.address.logic.Logic"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public CalorieStatsWindow(ObservableList\u003cDay\u003e dayList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert dayList !\u003d null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.dayList \u003d dayList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        barChart.setTitle(\"Daily Calorie Statistics\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        initialize(dayList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        setCalorieData(dayList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //ListChangeListener to check for any changes to the dayList and updates the line chart accordingly"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        dayList.addListener((ListChangeListener\u003cDay\u003e) (c -\u003e updateChart()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Initializes the X-Axis (dates from dayList) of Line Chart"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param dayList dayList from seedu.address.logic.Logic"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private void initialize(ObservableList\u003cDay\u003e dayList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert dayList !\u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String[] datesString \u003d dayList.stream().map(x -\u003e x.getDate().get().toString())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                .toArray(String[]::new);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        dates.addAll(Arrays.asList(datesString));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //Assign the dates as categories and add label for x-Axis"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        xAxis.setCategories(dates);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        xAxis.setLabel(\"Dates\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //Assign label to y-Axis"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        yAxis.setLabel(\"Calories (kcal)\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Sets the calorie data points to show the statistics for."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param dayList dayList from seedu.address.logic.Logic"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void setCalorieData(ObservableList\u003cDay\u003e dayList) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert dayList !\u003d null;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        XYChart.Series\u003cString, Integer\u003e calorieInSeries \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        XYChart.Series\u003cString, Integer\u003e calorieOutSeries \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        calorieInSeries.setName(\"Calorie In\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        calorieOutSeries.setName(\"Calorie Out\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //Get the calorie data of all the days."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        for (int i \u003d 0; i \u003c dayList.size(); i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            XYChart.Data\u003cString, Integer\u003e calorieInData \u003d new XYChart.Data\u003c\u003e(dates.get(i),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    dayList.get(i).getCalorieManager().getTotalInputCalorie());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            calorieInSeries.getData().add(calorieInData);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            //set the data nodes to allow display of values when the mouse hovers over it"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            calorieInData.setNode(new HoveredCalorieNode("
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    dayList.get((i \u003d\u003d 0) ? 0 : i - 1).getCalorieManager().getTotalInputCalorie(),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    dayList.get(i).getCalorieManager().getTotalInputCalorie(), true));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            XYChart.Data\u003cString, Integer\u003e calorieOutData \u003d new XYChart.Data\u003c\u003e(dates.get(i),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    dayList.get(i).getCalorieManager().getTotalOutputCalorie());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            calorieOutSeries.getData().add(calorieOutData);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            //set the data nodes to allow display of values when the mouse hovers over it"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            calorieOutData.setNode(new HoveredCalorieNode("
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    dayList.get((i \u003d\u003d 0) ? 0 : i - 1).getCalorieManager().getTotalOutputCalorie(),"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    dayList.get(i).getCalorieManager().getTotalOutputCalorie(), false));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        barChart.getData().add(calorieInSeries);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        barChart.getData().add(calorieOutSeries);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Updates the line chart when there is a change in dayList."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private void updateChart() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //clear all data points and xAxis"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        barChart.getData().clear();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert barChart.getData().isEmpty();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        dates.clear();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert dates.isEmpty();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //re-initialize the xAxis"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        initialize(dayList);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        xAxis.invalidateRange(dates);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //set the new data points"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        setCalorieData(dayList);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Shows the weight statistics window."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if this method is called on the primary stage."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        logger.fine(\"Showing calorie statistics.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 195
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CommanderBmiStatsWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.beans.binding.Bindings;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.chart.PieChart;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " * The controller for the commander overall BMI statistics window."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class CommanderBmiStatsWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(CommanderBmiStatsWindow.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final String FXML \u003d \"CommanderBMIStatsWindow.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private ObservableList\u003cPerson\u003e personList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private PieChart pieChart;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Creates a new CommanderBmiStatsWindow."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param root Stage to use as the root of the CommanderBmiStatsWindow."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public CommanderBmiStatsWindow(Stage root) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Creates a new CommanderBmiStatsWindow."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param personList personList from seedu.address.logic.Logic"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public CommanderBmiStatsWindow(ObservableList\u003cPerson\u003e personList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        pieChart.setTitle(\"Current Overall BMI Progress of Recruits\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        setBmiStats(personList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //ListChangeListener to check for any changes to the dayList and updates the line chart accordingly"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        personList.addListener((ListChangeListener\u003cPerson\u003e) (c -\u003e updateChart()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Collate the data of each person\u0027s bmi and classify it into different"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * categories for the Pie Chart."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private void setBmiStats(ObservableList\u003cPerson\u003e personList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert personList !\u003d null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.personList \u003d personList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        ObservableList\u003cPieChart.Data\u003e pieChartData \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        int lessThan23 \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        int lessThan27 \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        int lessThan30 \u003d 0;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        int moreThan30 \u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        for (Person p : personList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            if (p.getCurrentBmi() \u003c 23) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                lessThan23++;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            } else if (p.getCurrentBmi() \u003c 27) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                lessThan27++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            } else if (p.getCurrentBmi() \u003c 30) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                lessThan30++;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                moreThan30++;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        pieChartData.add(new PieChart.Data(\"\u003c 23\", lessThan23));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        pieChartData.add(new PieChart.Data(\"\u003c 27\", lessThan27));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        pieChartData.add(new PieChart.Data(\"\u003c 30\", lessThan30));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        pieChartData.add(new PieChart.Data(\"\u003e 30\", moreThan30));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        pieChartData.forEach(data -\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                data.nameProperty().bind("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        Bindings.concat("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                data.getName(), \" \", data.pieValueProperty(), \" People\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                )"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        );"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        pieChart.setData(pieChartData);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Updates the line chart when there is a change in dayList."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private void updateChart() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //clear all data points and xAxis"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        pieChart.getData().clear();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert pieChart.getData().isEmpty();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //set the new data points"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        setBmiStats(personList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Shows the weight statistics window."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if this method is called on the primary stage."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        logger.fine(\"Showing weight statistics.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 150
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/DayCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.control.ProgressBar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * An UI component that displays information of a {@code Day}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DayCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private static final String FXML \u003d \"DayListCard.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public final Day day;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Label date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Label weight;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Label totalCalorieIn;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Label totalCalorieOut;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Label surplus;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private ImageView isLosing;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private HBox profile;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private ProgressBar progress;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Image cross \u003d new Image(this.getClass().getResourceAsStream(\"/images/Cross.png\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Image tick \u003d new Image(this.getClass().getResourceAsStream(\"/images/tick.png\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Creates a {@code DayCard} with the given {@code Day} and index to display and the given {@code MainWindow}."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DayCard(Day day, int displayedIndex, MainWindow mainWindow) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager cm \u003d day.getCalorieManager();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        date.setText(\"Date: \" + day.getDate().get());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        weight.setText(\"Weight: \" + day.getWeight().value + \" kg\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        totalCalorieIn.setText(\"Total Calories In: \" + cm.getTotalInputCalorie() + \" calories\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        totalCalorieOut.setText(\"Total Calories Out: \" + cm.getTotalOutputCalorie() + \" calories\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        surplus.setText(\"Balance : \" + day.getBalance());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        isLosing.setImage(day.isLosing() ? tick : cross);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        progress.setProgress(day.getProgress());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.mainWindow \u003d mainWindow;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // Fills the calorie placeholders and updates the status bar when a DayCard is double clicked"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        cardPane.setOnMouseClicked(x -\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            displayCalories(displayedIndex - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            displayDate(day.getDate().get().toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Displays the list of calorie inputs and outputs."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param index the index of the day that was clicked."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void displayCalories(int index) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.mainWindow.updateCaloriePanelsWhenViewed(index);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Displays the date selected in the status bar."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param date the date string of the day that was clicked."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void displayDate(String date) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.mainWindow.setDateLabel(date);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (!(other instanceof DayCard)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        DayCard card \u003d (DayCard) other;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u0026\u0026 day.equals(card.day);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 37,
      "-": 50,
      "wayne987": 26,
      "junhui-phoon": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/DayListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Panel containing the list of days."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DayListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private static final String FXML \u003d \"DayListPanel.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(DayListPanel.class);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private ListView\u003cDay\u003e dayListView;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Creates a {@code DayListPanel} with the given {@code ObservableList} and given {@code MainWindow}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DayListPanel(ObservableList\u003cDay\u003e dayList, MainWindow mainWindow) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        dayListView.setItems(dayList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        dayListView.setCellFactory(listView -\u003e new DayListViewCell());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.mainWindow \u003d mainWindow;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        logger.info(\"DayListPanel created\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Day} using a {@code DayCard}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    class DayListViewCell extends ListCell\u003cDay\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        protected void updateItem(Day day, boolean empty) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            super.updateItem(day, empty);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (empty || day \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                setGraphic(new DayCard(day, getIndex() + 1, mainWindow).getRoot());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 15,
      "-": 33,
      "wayne987": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/HelpWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.Clipboard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.ClipboardContent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for a help page"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String USERGUIDE_URL \u003d \"https://ay2021s1-cs2103t-w11-3.github.io/tp/UserGuide.html\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"HelpWindow.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button copyButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label helpMessage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root Stage to use as the root of the HelpWindow."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow(Stage root) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        helpMessage.setText(HELP_MESSAGE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows the help window."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called on the primary stage."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Showing help page about the application.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * Copies the URL to the user guide to the clipboard."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    private void copyUrl() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        final ClipboardContent url \u003d new ClipboardContent();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        url.putString(USERGUIDE_URL);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        clipboard.setContent(url);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 101,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/HoveredCalorieNode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author jewelsea-adapted"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Adapted from https://gist.github.com/jewelsea/4681797 with modifications"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A node which displays a value when the mouse cursor hovers over it for calorie chart."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class HoveredCalorieNode extends StackPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new Hovered Node for the data point"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param priorValue the value of the previous data point"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param value the current value of the data point"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public HoveredCalorieNode(int priorValue, int value, boolean isCalorieIn) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        setPrefSize(10, 10);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        final Label label;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isCalorieIn) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            label \u003d createCalorieInDataThresholdLabel(priorValue, value);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            label \u003d createCalorieOutDataThresholdLabel(priorValue, value);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        //Displays the data value label when the mouse cursor hovers at the data node of the chart."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        setOnMouseEntered(new EventHandler\u003cMouseEvent\u003e() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            @Override public void handle(MouseEvent mouseEvent) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                getChildren().setAll(label);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                toFront();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        //Removes the data value label when the mouse cursor leaves at the data node of the chart."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        setOnMouseExited(new EventHandler\u003cMouseEvent\u003e() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            @Override public void handle(MouseEvent mouseEvent) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                getChildren().clear();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a label to display the value of the data node for calorie in."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param priorValue the data value of the previous node."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param value the data value of the current node in focus."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label createCalorieInDataThresholdLabel(int priorValue, int value) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        final Label label \u003d new Label(value + \"\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        label.getStyleClass().addAll(\"default-color0\", \"chart-line-symbol\", \"chart-series-line\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        label.setStyle(\"-fx-font-size: 20; -fx-font-weight: bold\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        if (priorValue \u003d\u003d 0 || priorValue \u003d\u003d value) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            //Value will be displayed in grey if there is no change between"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            //the prior and current value or the current node is the first node"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            //To indicate no change in calorie input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            label.setTextFill(Color.GRAY);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (value \u003c priorValue) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            //Value will be displayed in green if current value is smaller than prior value"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            //To indicate decrease in calorie input"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            label.setTextFill(Color.FORESTGREEN);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            //Value will be displayed in red if current value is greater than prior value"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            //To indicate increase in calorie input"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            label.setTextFill(Color.FIREBRICK);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        label.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return label;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a label to display the value of the data node for calorie out."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param priorValue the data value of the previous node."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param value the data value of the current node in focus."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label createCalorieOutDataThresholdLabel(int priorValue, int value) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        final Label label \u003d new Label(value + \"\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        label.getStyleClass().addAll(\"default-color1\", \"chart-line-symbol\", \"chart-series-line\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        label.setStyle(\"-fx-font-size: 20; -fx-font-weight: bold\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        if (priorValue \u003d\u003d 0 || priorValue \u003d\u003d value) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            //Value will be displayed in grey if there is no change between"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            //the prior and current value or the current node is the first node"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            //To indicate no change in calorie output"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            label.setTextFill(Color.GRAY);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (value \u003e priorValue) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            //Value will be displayed in green if current value is bigger than prior value"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            //To indicate increase in calorie output"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            label.setTextFill(Color.FORESTGREEN);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            //Value will be displayed in red if current value is greater than prior value"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            //To indicate decrease in calorie output"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            label.setTextFill(Color.FIREBRICK);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        label.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        return label;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 100,
      "junhui-phoon": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/HoveredWeightNode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * @@author jewelsea-adapted"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Adapted from https://gist.github.com/jewelsea/4681797 with modifications"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A node which displays a value when the mouse cursor hovers over it for weight chart."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class HoveredWeightNode extends StackPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new Hovered Node for the data point"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param priorValue the value of the previous data point"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param value the current value of the data point"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public HoveredWeightNode(int priorValue, int value) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        setPrefSize(10, 10);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        final Label label \u003d createDataThresholdLabel(priorValue, value);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        //Displays the data value label when the mouse cursor hovers at the data node of the chart."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        setOnMouseEntered(new EventHandler\u003cMouseEvent\u003e() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            @Override public void handle(MouseEvent mouseEvent) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                getChildren().setAll(label);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                toFront();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        //Removes the data value label when the mouse cursor leaves at the data node of the chart."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        setOnMouseExited(new EventHandler\u003cMouseEvent\u003e() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            @Override public void handle(MouseEvent mouseEvent) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                getChildren().clear();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a label to display the value of the data node for weight."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param priorValue the data value of the previous node."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param value the data value of the current node in focus."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label createDataThresholdLabel(int priorValue, int value) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        final Label label \u003d new Label(value + \"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        label.getStyleClass().addAll(\"default-color0\", \"chart-line-symbol\", \"chart-series-line\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        label.setStyle(\"-fx-font-size: 20; -fx-font-weight: bold\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        if (priorValue \u003d\u003d 0 || priorValue \u003d\u003d value) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            //Value will be displayed in grey if there is no change between"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            //the prior and current value or the current node is the first node"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            //To indicate no change in weight"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            label.setTextFill(Color.GRAY);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (value \u003c priorValue) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            //Value will be displayed in green if current value is smaller than prior value"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            //To indicate weight loss"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            label.setTextFill(Color.FORESTGREEN);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            //Value will be displayed in red if current value is greater than prior value"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            //To indicate weight gain"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            label.setTextFill(Color.FIREBRICK);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        label.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return label;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author"
      }
    ],
    "authorContributionMap": {
      "-": 64,
      "junhui-phoon": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextInputControl;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    // Zero-based"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private int indexOfDayCurrentlyShowingCalories;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private DayListPanel dayListPanel;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private CalorieInputListPanel calorieInputListPanel;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private CalorieOutputListPanel calorieOutputListPanel;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private HelpWindow helpWindow;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private WeightStatsWindow weightStatsWindow;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private CalorieStatsWindow calorieStatsWindow;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private StatusBarDaySelected statusBarDaySelected;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private ProfileListPanel profileListPanel;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private ProfileCardPanel profileCardPanel;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private CommanderBmiStatsWindow commanderBmiStatsWindow;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private MenuItem helpMenuItem;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private StackPane statusbarDaySelectedPlaceholder;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private StackPane dayListPanelPlaceholder;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private StackPane calorieInputListPanelPlaceholder;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private StackPane calorieOutputListPanelPlaceholder;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private StackPane statusBarPlaceholder;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private MenuItem weightStatsMenuItem;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private MenuItem calorieStatsMenuItem;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private MenuItem allStatsMenuItem;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private StackPane profileListPlaceholder;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private StackPane profileCardPlaceholder;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerators();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        weightStatsWindow \u003d new WeightStatsWindow(logic.getFilteredDayList());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        calorieStatsWindow \u003d new CalorieStatsWindow(logic.getFilteredDayList());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        commanderBmiStatsWindow \u003d new CommanderBmiStatsWindow(logic.getFilteredPersonList());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        indexOfDayCurrentlyShowingCalories \u003d -1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerators() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the accelerator of a MenuItem."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyCombination the KeyCombination value of the accelerator"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        menuItem.setAccelerator(keyCombination);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "         * TODO: the code below can be removed once the bug reported here"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "         * https://bugs.openjdk.java.net/browse/JDK-8131666"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "         * is fixed in later version of SDK."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "         * According to the bug report, TextInputControl (TextField, TextArea) will"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "         * consume function-key events. Because CommandBox contains a TextField, and"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "         * not work when the focus is in them because the key event is consumed by"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "         * the TextInputControl(s)."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "         * For now, we add following event filter to capture such key events and open"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "         * help window purposely so to support accelerators even when focus is"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "         * in CommandBox or ResultDisplay."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                menuItem.getOnAction().handle(new ActionEvent());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Updates the calorie panels with calorie values of the day that is viewed."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param indexOfDayViewed the index (zeroBased) of the day that is viewed"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void updateCaloriePanelsWhenViewed(int indexOfDayViewed) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        indexOfDayCurrentlyShowingCalories \u003d indexOfDayViewed;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieInputListPanel.update(logic.getFilteredDayList().get(indexOfDayViewed).getCalorieManager()"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                .getCalorieInputList());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieOutputListPanel.update(logic.getFilteredDayList().get(indexOfDayViewed).getCalorieManager()"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                .getCalorieOutputList());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Updates the calorie panels when a day is deleted."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param indexOfDayDeleted the index (zeroBased) of the day that is deleted."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    void updateCaloriePanelsWhenDeleted(int indexOfDayDeleted) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        boolean isCurrDayShowingDeleted \u003d indexOfDayDeleted \u003d\u003d indexOfDayCurrentlyShowingCalories;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        boolean isDayDeletedAboveCurrDayShowing \u003d indexOfDayDeleted \u003c indexOfDayCurrentlyShowingCalories;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (isCurrDayShowingDeleted) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            boolean isLastDayBeingDeleted \u003d indexOfDayDeleted \u003d\u003d logic.getFilteredDayList().size();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (isLastDayBeingDeleted) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                clearCaloriePanels();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                calorieInputListPanel.update(logic.getFilteredDayList().get(indexOfDayDeleted).getCalorieManager()"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        .getCalorieInputList());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                calorieOutputListPanel.update(logic.getFilteredDayList().get(indexOfDayDeleted).getCalorieManager()"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        .getCalorieOutputList());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } else if (isDayDeletedAboveCurrDayShowing) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            indexOfDayCurrentlyShowingCalories--;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Clears the calorie panels."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    void clearCaloriePanels() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        indexOfDayCurrentlyShowingCalories \u003d -1;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieInputListPanel.clear();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieOutputListPanel.clear();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Clear the Profile Panels."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    void clearProfilePanels() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileListPanel.clear();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileCardPanel.clear();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Sets the date label in the status bar."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param date the date string to be set."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    void setDateLabel(String date) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        statusBarDaySelected.setDateSelectedLabel(date);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Updates the date label when a day is deleted."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param indexOfDayDeleted the index (zeroBased) of the day that is deleted."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    void updateDateLabelWhenDelete(int indexOfDayDeleted) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        boolean isCurrDayShowingDeleted \u003d indexOfDayDeleted \u003d\u003d indexOfDayCurrentlyShowingCalories;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (isCurrDayShowingDeleted) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            boolean isLastDayBeingDeleted \u003d indexOfDayDeleted \u003d\u003d logic.getFilteredDayList().size();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (isLastDayBeingDeleted) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                clearDateLabel();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                String dateStringOfNextDay \u003d logic.getFilteredDayList().get(indexOfDayDeleted)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        .getDate().get().toString();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                setDateLabel(dateStringOfNextDay);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Clears the date label."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    void clearDateLabel() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        statusBarDaySelected.clear();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Updates the Profile Panels when there is a change in login or profile list."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    void updateProfilePanels() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileCardPanel.update(logic.getMyFitnessBuddy().getPerson());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileListPanel.update(logic.getFilteredPersonList());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        statusBarDaySelected \u003d new StatusBarDaySelected();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        statusbarDaySelectedPlaceholder.getChildren().add(statusBarDaySelected.getRoot());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileCardPanel \u003d new ProfileCardPanel();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileCardPlaceholder.getChildren().add(profileCardPanel.getRoot());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        profileListPanel \u003d new ProfileListPanel(logic.getFilteredPersonList());"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileListPlaceholder.getChildren().add(profileListPanel.getRoot());"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        dayListPanel \u003d new DayListPanel(logic.getFilteredDayList(), this);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        dayListPanelPlaceholder.getChildren().add(dayListPanel.getRoot());"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieInputListPanel \u003d new CalorieInputListPanel();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieInputListPanelPlaceholder.getChildren().add(calorieInputListPanel.getRoot());"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieOutputListPanel \u003d new CalorieOutputListPanel();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        calorieOutputListPanelPlaceholder.getChildren().add(calorieOutputListPanel.getRoot());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getMyFitnessBuddyFilePath());"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        statusBarPlaceholder.getChildren().add(statusBarFooter.getRoot());"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandBox commandBox \u003d new CommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "     * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.show();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.focus();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Opens the weight stats window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void handleWeightStats() {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (!weightStatsWindow.isShowing()) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            weightStatsWindow.show();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            weightStatsWindow.focus();"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Opens the calorie stats window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void handleCalorieStats() {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (!calorieStatsWindow.isShowing() \u0026\u0026 !weightStatsWindow.isShowing()) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            calorieStatsWindow.show();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        } else if (!calorieStatsWindow.isShowing() \u0026\u0026 weightStatsWindow.isShowing()) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            calorieStatsWindow.show();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            //prevent both windows stacking over each other when opened at the same time"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            calorieStatsWindow.getRoot().setY(weightStatsWindow.getRoot().getY() + 100);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            calorieStatsWindow.focus();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Opens the commander stats window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void handleCommanderStats() {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (!commanderBmiStatsWindow.isShowing()) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            commanderBmiStatsWindow.show();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            commanderBmiStatsWindow.focus();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Opens both stats window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void handleAllStats() {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        handleWeightStats();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        handleCalorieStats();"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Removes the items shown in the calorie lists if any."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void handleClear() {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        clearDateLabel();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        clearCaloriePanels();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        clearProfilePanels();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Removes the items shown in the calorie lists if the day being shown is deleted."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param index index of the item that is deleted."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void handleDelete(int index) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        updateDateLabelWhenDelete(index);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        updateCaloriePanelsWhenDeleted(index);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Updates the calorie lists and status bar when a view command is used."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     *"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * @param indexOfDayToView index of the item to be viewed."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void handleView(int indexOfDayToView) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        updateCaloriePanelsWhenViewed(indexOfDayToView);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        setDateLabel(logic.getFilteredDayList().get(indexOfDayToView).getDate().get().toString());"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "                (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        weightStatsWindow.hide();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        calorieStatsWindow.hide();"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        commanderBmiStatsWindow.hide();"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DayListPanel getDayListPanel() {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return dayListPanel;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult commandResult \u003d logic.execute(commandText);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Result: \" + commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isShowHelp()) {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                handleHelp();"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isExit()) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                handleExit();"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            if (commandResult.isShowAllStats()) {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                handleAllStats();"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            if (commandResult.isShowCalorieStats()) {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                handleCalorieStats();"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            if (commandResult.isShowWeightStats()) {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                handleWeightStats();"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (commandResult.isClear()) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                handleClear();"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (commandResult.isDelete()) {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                handleDelete(commandResult.getIndexDelete() - 1);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            if (commandResult.isProfileChanged()) {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                updateProfilePanels();"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                clearDateLabel();"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                clearCaloriePanels();"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            if (commandResult.isView()) {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                handleView(commandResult.getIndexView() - 1);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            if (commandResult.isShowCommanderStats()) {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                handleCommanderStats();"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            return commandResult;"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Invalid command: \" + commandText);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 128,
      "-": 190,
      "wayne987": 27,
      "junhui-phoon": 120,
      "jiaax": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ProfileCard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.control.ProgressBar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " * An UI component that displays information of a {@code Profile} from given {@code Person}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class ProfileCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    //displayed Index fx:id is renamed -\u003e fx:id\u003dindex to remove ambiguity with id of Profile"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final String FXML \u003d \"ProfileListCard.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private static final double LENGTH \u003d 200;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public final Profile profile;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Label index;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Label targetWeight;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Label height;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private ImageView profilePicture;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Image user \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            .getResourceAsStream(\"/images/ProfilePicture/\" + \"1111\" + \".png\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Image def \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private ProgressBar progress;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Label bmi;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Creates a {@code ProfileCard} with the given {@code Person} and index to display."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public ProfileCard(Person person, int displayedIndex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.profile \u003d person.getProfile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        index.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (profile.getName().toString().length() \u003e\u003d 15) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            name.setText(profile.getName().toString().split(\" \")[0]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            name.setText(profile.getName().toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        id.setText(\"ID: \" + profile.getId().toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        targetWeight.setText(\"Target Weight: \" + profile.getTargetWeight().toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        height.setText(\"Height: \" + profile.getHeight().toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String path \u003d \"/images/ProfilePicture/\" + profile.getId().toString() + \".png\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            user \u003d new Image(this.getClass().getResourceAsStream(path));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            user \u003d def;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        profilePicture.setImage(user);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        circleClip(profilePicture);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!person.isDefaultProfile()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            progress.setProgress(person.getProgress());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            bmi.setText(\"BMI: \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    + Math.round(person.getCurrentBmi() * 100.0) / 100.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            progress.disableProperty();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            bmi.setText(\"BMI: DEFAULT\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Creates a {@code ProfileCard} with the given {@code Person}."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * To display the current loaded profile."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public ProfileCard(Person person) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.profile \u003d person.getProfile();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        index.setText(\"\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        name.setText(profile.getName().toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        name.setTranslateX(-5);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        id.setText(\"ID: \" + profile.getId().toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        targetWeight.setText(\"Target Weight: \" + profile.getTargetWeight().toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        height.setText(\"Height: \" + profile.getHeight().toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String path \u003d \"/images/ProfilePicture/\" + profile.getId().toString() + \".png\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            user \u003d new Image(this.getClass().getResourceAsStream(path));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            user \u003d def;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        profilePicture.setImage(user);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        circleClip(profilePicture);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (!person.isDefaultProfile()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            progress.setProgress(person.getProgress());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            bmi.setText(\"BMI: \""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    + Math.round(person.getCurrentBmi() * 100.0) / 100.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            progress.disableProperty();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            bmi.setText(\"BMI: DEFAULT\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Clips the image into a circle"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private void circleClip(ImageView imageView) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Circle clip \u003d new Circle(imageView.getFitWidth());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        clip.setCenterX(0.5);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        clip.setCenterY(0.5);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        clip.setRadius(0.5);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        imageView.setClip(clip);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //short circuit if same object"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //instanceof handles nulls"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        if (!(other instanceof ProfileCard)) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //state check"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        ProfileCard card \u003d (ProfileCard) other;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return index.getText().equals(card.index.getText())"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                \u0026\u0026 profile.equals(card.profile);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 66,
      "junhui-phoon": 77
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ProfileCardPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " * Panel containing the current loaded Profile."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class ProfileCardPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String FXML \u003d \"ProfileCardPanel.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(ProfileCardPanel.class);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private ListView\u003cPerson\u003e profileCardView;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Creates an empty {@code ProfileCardPanel}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public ProfileCardPanel() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        logger.info(\"ProfileCardPanel created\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Updates the {@code ProfileCardPanel} with the given {@code Person}."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void update(Person person) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        ObservableList\u003cPerson\u003e list \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        list.add(person);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileCardView.setItems(list);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileCardView.setCellFactory(listView -\u003e new ProfileCardViewCell());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Clears the current profile panel."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileCardView.setItems(FXCollections.observableArrayList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileCardView.setCellFactory(listView -\u003e new ProfileCardViewCell());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Input} using a {@code CalorieInputCard}."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    class ProfileCardViewCell extends ListCell\u003cPerson\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        protected void updateItem(Person person, boolean empty) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            super.updateItem(person, empty);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            if (empty || person \u003d\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                setGraphic(new ProfileCard(person).getRoot());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 68
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ProfileListPanel.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " * Panel containing a list of Profiles from Persons."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class ProfileListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String FXML \u003d \"ProfileListPanel.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(ProfileListPanel.class);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private ListView\u003cPerson\u003e profileListView;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Creates a {@code ProfileListPanel} with the given {@code ObservableList}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public ProfileListPanel(ObservableList\u003cPerson\u003e personList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        update(personList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        logger.info(\"ProfileListPanel created\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Clears the profile list panel."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileListView.setItems(FXCollections.observableArrayList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileListView.setCellFactory(listView -\u003e new ProfileListViewCell());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Updates the {@code ProfileListPanel} with the given {@code ObservableList}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void update(ObservableList\u003cPerson\u003e personList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileListView.setItems(personList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        profileListView.setCellFactory(listView -\u003e new ProfileListViewCell());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Profile} using a {@code ProfileCard}."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    class ProfileListViewCell extends ListCell\u003cPerson\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        protected void updateItem(Person person, boolean empty) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            super.updateItem(person, empty);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            if (empty || person \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                setGraphic(new ProfileCard(person, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 66
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/StatusBarDaySelected.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class StatusBarDaySelected extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private static final String FXML \u003d \"StatusBarDaySelected.fxml\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Label dateSelectedLabel;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Creates a {@code StatusBarFooter} with the given {@code Path}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public StatusBarDaySelected() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDateSelectedLabel(String dateSelected) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        dateSelectedLabel.setText(\"   Date selected: \" + dateSelected);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        dateSelectedLabel.setText(\"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 29
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UiManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiManager implements Ui {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/MyFitnessBuddy_icon.png\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UiManager} with the given {@code Logic}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiManager(Logic logic) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow \u003d new MainWindow(primaryStage, logic);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/ArmyTheme.css\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 87,
      "junhui-phoon": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/WeightStatsWindow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.ListChangeListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.chart.CategoryAxis;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.chart.LineChart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.chart.NumberAxis;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.scene.chart.XYChart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " * The controller for the weight statistics window."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class WeightStatsWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(WeightStatsWindow.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final String FXML \u003d \"WeightStatsWindow.fxml\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private ObservableList\u003cDay\u003e dayList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private LineChart\u003cString, Integer\u003e lineChart;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private CategoryAxis xAxis;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private NumberAxis yAxis;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private ObservableList\u003cString\u003e dates \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Creates a new WeightStatsWindow."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param root Stage to use as the root of the WeightStatsWindow."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public WeightStatsWindow(Stage root) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Creates a new WeightStatsWindow."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param dayList dayList from seedu.address.logic.Logic"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public WeightStatsWindow(ObservableList\u003cDay\u003e dayList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert dayList !\u003d null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.dayList \u003d dayList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        lineChart.setTitle(\"Daily Weight Statistics\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        initialize(dayList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        setWeightData(dayList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //ListChangeListener to check for any changes to the dayList and updates the line chart accordingly"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        dayList.addListener((ListChangeListener\u003cDay\u003e) (c -\u003e updateChart()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Initializes the X-Axis (dates from dayList) of Line Chart."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param dayList dayList from seedu.address.logic.Logic"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private void initialize(ObservableList\u003cDay\u003e dayList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert dayList !\u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String[] datesString \u003d dayList.stream().map(x -\u003e x.getDate().get().toString())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                .toArray(String[]::new);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        dates.addAll(Arrays.asList(datesString));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //Assign the dates as categories and label to x-Axis."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        xAxis.setCategories(dates);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        xAxis.setLabel(\"Dates\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //Assign label to y-Axis"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        yAxis.setLabel(\"Weight (kg)\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Sets the weight data points to show the statistics for."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @param dayList dayList from seedu.address.logic.Logic"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void setWeightData(ObservableList\u003cDay\u003e dayList) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert dayList !\u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        XYChart.Series\u003cString, Integer\u003e weightsSeries \u003d new XYChart.Series\u003c\u003e();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        weightsSeries.setName(\"Weight\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //Get the weight data from all the days in dayList."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        for (int i \u003d 0; i \u003c dayList.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            XYChart.Data\u003cString, Integer\u003e weightData \u003d new XYChart.Data\u003c\u003e(dates.get(i),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    Integer.parseInt(dayList.get(i).getWeight().value));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            weightsSeries.getData().add(weightData);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            //set the data nodes to allow display of values when the mouse hovers over it"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            weightData.setNode(new HoveredWeightNode("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    Integer.parseInt(dayList.get((i \u003d\u003d 0) ? 0 : i - 1).getWeight().value),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    Integer.parseInt(dayList.get(i).getWeight().value)));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        lineChart.getData().add(weightsSeries);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Updates the line chart when there is a change in dayList."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private void updateChart() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //clear all data points and xAxis"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        lineChart.getData().clear();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert lineChart.getData().isEmpty();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        dates.clear();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assert dates.isEmpty();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //re-initialize the xAxis"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        initialize(dayList);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        xAxis.invalidateRange(dates);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //set the new data points"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        setWeightData(dayList);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Shows the weight statistics window."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if this method is called on the primary stage."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *         if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        logger.fine(\"Showing weight statistics.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 181
    }
  },
  {
    "path": "src/main/resources/view/ArmyTheme.css",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ".background {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 20%);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: #383838; /* Used in the default.html file */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ".label {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #555555;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.9;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ".label-bright {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ".label-header {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 32pt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ".text-field {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 12pt;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ".tab-pane {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ".tab-pane .tab-header-area {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-min-height: 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-max-height: 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-base: #4b5320;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-control-inner-background: #4b5320;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: #4b5320;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-table-cell-border-color: transparent;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-table-header-border-color: transparent;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 5;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header-background {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header, .table-view .filler {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-size: 35;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0 0 1 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        derive(-fx-base, 80%)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0 10 1 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header .label {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 20pt;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-alignment: center-left;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view:focused .table-row-cell:filled:focused:selected {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ".split-pane:horizontal .split-pane-divider {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 20%);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: transparent transparent transparent #4d4d4d;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ".split-pane {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 20%);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ".list-view {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 20%);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-label-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-graphic-text-gap : 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:even {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    -fx-background-image: url(\"background.png\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:odd {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    -fx-background-image: url(\"backgroundEven.png\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:selected {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #424d5f;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:selected #cardPane {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #3e7b91;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell .label {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ".cell_big_label {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 16px;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    -fx-text-fill: #FFFFFF;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ".title_panel {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    -fx-text-fill: #FFFFFF;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ".title_date {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        -fx-font-family: \"Segoe UI Semibold\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        -fx-font-size: 16px;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ".cell_small_label {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13px;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #010504;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": ".img {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wayne987"
        },
        "content": "  border-radius: 50%;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ".stack-pane {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     -fx-background-color: derive(#4b5320, 20%);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ".pane-with-border {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     -fx-background-color: derive(#667320, 20%);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     -fx-border-color: derive(#667320, 10%);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     -fx-border-top-width: 1px;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 30%);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ".result-display {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ".result-display .label {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: black !important;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar .label {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 4px;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-pref-height: 30px;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar-with-border {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 30%);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-border-color: derive(#4b5320, 25%);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1px;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar-with-border .label {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ".grid-pane {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 30%);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-border-color: derive(#4b5320, 30%);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1px;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ".grid-pane .stack-pane {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 30%);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ".context-menu {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 50%);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ".context-menu .label {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ".menu-bar {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 20%);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ".menu-bar .label {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.9;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ".menu .left-container {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: black;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": " * Metro style Push Button"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " * Author: Pedro Duque Vieira"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": " * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ".button {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 5 22 5 22;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #e2e2e2;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 2;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 0;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: #4b5320;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #d8d8d8;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0 0 0 0, 0, 1, 2;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ".button:hover {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3a3a3a;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ".button:pressed, .button:default:hover:pressed {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "  -fx-background-color: white;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "  -fx-text-fill: #4b5320;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ".button:focused {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: white, white;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1, 1;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-style: solid, segments(1, 1);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 0, 0;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 1 1 1 1, 0;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ".button:disabled, .button:default:disabled {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.4;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: #4b5320;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default:hover {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(-fx-focus-color, 30%);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: #4b5320;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane \u003e *.button-bar \u003e *.container {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: #4b5320;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane \u003e *.label.content {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 14px;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-weight: bold;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane:header *.header-panel {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 25%);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane:header *.header-panel *.label {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-style: italic;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-fill: white;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 20%);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .thumb {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 50%);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 3;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-button, .scroll-bar .decrement-button {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-shape: \" \";"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 1 8 1 8;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 8 1 8 1;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ".split-pane:vertical \u003e .split-pane-divider {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#4b5320, 20%);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-border-color: transparent transparent transparent #4d4d4d;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "#cardPane {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTypeLabel {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11px;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #F70D1A;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTextField {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent #383838 transparent #383838;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #383838 #383838 #ffffff #383838;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-family: \"Segoe UI Light\";"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "#filterField, #personListPanel, #personWebpage {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "#resultDisplay .content {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    -fx-background-image: url(\"background.png\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 0;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "#tags {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-hgap: 7;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-vgap: 3;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "#tags .label {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3e7b91;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 1 3 1 3;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 2;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 2;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wayne987"
        },
        "content": ".bmi_label {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: #a88932;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ethanso56": 13,
      "-": 323,
      "wayne987": 12,
      "junhui-phoon": 31
    }
  },
  {
    "path": "src/main/resources/view/CalorieInputListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003cLabel fx:id\u003d\"time\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cLabel fx:id\u003d\"food\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$weight\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cLabel fx:id\u003d\"calorieCount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$totalCalorieIn\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 33
    }
  },
  {
    "path": "src/main/resources/view/CalorieInputListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003cLabel text\u003d\"Calorie Inputs\" styleClass\u003d\"title_panel\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003cListView fx:id\u003d\"calorieInputListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 10
    }
  },
  {
    "path": "src/main/resources/view/CalorieOutputListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003cLabel fx:id\u003d\"time\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cLabel fx:id\u003d\"exercise\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$weight\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cLabel fx:id\u003d\"calorieCount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$totalCalorieIn\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 33
    }
  },
  {
    "path": "src/main/resources/view/CalorieOutputListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003cLabel text\u003d\"Calorie Outputs\" styleClass\u003d\"title_panel\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003cListView fx:id\u003d\"calorieOutputListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 10
    }
  },
  {
    "path": "src/main/resources/view/CalorieStatsWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.chart.BarChart?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.chart.CategoryAxis?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.chart.NumberAxis?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003cfx:root minHeight\u003d\"500.0\" minWidth\u003d\"500.0\" title\u003d\"Calorie Statistics\" type\u003d\"Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003cImage url\u003d\"@/images/stats_icon.png\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003cScene stylesheets\u003d\"@DarkChartTheme.css\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cAnchorPane prefHeight\u003d\"450.0\" prefWidth\u003d\"620.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "               \u003cBarChart fx:id\u003d\"barChart\" layoutX\u003d\"49.0\" layoutY\u003d\"25.0\" prefHeight\u003d\"450.0\" prefWidth\u003d\"620.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                 \u003cxAxis\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                   \u003cCategoryAxis side\u003d\"BOTTOM\" fx:id\u003d\"xAxis\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                 \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                 \u003cyAxis\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                   \u003cNumberAxis fx:id\u003d\"yAxis\" side\u003d\"LEFT\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                 \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "               \u003c/BarChart\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003c/children\u003e\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 30
    }
  },
  {
    "path": "src/main/resources/view/CommanderBMIStatsWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.chart.PieChart?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003cfx:root minHeight\u003d\"500.0\" minWidth\u003d\"500.0\" title\u003d\"Recruit Overall BMI Statistics\" type\u003d\"Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003cImage url\u003d\"@/images/stats_icon.png\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003cScene stylesheets\u003d\"@DarkChartTheme.css\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cAnchorPane prefHeight\u003d\"450.0\" prefWidth\u003d\"620.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "               \u003cPieChart fx:id\u003d\"pieChart\" layoutX\u003d\"60.0\" layoutY\u003d\"25.0\" prefHeight\u003d\"450.0\" prefWidth\u003d\"620.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003c/children\u003e\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 21
    }
  },
  {
    "path": "src/main/resources/view/DarkChartTheme.css",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ".chart {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#3c3e3f, 20%);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ".chart-plot-background {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: derive(#3c3e3f, 20%);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ".chart-legend {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ".chart-legend-item {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ".axis {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-tick-label-fill: #ffffff;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ".axis-label {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ".chart-title {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ".chart-pie-label {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    -fx-fill: #ffffff;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 31
    }
  },
  {
    "path": "src/main/resources/view/DayListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.control.ProgressBar?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u003cImageView fx:id\u003d\"isLosing\" fitHeight\u003d\"15\" fitWidth\u003d\"15\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cLabel fx:id\u003d\"weight\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$weight\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cLabel fx:id\u003d\"totalCalorieIn\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$totalCalorieIn\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cLabel fx:id\u003d\"totalCalorieOut\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$totalCalorieOut\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cLabel fx:id\u003d\"surplus\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$surplus\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cProgressBar fx:id\u003d\"progress\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "      \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "      \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wayne987": 43
    }
  },
  {
    "path": "src/main/resources/view/DayListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "  \u003cLabel text\u003d\"Days\" styleClass\u003d\"title_panel\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "  \u003cListView fx:id\u003d\"dayListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ethanso56": 2,
      "-": 7,
      "wayne987": 3
    }
  },
  {
    "path": "src/main/resources/view/Extensions.css",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ".error {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:empty {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Empty cells will not have alternating colours */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ".tag-selector {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: white;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 3;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ".tooltip-text {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "wayne987": 1
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.SplitPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003cfx:root maxHeight\u003d\"750\" maxWidth\u003d\"1024.0\" minHeight\u003d\"750\" minWidth\u003d\"1024.0\" onCloseRequest\u003d\"#handleExit\" resizable\u003d\"false\" title\u003d\"My Fitness Buddy\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cicons\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cImage url\u003d\"@/images/MyFitnessBuddy_icon.png\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/icons\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003cURL value\u003d\"@ArmyTheme.css\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "      \u003cVBox prefHeight\u003d\"500.0\" prefWidth\u003d\"450.0\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "               \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Statistics\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                 \u003citems\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                     \u003cMenuItem fx:id\u003d\"allStatsMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleAllStats\" text\u003d\"Show All Stats\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                   \u003cMenuItem fx:id\u003d\"weightStatsMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleWeightStats\" text\u003d\"Show Weight Stats\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                     \u003cMenuItem fx:id\u003d\"calorieStatsMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCalorieStats\" text\u003d\"Show Calorie Stats\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                 \u003c/items\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "               \u003c/Menu\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003cStackPane fx:id\u003d\"statusbarDaySelectedPlaceholder\" prefHeight\u003d\"5.0\" prefWidth\u003d\"505.0\" VBox.vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003cSplitPane dividerPositions\u003d\"0.29797979797979796, 0.5, 0.5\" prefHeight\u003d\"540.0\" prefWidth\u003d\"340.0\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "          \u003citems\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"210.0\" prefHeight\u003d\"330.0\" prefWidth\u003d\"245.0\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                     \u003cchildren\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        \u003cSplitPane dividerPositions\u003d\"0.3\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"330.0\" prefWidth\u003d\"210.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                          \u003citems\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                            \u003cAnchorPane maxHeight\u003d\"180.0\" minHeight\u003d\"180.0\" minWidth\u003d\"208.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"208.0\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                    \u003cVBox fx:id\u003d\"profileCard\" minWidth\u003d\"340\" prefHeight\u003d\"160.0\" prefWidth\u003d\"208.0\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                       \u003cpadding\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                          \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                       \u003c/padding\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                          \u003cStackPane fx:id\u003d\"profileCardPlaceholder\" prefHeight\u003d\"308.0\" prefWidth\u003d\"394.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                 \u003c/children\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                              \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                            \u003cAnchorPane minHeight\u003d\"218.0\" minWidth\u003d\"208.0\" prefHeight\u003d\"100.0\" prefWidth\u003d\"160.0\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                    \u003cVBox fx:id\u003d\"profileList\" minWidth\u003d\"340\" prefHeight\u003d\"160.0\" prefWidth\u003d\"208.0\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                       \u003cpadding\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                          \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                       \u003c/padding\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                       \u003cchildren\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                          \u003cStackPane fx:id\u003d\"profileListPlaceholder\" prefHeight\u003d\"308.0\" prefWidth\u003d\"394.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                       \u003c/children\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                                 \u003c/children\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                              \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                          \u003c/items\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        \u003c/SplitPane\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                     \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                  \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"210.0\" prefHeight\u003d\"330.0\" prefWidth\u003d\"245.0\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003cVBox fx:id\u003d\"dayList\" minWidth\u003d\"340\" prefHeight\u003d\"158.0\" prefWidth\u003d\"348.0\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                  \u003cpadding\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                  \u003c/padding\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                  \u003cStackPane fx:id\u003d\"dayListPanelPlaceholder\" prefHeight\u003d\"308.0\" prefWidth\u003d\"394.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"210.0\" prefHeight\u003d\"330.0\" prefWidth\u003d\"245.0\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003cVBox fx:id\u003d\"inputList\" minWidth\u003d\"340\" prefHeight\u003d\"158.0\" prefWidth\u003d\"348.0\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                  \u003cpadding\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                  \u003c/padding\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                  \u003cStackPane fx:id\u003d\"calorieInputListPanelPlaceholder\" prefHeight\u003d\"308.0\" prefWidth\u003d\"394.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"210.0\" prefHeight\u003d\"330.0\" prefWidth\u003d\"245.0\"\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "              \u003cchildren\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003cVBox fx:id\u003d\"outputList\" minWidth\u003d\"340\" prefHeight\u003d\"158.0\" prefWidth\u003d\"348.0\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003cpadding\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/padding\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                  \u003cStackPane fx:id\u003d\"calorieOutputListPanelPlaceholder\" prefHeight\u003d\"308.0\" prefWidth\u003d\"394.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "              \u003c/children\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "          \u003c/items\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003c/SplitPane\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" minHeight\u003d\"35\" prefHeight\u003d\"30.0\" prefWidth\u003d\"505.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"125.0\" minHeight\u003d\"100.0\" prefHeight\u003d\"120.0\" prefWidth\u003d\"450.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        \u003cStackPane fx:id\u003d\"statusBarPlaceholder\" prefHeight\u003d\"5.0\" prefWidth\u003d\"505.0\" VBox.vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 32,
      "-": 44,
      "wayne987": 2,
      "junhui-phoon": 49
    }
  },
  {
    "path": "src/main/resources/view/ProfileCardPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cLabel styleClass\u003d\"title_panel\" text\u003d\"Current Profile:\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cListView fx:id\u003d\"profileCardView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 10
    }
  },
  {
    "path": "src/main/resources/view/ProfileListCard.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.control.ProgressBar?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        \u003cHBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u003cInsets bottom\u003d\"1.0\" left\u003d\"1.0\" right\u003d\"1.0\" top\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                \u003cLabel fx:id\u003d\"index\" styleClass\u003d\"cell_big_label\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$id\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cLabel fx:id\u003d\"targetWeight\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$targetWeight\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cLabel fx:id\u003d\"height\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$height\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cProgressBar fx:id\u003d\"progress\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         \u003cLabel fx:id\u003d\"bmi\" styleClass\u003d\"bmi_label\" text\u003d\"\\$BMI\" translateX\u003d\"5.0\" translateY\u003d\"35.0\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cImageView fx:id\u003d\"profilePicture\" fitHeight\u003d\"1.0\" fitWidth\u003d\"2.0\" preserveRatio\u003d\"true\" scaleX\u003d\"60.0\" scaleY\u003d\"60.0\" translateX\u003d\"-2.0\" translateY\u003d\"-19.0\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "               \u003cInsets /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cimage\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "               \u003cImage url\u003d\"@../images/ProfilePicture/1111.png\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003c/image\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u003cInsets bottom\u003d\"1.0\" left\u003d\"1.0\" right\u003d\"1.0\" top\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "      \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "         \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "      \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "wayne987": 29,
      "junhui-phoon": 30
    }
  },
  {
    "path": "src/main/resources/view/ProfileListPanel.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cLabel text\u003d\"Profiles\" styleClass\u003d\"title_panel\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cListView fx:id\u003d\"profileListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 10
    }
  },
  {
    "path": "src/main/resources/view/ResultDisplay.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/main/resources/view/StatusBarDaySelected.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003cLabel fx:id\u003d\"dateSelectedLabel\" styleClass\u003d\"title_date\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 12
    }
  },
  {
    "path": "src/main/resources/view/WeightStatsWindow.fxml",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.chart.CategoryAxis?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.chart.LineChart?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.chart.NumberAxis?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003cfx:root minHeight\u003d\"500.0\" minWidth\u003d\"500.0\" title\u003d\"Weight Statistics\" type\u003d\"Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003cImage url\u003d\"@/images/stats_icon.png\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003cScene stylesheets\u003d\"@DarkChartTheme.css\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cAnchorPane prefHeight\u003d\"450.0\" prefWidth\u003d\"620.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "               \u003cLineChart fx:id\u003d\"lineChart\" prefHeight\u003d\"450.0\" prefWidth\u003d\"620.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                 \u003cxAxis\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                   \u003cCategoryAxis side\u003d\"BOTTOM\" fx:id\u003d\"xAxis\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                 \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                 \u003cyAxis\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                   \u003cNumberAxis fx:id\u003d\"yAxis\" side\u003d\"LEFT\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                 \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "               \u003c/LineChart\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "            \u003c/children\u003e\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 30
    }
  },
  {
    "path": "src/test/data/JsonMyFitnessBuddyStorageTest/invalidAndValidPersonMyFitnessBuddy.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  \"persons\": ["
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"profile\": {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"name\": \"First\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"id\": \"1111\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"height\": \"171\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"targetWeight\": \"61\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"startingDate\": \"2020-01-01\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      },"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"days\": ["
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2019-12-25\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"73\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-01-13\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"66\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-01-23\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"75\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-03-01\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"51\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-05-12\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"42\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-09-12\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"42\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      ]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"profile\": {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"name\": \"First\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"id\": \"1111\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"height\": \"171\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"targetWeight\": \"61\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"startingDate\": \"2020-01-01\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      },"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"days\": ["
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2019-12-25\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"73\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-01-13\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"66\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-01-23\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"75\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-03-01\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"51\","
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"ERROR\","
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"42\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-09-12\","
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"ABC\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      ]"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 122
    }
  },
  {
    "path": "src/test/data/JsonMyFitnessBuddyStorageTest/invalidPersonMyFitnessBuddy.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  \"persons\": ["
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"profile\": {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"name\": \"First\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"id\": \"1111\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"height\": \"171\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"targetWeight\": \"61\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"startingDate\": \"2020-01-01\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      },"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"days\": ["
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2019-12-25\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"73\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-01-13\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"66\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-01-23\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"75\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-03-01\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"51\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-05-12\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"42\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"2020-09-12\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"42\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        },"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"date\": \"ERROR\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"weight\": \"45\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieManager\": {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"inputList\": [],"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            \"outputList\": []"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      ]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }]"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 70
    }
  },
  {
    "path": "src/test/data/JsonSerializableMyFitnessBuddyTest/anotherPersonsMyFitnessBuddy.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  \"persons\" : [ {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"First\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1111\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"171\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"61\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-01-01\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Second\","
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1112\","
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"172\","
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"62\","
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-02-02\""
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2014,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2015,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2016,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2017,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2018,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2019,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2020,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2021,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2022,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2023,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2024,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2025,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2026,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2027,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2028,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2029,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2030,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2031,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2032,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2033,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2034,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2035,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2036,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2037,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2038,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2039,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2040,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2041,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2042,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2043,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2044,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2045,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2046,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2047,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2048,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2049,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2050,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2051,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2052,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2053,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2054,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2055,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2056,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2057,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2058,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 2059,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 2060,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2061,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2062,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2063,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2064,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2065,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2066,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2067,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2068,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2069,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2070,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2071,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2072,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2073,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2074,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2075,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2076,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2077,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2078,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2079,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2080,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2081,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2082,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2083,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2084,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2085,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2086,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2087,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2088,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2089,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2090,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2091,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2092,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2093,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2094,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2095,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2096,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2097,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2098,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2099,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2110,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2112,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2115,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2116,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2118,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2119,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2122,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2123,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2124,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2129,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2131,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 2132,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 2133,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 2134,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 2135,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 2136,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Third\","
      },
      {
        "lineNumber": 2137,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1113\","
      },
      {
        "lineNumber": 2138,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"173\","
      },
      {
        "lineNumber": 2139,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"63\","
      },
      {
        "lineNumber": 2140,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-03-03\""
      },
      {
        "lineNumber": 2141,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 2142,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 2143,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 2144,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 2145,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 2146,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 2147,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2148,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2149,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2150,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2152,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2153,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2154,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2155,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2156,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2157,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2158,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2159,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2160,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2161,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2162,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2163,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2164,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2165,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2166,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2167,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2168,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2169,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2170,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2171,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2172,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2173,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2174,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2175,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2176,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2177,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2178,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2179,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2180,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2181,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2182,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2183,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2184,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2185,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2186,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2187,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2188,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2189,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2190,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2191,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2192,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2193,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2194,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2195,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2196,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2197,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2198,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2199,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2200,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2201,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2202,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2203,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2204,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2205,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2206,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2207,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2208,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2209,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2210,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2211,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2212,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2213,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2214,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2215,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2216,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2217,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2218,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 2219,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 2220,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2221,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2222,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2223,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2224,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2225,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2226,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2227,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2228,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2229,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2230,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2231,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2232,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2233,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2234,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2235,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2236,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2237,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2238,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2239,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2240,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2241,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2242,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2243,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2244,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2245,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2246,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2247,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2248,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2249,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2250,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2251,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2252,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2253,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2254,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2255,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2256,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2257,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2258,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2259,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2260,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2261,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2262,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2263,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2264,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2265,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2266,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2267,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2268,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2269,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2270,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2271,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2272,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2273,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2274,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2275,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2276,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2277,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2278,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2279,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2280,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2281,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2282,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2283,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2284,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2285,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2286,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2287,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2288,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2289,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2290,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2291,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 2292,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 2293,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 2294,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 2295,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 2296,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 2297,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 2298,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2299,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2300,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2301,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2302,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2303,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2304,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2305,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2306,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2307,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2308,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2309,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2310,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2311,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2312,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2313,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2314,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2315,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2316,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2317,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2318,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2319,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2320,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2321,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2322,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2323,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2324,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2325,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2326,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2327,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2328,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2329,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2330,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2331,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2332,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2333,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2334,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2335,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2336,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2337,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2338,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2339,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2340,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2341,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2342,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2343,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2344,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2345,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2346,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2347,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2348,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2349,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2350,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2351,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2352,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2353,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2354,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2355,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2356,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2357,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2358,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2359,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2360,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2361,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2362,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2363,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2364,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2365,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2366,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2367,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2368,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2369,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 2370,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 2371,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2372,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2373,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2374,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2375,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2376,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2377,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2378,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2379,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2380,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2381,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2382,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2383,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2384,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2385,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2386,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2387,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2388,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2389,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2390,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2391,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2392,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2393,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2394,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2395,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2396,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2397,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2398,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2399,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2400,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2401,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2402,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2403,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2404,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2405,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2406,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2407,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2408,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2409,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2410,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2411,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2412,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2413,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2414,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2415,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2416,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2417,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2418,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2419,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2420,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2421,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2422,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2423,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2424,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2425,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2426,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2427,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2428,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2429,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2430,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2431,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2432,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2433,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2434,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2435,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2436,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2437,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2438,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2439,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2440,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2441,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2442,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 2443,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 2444,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 2445,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 2446,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 2447,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 2448,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 2449,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2450,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2451,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2452,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2453,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2454,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2455,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2456,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2457,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2458,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2459,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2460,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2461,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2462,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2463,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2464,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2465,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2466,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2467,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2468,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2469,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2470,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2471,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2472,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2473,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2474,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2475,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2476,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2477,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2478,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2479,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2480,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2481,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2482,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2483,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2484,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2485,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2486,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2487,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2488,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2489,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2490,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2491,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2492,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2493,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2494,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2495,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2496,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2497,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2498,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2499,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2500,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2501,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2502,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2503,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2504,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2505,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2506,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2507,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2508,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2509,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2510,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2511,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2512,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2513,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2514,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2515,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2516,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2517,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2518,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2519,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2520,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 2521,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 2522,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2523,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2524,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2525,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2526,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2527,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2528,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2529,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2530,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2531,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2532,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2533,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2534,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2535,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2536,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2537,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2538,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2539,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2540,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2541,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2542,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2543,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2544,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2545,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2546,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2547,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2548,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2549,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2550,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2551,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2552,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2553,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2554,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2555,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2556,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2557,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2558,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2559,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2560,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2561,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2562,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2563,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2564,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2565,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2566,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2567,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2568,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2569,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2570,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2571,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2572,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2573,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2574,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2575,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2576,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2577,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2578,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2579,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2580,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2581,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2582,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2583,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2584,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2585,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2586,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2587,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2588,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2589,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2590,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2591,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2592,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2593,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 2594,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 2595,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 2596,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 2597,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 2598,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 2599,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 2600,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2601,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2602,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2603,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2604,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2605,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2606,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2607,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2608,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2609,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2610,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2611,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2612,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2613,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2614,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2615,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2616,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2617,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2618,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2619,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2620,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2621,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2622,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2623,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2624,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2625,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2626,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2627,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2628,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2629,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2630,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2631,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2632,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2633,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2634,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2635,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2636,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2637,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2638,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2639,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2640,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2641,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2642,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2643,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2644,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2645,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2646,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2647,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2648,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2649,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2650,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2651,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2652,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2653,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2654,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2655,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2656,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2657,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2658,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2659,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2660,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2661,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2662,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2663,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2664,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2665,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2666,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2667,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2668,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2669,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2670,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2671,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 2672,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 2673,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2674,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2675,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2676,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2677,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2678,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2679,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2680,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2681,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2682,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2683,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2684,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2685,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2686,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2687,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2688,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2689,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2690,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2691,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2692,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2693,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2694,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2695,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2696,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2697,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2698,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2699,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2700,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2701,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2702,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2703,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2704,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2705,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2706,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2707,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2708,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2709,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2710,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2711,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2712,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2713,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2714,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2715,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2716,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2717,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2718,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2719,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2720,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2721,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2722,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2723,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2724,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2725,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2726,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2727,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2728,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2729,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2730,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2731,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2732,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2733,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2734,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2735,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2736,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2737,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2738,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2739,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2740,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2741,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2742,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2743,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2744,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 2745,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 2746,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 2747,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 2748,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 2749,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 2750,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 2751,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2752,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2753,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2754,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2755,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2756,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2757,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2758,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2759,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2760,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2761,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2762,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2763,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2764,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2765,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2766,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2767,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2768,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2769,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2770,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2771,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2772,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2773,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2774,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2775,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2776,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2777,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2778,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2779,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2780,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2781,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2782,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2783,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2784,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2785,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2786,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2787,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2788,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2789,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2790,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2791,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2792,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2793,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2794,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2795,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2796,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2797,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2798,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2799,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2800,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2801,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2802,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2803,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2804,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2805,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2806,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2807,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2808,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2809,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2810,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2811,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2812,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2813,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2814,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2815,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2816,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2817,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2818,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2819,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2820,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2821,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2822,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 2823,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 2824,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2825,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2826,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2827,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2828,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2829,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2830,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2831,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2832,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2833,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2834,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2835,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2836,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2837,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2838,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2839,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2840,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2841,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2842,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2843,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2844,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2845,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2846,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2847,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2848,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2849,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2850,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2851,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2852,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2853,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2854,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2855,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2856,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2857,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2858,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2859,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2860,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2861,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2862,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2863,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2864,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2865,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2866,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2867,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2868,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2869,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 2870,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 2871,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2872,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2873,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2874,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2875,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2876,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2877,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2878,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2879,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2880,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2881,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2882,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2883,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2884,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2885,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2886,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2887,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2888,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2889,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2890,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2891,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2892,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2893,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 2894,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 2895,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 2896,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 2897,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 2898,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 2899,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 2900,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 2901,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 2902,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2903,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2904,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2905,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2906,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2907,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2908,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2909,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2910,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2911,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2912,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2913,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2914,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2915,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2916,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2917,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2918,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2919,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2920,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2921,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2922,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2923,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 2924,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 2925,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2926,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2927,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2928,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2929,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2930,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2931,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2932,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2933,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2934,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2935,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2936,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2937,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2938,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2939,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2940,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2941,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2942,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2943,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2944,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2945,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2946,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 2947,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 2948,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 2949,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2950,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2951,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2952,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2953,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2954,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2955,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2956,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2957,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2958,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2959,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2960,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2961,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2962,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2963,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2964,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2965,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2966,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2967,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2968,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2969,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2970,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 2971,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 2972,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 2973,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 2974,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 2975,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2976,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2977,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2978,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2979,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2980,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2981,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2982,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2983,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2984,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2985,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2986,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2987,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2988,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2989,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2990,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2991,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2992,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2993,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2994,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2995,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 2996,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 2997,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 2998,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 2999,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3000,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3001,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3002,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3003,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3004,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3005,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3006,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3007,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3008,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3009,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3010,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3011,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3012,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3013,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3014,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3015,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3016,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3017,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3018,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3019,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3020,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3021,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3022,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3023,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3024,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3025,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3026,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3027,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3028,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3029,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3030,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3031,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3032,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3033,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3034,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3035,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3036,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3037,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3038,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3039,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3040,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3041,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3042,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3043,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3044,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3045,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3046,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 3047,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 3048,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 3049,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 3050,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 3051,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 3052,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 3053,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3054,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3055,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3056,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3057,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3058,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3059,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3060,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3061,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3062,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3063,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3064,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3065,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3066,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3067,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3068,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3069,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3070,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3071,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3072,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3073,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3074,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3075,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3076,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3077,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3078,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3079,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3080,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3081,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3082,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3083,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3084,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3085,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3086,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3087,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3088,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3089,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3090,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3091,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3092,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3093,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3094,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3095,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3096,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3097,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3098,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3099,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3110,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3112,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3115,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3116,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3118,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3119,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3122,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3123,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3124,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 3125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 3126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3129,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3131,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3132,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3133,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3134,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3135,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3136,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3137,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3138,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3139,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3140,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3141,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3142,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3143,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3144,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3145,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3146,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3147,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3148,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3149,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3150,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3152,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3153,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3154,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3155,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3156,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3157,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3158,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3159,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3160,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3161,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3162,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3163,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3164,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3165,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3166,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3167,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3168,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3169,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3170,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3171,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3172,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3173,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3174,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3175,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3176,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3177,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3178,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3179,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3180,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3181,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3182,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3183,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3184,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3185,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3186,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3187,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3188,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3189,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3190,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3191,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3192,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3193,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3194,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3195,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3196,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3197,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 3198,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 3199,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 3200,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 3201,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 3202,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Fourth\","
      },
      {
        "lineNumber": 3203,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1114\","
      },
      {
        "lineNumber": 3204,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"174\","
      },
      {
        "lineNumber": 3205,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"64\","
      },
      {
        "lineNumber": 3206,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-04-04\""
      },
      {
        "lineNumber": 3207,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 3208,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 3209,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 3210,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 3211,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 3212,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 3213,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3214,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3215,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3216,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3217,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3218,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3219,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3220,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3221,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3222,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3223,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3224,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3225,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3226,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3227,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3228,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3229,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3230,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3231,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3232,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3233,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3234,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3235,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3236,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3237,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3238,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3239,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3240,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3241,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3242,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3243,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3244,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3245,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3246,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3247,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3248,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3249,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3250,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3251,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3252,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3253,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3254,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3255,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3256,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3257,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3258,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3259,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3260,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3261,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3262,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3263,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3264,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3265,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3266,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3267,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3268,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3269,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3270,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3271,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3272,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3273,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3274,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3275,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3276,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3277,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3278,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3279,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3280,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3281,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3282,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3283,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3284,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 3285,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 3286,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3287,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3288,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3289,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3290,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3291,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3292,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3293,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3294,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3295,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3296,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3297,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3298,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3299,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3300,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3301,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3302,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3303,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3304,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3305,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3306,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3307,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3308,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3309,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3310,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3311,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3312,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3313,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3314,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3315,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3316,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3317,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3318,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3319,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3320,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3321,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3322,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3323,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3324,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3325,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3326,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3327,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3328,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3329,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3330,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3331,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3332,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3333,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3334,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3335,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3336,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3337,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3338,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3339,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3340,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3341,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3342,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3343,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3344,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3345,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3346,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3347,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3348,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3349,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3350,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3351,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3352,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3353,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3354,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3355,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3356,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3357,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 3358,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 3359,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 3360,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 3361,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 3362,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 3363,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 3364,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3365,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3366,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3367,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3368,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3369,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3370,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3371,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3372,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3373,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3374,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3375,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3376,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3377,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3378,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3379,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3380,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3381,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3382,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3383,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3384,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3385,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3386,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3387,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3388,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3389,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3390,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3391,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3392,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3393,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3394,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3395,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3396,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3397,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3398,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3399,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3400,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3401,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3402,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3403,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3404,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3405,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3406,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3407,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3408,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3409,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3410,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3411,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3412,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3413,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3414,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3415,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3416,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3417,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3418,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3419,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3420,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3421,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3422,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3423,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3424,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3425,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3426,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3427,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3428,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3429,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3430,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3431,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3432,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3433,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3434,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3435,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 3436,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 3437,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3438,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3439,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3440,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3441,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3442,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3443,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3444,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3445,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3446,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3447,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3448,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3449,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3450,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3451,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3452,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3453,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3454,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3455,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3456,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3457,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3458,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3459,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3460,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3461,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3462,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3463,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3464,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3465,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3466,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3467,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3468,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3469,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3470,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3471,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3472,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3473,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3474,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3475,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3476,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3477,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3478,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3479,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3480,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3481,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3482,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3483,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3484,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3485,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3486,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3487,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3488,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3489,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3490,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3491,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3492,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3493,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3494,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3495,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3496,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3497,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3498,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3499,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3500,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3501,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3502,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3503,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3504,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3505,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3506,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3507,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3508,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 3509,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 3510,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 3511,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 3512,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 3513,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 3514,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 3515,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3516,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3517,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3518,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3519,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3520,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3521,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3522,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3523,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3524,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3525,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3526,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3527,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3528,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3529,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3530,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3531,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3532,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3533,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3534,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3535,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3536,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3537,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3538,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3539,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3540,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3541,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3542,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3543,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3544,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3545,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3546,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3547,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3548,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3549,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3550,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3551,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3552,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3553,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3554,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3555,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3556,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3557,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3558,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3559,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3560,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3561,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3562,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3563,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3564,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3565,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3566,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3567,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3568,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3569,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3570,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3571,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3572,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3573,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3574,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3575,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3576,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3577,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3578,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3579,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3580,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3581,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3582,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3583,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3584,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3585,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3586,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 3587,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 3588,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3589,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3590,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3591,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3592,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3593,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3594,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3595,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3596,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3597,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3598,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3599,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3600,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3601,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3602,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3603,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3604,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3605,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3606,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3607,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3608,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3609,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3610,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3611,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3612,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3613,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3614,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3615,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3616,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3617,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3618,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3619,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3620,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3621,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3622,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3623,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3624,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3625,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3626,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3627,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3628,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3629,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3630,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3631,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3632,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3633,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3634,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3635,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3636,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3637,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3638,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3639,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3640,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3641,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3642,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3643,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3644,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3645,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3646,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3647,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3648,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3649,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3650,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3651,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3652,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3653,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3654,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3655,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3656,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3657,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3658,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3659,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 3660,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 3661,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 3662,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 3663,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 3664,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 3665,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 3666,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3667,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3668,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3669,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3670,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3671,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3672,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3673,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3674,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3675,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3676,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3677,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3678,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3679,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3680,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3681,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3682,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3683,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3684,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3685,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3686,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3687,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3688,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3689,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3690,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3691,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3692,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3693,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3694,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3695,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3696,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3697,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3698,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3699,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3700,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3701,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3702,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3703,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3704,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3705,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3706,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3707,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3708,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3709,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3710,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3711,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3712,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3713,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3714,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3715,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3716,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3717,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3718,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3719,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3720,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3721,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3722,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3723,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3724,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3725,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3726,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3727,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3728,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3729,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3730,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3731,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3732,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3733,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3734,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3735,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3736,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3737,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 3738,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 3739,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3740,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3741,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3742,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3743,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3744,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3745,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3746,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3747,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3748,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3749,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3750,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3751,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3752,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3753,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3754,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3755,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3756,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3757,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3758,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3759,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3760,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3761,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3762,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3763,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3764,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3765,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3766,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3767,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3768,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3769,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3770,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3771,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3772,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3773,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3774,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3775,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3776,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3777,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3778,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3779,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3780,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3781,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3782,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3783,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3784,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3785,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3786,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3787,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3788,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3789,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3790,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3791,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3792,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3793,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3794,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3795,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3796,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3797,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3798,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3799,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3800,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3801,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3802,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3803,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3804,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3805,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3806,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3807,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3808,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3809,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3810,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 3811,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 3812,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 3813,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 3814,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 3815,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 3816,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 3817,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3818,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3819,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3820,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3821,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3822,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3823,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3824,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3825,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3826,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3827,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3828,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3829,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3830,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3831,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3832,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3833,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3834,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3835,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3836,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3837,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3838,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3839,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3840,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3841,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3842,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3843,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3844,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3845,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3846,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3847,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3848,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3849,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3850,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3851,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3852,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3853,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3854,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3855,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3856,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3857,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3858,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3859,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3860,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3861,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3862,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3863,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3864,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3865,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3866,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3867,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3868,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3869,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3870,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3871,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3872,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3873,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3874,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3875,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3876,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3877,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3878,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3879,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3880,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3881,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3882,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3883,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3884,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3885,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3886,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 3887,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 3888,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 3889,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 3890,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3891,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3892,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3893,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3894,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3895,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3896,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3897,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3898,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3899,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3900,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3901,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3902,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3903,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3904,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3905,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3906,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3907,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3908,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3909,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3910,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3911,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 3912,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 3913,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3914,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3915,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3916,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3917,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3918,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3919,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3920,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3921,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3922,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3923,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3924,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3925,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3926,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3927,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3928,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3929,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3930,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3931,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3932,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3933,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3934,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3935,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 3936,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 3937,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3938,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3939,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3940,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3941,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3942,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3943,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3944,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3945,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3946,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3947,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3948,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3949,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3950,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3951,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3952,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3953,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3954,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3955,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3956,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3957,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3958,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 3959,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 3960,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 3961,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 3962,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 3963,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 3964,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 3965,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 3966,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 3967,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 3968,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3969,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3970,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3971,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3972,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3973,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3974,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3975,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3976,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3977,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3978,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3979,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3980,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3981,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3982,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3983,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3984,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3985,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3986,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3987,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3988,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 3989,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 3990,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 3991,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3992,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3993,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3994,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3995,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 3996,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 3997,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 3998,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 3999,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4000,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4001,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4002,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4003,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4004,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4005,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4006,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4007,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4008,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4009,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4010,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4011,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4012,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4013,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4014,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4015,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4016,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4017,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4018,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4019,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4020,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4021,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4022,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4023,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4024,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4025,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4026,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4027,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4028,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4029,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4030,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4031,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4032,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4033,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4034,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4035,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4036,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4037,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4038,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4039,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 4040,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 4041,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4042,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4043,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4044,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4045,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4046,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4047,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4048,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4049,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4050,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4051,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4052,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4053,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4054,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4055,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4056,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4057,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4058,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4059,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4060,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4061,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4062,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4063,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4064,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4065,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4066,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4067,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4068,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4069,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4070,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4071,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4072,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4073,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4074,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4075,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4076,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4077,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4078,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4079,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4080,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4081,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4082,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4083,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4084,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4085,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4086,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4087,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4088,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4089,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4090,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4091,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4092,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4093,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4094,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4095,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4096,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4097,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4098,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4099,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4110,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4112,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 4113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 4114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 4115,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 4116,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 4117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 4118,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 4119,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4122,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4123,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4124,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4129,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4131,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4132,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4133,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4134,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4135,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4136,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4137,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4138,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4139,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4140,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4141,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4142,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4143,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4144,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4145,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4146,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4147,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4148,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4149,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4150,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4152,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4153,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4154,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4155,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4156,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4157,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4158,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4159,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4160,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4161,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4162,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4163,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4164,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4165,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4166,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4167,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4168,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4169,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4170,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4171,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4172,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4173,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4174,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4175,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4176,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4177,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4178,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4179,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4180,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4181,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4182,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4183,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4184,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4185,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4186,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4187,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4188,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4189,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4190,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 4191,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 4192,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4193,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4194,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4195,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4196,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4197,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4198,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4199,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4200,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4201,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4202,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4203,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4204,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4205,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4206,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4207,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4208,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4209,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4210,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4211,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4212,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4213,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4214,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4215,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4216,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4217,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4218,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4219,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4220,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4221,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4222,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4223,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4224,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4225,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4226,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4227,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4228,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4229,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4230,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4231,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4232,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4233,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4234,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4235,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4236,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4237,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4238,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4239,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4240,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4241,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4242,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4243,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4244,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4245,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4246,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4247,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4248,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4249,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4250,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4251,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4252,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4253,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4254,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4255,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4256,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4257,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4258,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4259,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4260,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4261,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4262,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4263,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 4264,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 4265,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 4266,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 4267,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 4268,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Fifth\","
      },
      {
        "lineNumber": 4269,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1115\","
      },
      {
        "lineNumber": 4270,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"175\","
      },
      {
        "lineNumber": 4271,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"65\","
      },
      {
        "lineNumber": 4272,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-05-05\""
      },
      {
        "lineNumber": 4273,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 4274,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 4275,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 4276,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 4277,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 4278,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 4279,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4280,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4281,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4282,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4283,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4284,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4285,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4286,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4287,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4288,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4289,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4290,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4291,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4292,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4293,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4294,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4295,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4296,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4297,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4298,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4299,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4300,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4301,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4302,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4303,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4304,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4305,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4306,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4307,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4308,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4309,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4310,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4311,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4312,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4313,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4314,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4315,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4316,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4317,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4318,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4319,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4320,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4321,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4322,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4323,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4324,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4325,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4326,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4327,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4328,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4329,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4330,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4331,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4332,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4333,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4334,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4335,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4336,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4337,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4338,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4339,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4340,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4341,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4342,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4343,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4344,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4345,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4346,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4347,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4348,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4349,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4350,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 4351,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 4352,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4353,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4354,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4355,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4356,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4357,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4358,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4359,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4360,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4361,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4362,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4363,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4364,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4365,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4366,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4367,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4368,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4369,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4370,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4371,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4372,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4373,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4374,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4375,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4376,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4377,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4378,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4379,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4380,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4381,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4382,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4383,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4384,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4385,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4386,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4387,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4388,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4389,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4390,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4391,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4392,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4393,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4394,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4395,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4396,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4397,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4398,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4399,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4400,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4401,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4402,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4403,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4404,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4405,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4406,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4407,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4408,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4409,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4410,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4411,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4412,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4413,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4414,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4415,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4416,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4417,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4418,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4419,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4420,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4421,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4422,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4423,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 4424,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 4425,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 4426,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 4427,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 4428,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 4429,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 4430,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4431,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4432,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4433,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4434,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4435,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4436,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4437,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4438,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4439,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4440,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4441,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4442,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4443,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4444,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4445,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4446,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4447,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4448,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4449,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4450,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4451,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4452,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4453,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4454,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4455,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4456,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4457,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4458,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4459,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4460,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4461,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4462,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4463,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4464,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4465,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4466,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4467,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4468,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4469,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4470,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4471,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4472,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4473,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4474,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4475,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4476,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4477,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4478,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4479,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4480,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4481,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4482,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4483,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4484,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4485,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4486,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4487,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4488,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4489,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4490,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4491,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4492,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4493,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4494,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4495,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4496,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4497,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4498,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4499,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4500,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4501,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 4502,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 4503,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4504,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4505,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4506,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4507,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4508,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4509,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4510,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4511,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4512,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4513,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4514,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4515,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4516,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4517,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4518,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4519,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4520,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4521,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4522,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4523,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4524,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4525,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4526,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4527,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4528,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4529,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4530,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4531,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4532,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4533,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4534,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4535,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4536,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4537,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4538,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4539,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4540,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4541,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4542,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4543,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4544,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4545,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4546,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4547,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4548,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4549,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4550,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4551,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4552,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4553,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4554,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4555,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4556,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4557,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4558,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4559,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4560,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4561,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4562,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4563,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4564,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4565,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4566,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4567,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4568,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4569,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4570,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4571,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4572,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4573,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4574,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 4575,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 4576,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 4577,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 4578,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 4579,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 4580,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 4581,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4582,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4583,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4584,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4585,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4586,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4587,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4588,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4589,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4590,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4591,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4592,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4593,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4594,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4595,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4596,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4597,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4598,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4599,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4600,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4601,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4602,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4603,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4604,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4605,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4606,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4607,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4608,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4609,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4610,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4611,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4612,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4613,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4614,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4615,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4616,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4617,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4618,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4619,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4620,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4621,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4622,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4623,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4624,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4625,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4626,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4627,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4628,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4629,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4630,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4631,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4632,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4633,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4634,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4635,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4636,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4637,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4638,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4639,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4640,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4641,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4642,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4643,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4644,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4645,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4646,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4647,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4648,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4649,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4650,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4651,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4652,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 4653,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 4654,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4655,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4656,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4657,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4658,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4659,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4660,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4661,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4662,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4663,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4664,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4665,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4666,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4667,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4668,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4669,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4670,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4671,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4672,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4673,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4674,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4675,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4676,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4677,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4678,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4679,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4680,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4681,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4682,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4683,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4684,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4685,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4686,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4687,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4688,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4689,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4690,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4691,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4692,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4693,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4694,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4695,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4696,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4697,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4698,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4699,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4700,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4701,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4702,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4703,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4704,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4705,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4706,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4707,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4708,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4709,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4710,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4711,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4712,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4713,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4714,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4715,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4716,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4717,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4718,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4719,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4720,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4721,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4722,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4723,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4724,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4725,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 4726,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 4727,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 4728,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 4729,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 4730,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 4731,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 4732,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4733,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4734,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4735,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4736,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4737,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4738,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4739,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4740,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4741,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4742,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4743,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4744,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4745,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4746,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4747,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4748,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4749,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4750,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4751,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4752,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4753,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4754,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4755,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4756,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4757,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4758,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4759,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4760,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4761,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4762,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4763,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4764,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4765,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4766,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4767,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4768,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4769,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4770,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4771,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4772,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4773,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4774,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4775,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4776,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4777,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4778,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4779,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4780,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4781,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4782,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4783,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4784,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4785,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4786,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4787,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4788,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4789,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4790,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4791,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4792,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4793,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4794,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4795,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4796,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4797,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4798,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4799,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4800,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4801,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4802,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4803,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 4804,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 4805,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4806,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4807,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4808,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4809,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4810,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4811,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4812,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4813,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4814,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4815,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4816,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4817,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4818,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4819,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4820,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4821,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4822,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4823,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4824,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4825,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4826,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4827,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4828,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4829,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4830,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4831,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4832,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4833,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4834,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4835,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4836,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4837,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4838,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4839,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4840,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4841,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4842,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4843,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4844,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4845,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4846,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4847,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4848,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4849,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4850,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4851,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4852,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4853,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4854,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4855,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4856,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4857,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4858,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4859,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4860,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4861,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4862,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4863,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4864,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4865,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4866,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4867,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4868,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4869,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4870,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4871,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4872,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4873,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4874,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 4875,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 4876,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 4877,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 4878,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 4879,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 4880,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 4881,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 4882,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 4883,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4884,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4885,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4886,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4887,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4888,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4889,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4890,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4891,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4892,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4893,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4894,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4895,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4896,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4897,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4898,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4899,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4900,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4901,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4902,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4903,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4904,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 4905,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 4906,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4907,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4908,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4909,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4910,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4911,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4912,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4913,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4914,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4915,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4916,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4917,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4918,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4919,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4920,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4921,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4922,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4923,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4924,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4925,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4926,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4927,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4928,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 4929,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 4930,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4931,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4932,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4933,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4934,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4935,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4936,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4937,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4938,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4939,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4940,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4941,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4942,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4943,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4944,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4945,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4946,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4947,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4948,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4949,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4950,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4951,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 4952,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 4953,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 4954,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 4955,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 4956,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4957,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4958,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4959,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4960,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4961,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4962,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4963,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4964,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4965,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4966,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4967,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4968,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4969,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4970,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4971,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4972,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4973,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4974,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4975,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4976,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 4977,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 4978,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 4979,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4980,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4981,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4982,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4983,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4984,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4985,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4986,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4987,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4988,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4989,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4990,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4991,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4992,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4993,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4994,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4995,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 4996,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 4997,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 4998,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 4999,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5000,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5001,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5002,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5003,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5004,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5005,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5006,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5007,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5008,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5009,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5010,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5011,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5012,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5013,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5014,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5015,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5016,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5017,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5018,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5019,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5020,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5021,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5022,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5023,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5024,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5025,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5026,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5027,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 5028,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 5029,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 5030,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 5031,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 5032,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 5033,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 5034,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5035,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5036,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5037,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5038,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5039,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5040,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5041,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5042,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5043,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5044,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5045,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5046,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5047,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5048,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5049,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5050,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5051,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5052,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5053,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5054,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5055,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5056,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5057,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5058,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5059,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5060,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5061,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5062,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5063,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5064,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5065,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5066,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5067,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5068,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5069,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5070,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5071,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5072,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5073,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5074,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5075,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5076,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5077,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5078,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5079,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5080,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5081,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5082,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5083,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5084,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5085,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5086,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5087,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5088,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5089,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5090,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5091,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5092,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5093,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5094,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5095,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5096,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5097,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5098,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5099,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 5106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 5107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5110,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5112,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5115,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5116,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5118,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5119,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5122,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5123,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5124,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5129,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5131,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5132,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5133,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5134,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5135,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5136,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5137,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5138,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5139,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5140,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5141,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5142,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5143,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5144,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5145,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5146,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5147,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5148,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5149,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5150,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5152,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5153,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5154,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5155,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5156,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5157,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5158,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5159,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5160,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5161,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5162,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5163,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5164,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5165,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5166,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5167,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5168,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5169,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5170,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5171,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5172,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5173,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5174,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5175,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5176,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5177,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5178,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 5179,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 5180,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 5181,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 5182,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 5183,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 5184,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 5185,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5186,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5187,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5188,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5189,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5190,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5191,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5192,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5193,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5194,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5195,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5196,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5197,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5198,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5199,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5200,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5201,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5202,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5203,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5204,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5205,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5206,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5207,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5208,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5209,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5210,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5211,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5212,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5213,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5214,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5215,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5216,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5217,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5218,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5219,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5220,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5221,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5222,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5223,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5224,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5225,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5226,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5227,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5228,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5229,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5230,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5231,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5232,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5233,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5234,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5235,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5236,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5237,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5238,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5239,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5240,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5241,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5242,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5243,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5244,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5245,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5246,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5247,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5248,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5249,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5250,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5251,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5252,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5253,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5254,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5255,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5256,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 5257,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 5258,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5259,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5260,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5261,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5262,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5263,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5264,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5265,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5266,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5267,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5268,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5269,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5270,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5271,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5272,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5273,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5274,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5275,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5276,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5277,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5278,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5279,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5280,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5281,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5282,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5283,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5284,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5285,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5286,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5287,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5288,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5289,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5290,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5291,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5292,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5293,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5294,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5295,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5296,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5297,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5298,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5299,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5300,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5301,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5302,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5303,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5304,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5305,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5306,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5307,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5308,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5309,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5310,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5311,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5312,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5313,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5314,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5315,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5316,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5317,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5318,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5319,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5320,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5321,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5322,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5323,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5324,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5325,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5326,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5327,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5328,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5329,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 5330,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 5331,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 5332,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 5333,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 5334,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Sixth\","
      },
      {
        "lineNumber": 5335,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1116\","
      },
      {
        "lineNumber": 5336,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"176\","
      },
      {
        "lineNumber": 5337,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"66\","
      },
      {
        "lineNumber": 5338,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-06-06\""
      },
      {
        "lineNumber": 5339,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 5340,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 5341,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 5342,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 5343,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 5344,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 5345,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5346,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5347,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5348,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5349,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5350,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5351,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5352,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5353,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5354,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5355,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5356,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5357,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5358,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5359,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5360,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5361,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5362,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5363,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5364,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5365,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5366,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5367,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5368,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5369,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5370,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5371,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5372,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5373,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5374,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5375,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5376,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5377,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5378,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5379,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5380,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5381,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5382,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5383,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5384,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5385,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5386,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5387,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5388,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5389,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5390,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5391,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5392,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5393,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5394,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5395,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5396,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5397,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5398,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5399,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5400,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5401,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5402,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5403,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5404,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5405,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5406,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5407,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5408,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5409,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5410,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5411,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5412,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5413,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5414,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5415,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5416,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 5417,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 5418,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5419,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5420,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5421,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5422,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5423,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5424,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5425,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5426,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5427,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5428,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5429,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5430,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5431,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5432,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5433,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5434,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5435,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5436,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5437,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5438,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5439,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5440,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5441,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5442,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5443,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5444,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5445,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5446,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5447,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5448,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5449,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5450,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5451,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5452,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5453,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5454,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5455,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5456,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5457,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5458,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5459,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5460,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5461,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5462,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5463,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5464,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5465,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5466,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5467,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5468,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5469,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5470,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5471,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5472,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5473,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5474,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5475,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5476,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5477,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5478,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5479,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5480,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5481,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5482,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5483,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5484,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5485,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5486,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5487,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5488,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5489,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 5490,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 5491,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 5492,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 5493,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 5494,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 5495,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 5496,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5497,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5498,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5499,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5500,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5501,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5502,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5503,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5504,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5505,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5506,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5507,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5508,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5509,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5510,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5511,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5512,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5513,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5514,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5515,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5516,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5517,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5518,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5519,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5520,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5521,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5522,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5523,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5524,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5525,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5526,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5527,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5528,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5529,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5530,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5531,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5532,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5533,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5534,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5535,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5536,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5537,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5538,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5539,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5540,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5541,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5542,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5543,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5544,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5545,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5546,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5547,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5548,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5549,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5550,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5551,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5552,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5553,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5554,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5555,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5556,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5557,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5558,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5559,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5560,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5561,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5562,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5563,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5564,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5565,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5566,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5567,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 5568,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 5569,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5570,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5571,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5572,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5573,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5574,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5575,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5576,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5577,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5578,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5579,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5580,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5581,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5582,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5583,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5584,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5585,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5586,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5587,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5588,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5589,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5590,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5591,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5592,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5593,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5594,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5595,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5596,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5597,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5598,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5599,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5600,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5601,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5602,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5603,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5604,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5605,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5606,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5607,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5608,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5609,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5610,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5611,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5612,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5613,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5614,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5615,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5616,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5617,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5618,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5619,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5620,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5621,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5622,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5623,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5624,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5625,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5626,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5627,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5628,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5629,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5630,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5631,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5632,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5633,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5634,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5635,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5636,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5637,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5638,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5639,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5640,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 5641,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 5642,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 5643,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 5644,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 5645,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 5646,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 5647,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5648,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5649,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5650,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5651,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5652,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5653,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5654,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5655,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5656,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5657,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5658,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5659,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5660,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5661,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5662,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5663,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5664,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5665,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5666,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5667,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5668,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5669,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5670,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5671,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5672,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5673,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5674,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5675,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5676,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5677,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5678,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5679,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5680,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5681,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5682,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5683,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5684,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5685,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5686,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5687,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5688,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5689,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5690,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5691,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5692,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5693,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5694,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5695,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5696,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5697,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5698,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5699,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5700,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5701,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5702,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5703,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5704,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5705,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5706,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5707,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5708,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5709,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5710,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5711,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5712,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5713,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5714,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5715,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5716,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5717,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5718,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 5719,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 5720,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5721,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5722,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5723,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5724,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5725,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5726,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5727,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5728,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5729,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5730,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5731,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5732,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5733,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5734,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5735,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5736,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5737,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5738,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5739,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5740,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5741,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5742,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5743,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5744,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5745,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5746,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5747,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5748,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5749,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5750,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5751,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5752,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5753,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5754,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5755,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5756,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5757,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5758,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5759,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5760,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5761,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5762,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5763,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5764,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5765,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5766,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5767,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5768,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5769,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5770,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5771,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5772,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5773,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5774,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5775,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5776,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5777,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5778,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5779,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5780,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5781,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5782,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5783,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5784,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5785,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5786,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5787,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5788,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5789,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5790,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5791,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 5792,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 5793,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 5794,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 5795,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 5796,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 5797,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 5798,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5799,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5800,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5801,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5802,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5803,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5804,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5805,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5806,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5807,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5808,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5809,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5810,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5811,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5812,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5813,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5814,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5815,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5816,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5817,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5818,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5819,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5820,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5821,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5822,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5823,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5824,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5825,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5826,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5827,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5828,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5829,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5830,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5831,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5832,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5833,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5834,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5835,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5836,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5837,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5838,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5839,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5840,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5841,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5842,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5843,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5844,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5845,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5846,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5847,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5848,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5849,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5850,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5851,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5852,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5853,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5854,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5855,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5856,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5857,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5858,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5859,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5860,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5861,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5862,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5863,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5864,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5865,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5866,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5867,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5868,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 5869,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 5870,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 5871,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5872,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5873,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5874,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5875,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5876,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5877,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5878,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5879,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5880,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5881,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5882,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5883,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5884,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5885,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5886,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5887,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5888,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5889,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5890,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5891,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5892,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 5893,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 5894,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5895,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5896,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5897,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5898,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5899,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5900,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5901,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5902,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5903,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5904,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5905,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5906,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5907,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5908,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5909,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5910,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5911,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5912,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5913,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5914,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5915,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5916,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 5917,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 5918,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5919,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5920,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5921,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5922,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5923,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5924,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5925,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5926,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5927,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5928,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5929,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5930,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5931,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5932,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5933,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5934,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5935,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5936,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5937,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5938,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5939,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5940,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 5941,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 5942,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 5943,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 5944,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 5945,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 5946,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 5947,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 5948,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 5949,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5950,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5951,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5952,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5953,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5954,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5955,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5956,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5957,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5958,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5959,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5960,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5961,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5962,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5963,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5964,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5965,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5966,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5967,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5968,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5969,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 5970,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 5971,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 5972,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5973,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5974,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5975,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5976,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5977,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5978,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5979,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5980,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5981,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5982,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5983,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5984,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5985,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5986,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5987,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5988,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5989,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5990,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5991,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5992,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5993,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 5994,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 5995,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 5996,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 5997,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 5998,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 5999,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6000,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6001,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6002,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6003,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6004,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6005,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6006,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6007,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6008,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6009,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6010,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6011,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6012,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6013,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6014,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6015,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6016,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6017,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6018,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6019,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6020,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 6021,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 6022,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6023,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6024,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6025,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6026,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6027,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6028,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6029,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6030,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6031,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6032,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6033,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6034,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6035,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6036,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6037,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6038,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6039,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6040,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6041,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6042,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6043,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6044,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6045,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6046,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6047,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6048,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6049,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6050,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6051,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6052,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6053,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6054,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6055,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6056,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6057,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6058,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6059,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6060,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6061,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6062,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6063,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6064,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6065,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6066,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6067,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6068,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6069,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6070,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6071,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6072,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6073,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6074,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6075,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6076,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6077,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6078,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6079,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6080,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6081,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6082,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6083,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6084,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6085,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6086,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6087,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6088,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6089,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6090,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6091,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6092,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6093,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 6094,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 6095,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 6096,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 6097,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 6098,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 6099,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 6100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6110,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6112,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6115,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6116,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6118,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6119,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6122,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6123,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6124,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6129,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6131,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6132,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6133,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6134,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6135,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6136,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6137,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6138,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6139,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6140,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6141,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6142,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6143,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6144,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6145,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6146,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6147,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6148,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6149,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6150,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6152,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6153,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6154,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6155,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6156,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6157,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6158,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6159,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6160,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6161,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6162,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6163,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6164,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6165,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6166,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6167,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6168,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6169,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6170,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6171,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 6172,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 6173,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6174,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6175,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6176,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6177,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6178,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6179,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6180,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6181,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6182,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6183,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6184,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6185,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6186,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6187,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6188,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6189,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6190,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6191,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6192,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6193,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6194,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6195,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6196,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6197,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6198,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6199,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6200,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6201,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6202,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6203,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6204,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6205,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6206,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6207,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6208,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6209,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6210,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6211,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6212,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6213,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6214,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6215,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6216,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6217,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6218,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6219,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6220,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6221,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6222,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6223,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6224,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6225,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6226,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6227,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6228,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6229,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6230,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6231,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6232,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6233,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6234,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6235,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6236,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6237,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6238,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6239,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6240,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6241,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6242,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6243,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6244,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 6245,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 6246,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 6247,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 6248,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 6249,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 6250,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 6251,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6252,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6253,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6254,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6255,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6256,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6257,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6258,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6259,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6260,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6261,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6262,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6263,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6264,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6265,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6266,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6267,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6268,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6269,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6270,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6271,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6272,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"laksa\","
      },
      {
        "lineNumber": 6273,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"100\""
      },
      {
        "lineNumber": 6274,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6275,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6276,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6277,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6278,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6279,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6280,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6281,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6282,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6283,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6284,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6285,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6286,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6287,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6288,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6289,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6290,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6291,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6292,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6293,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6294,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6295,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6296,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"rice\","
      },
      {
        "lineNumber": 6297,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"201\""
      },
      {
        "lineNumber": 6298,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6299,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6300,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6301,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6302,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6303,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6304,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6305,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6306,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6307,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6308,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6309,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6310,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6311,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6312,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6313,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6314,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6315,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6316,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6317,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6318,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6319,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6320,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"noodle\","
      },
      {
        "lineNumber": 6321,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"302\""
      },
      {
        "lineNumber": 6322,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 6323,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 6324,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6325,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6326,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6327,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6328,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6329,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6330,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6331,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6332,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6333,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6334,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6335,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6336,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6337,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6338,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6339,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6340,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6341,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6342,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6343,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6344,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1130\","
      },
      {
        "lineNumber": 6345,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"running\","
      },
      {
        "lineNumber": 6346,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"111\""
      },
      {
        "lineNumber": 6347,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6348,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6349,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6350,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6351,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6352,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6353,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6354,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6355,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6356,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6357,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6358,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6359,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6360,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6361,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6362,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6363,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6364,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6365,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6366,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6367,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6368,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 6369,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"swimming\","
      },
      {
        "lineNumber": 6370,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"222\""
      },
      {
        "lineNumber": 6371,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6372,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6373,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6374,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6375,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6376,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6377,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6378,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6379,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6380,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6381,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6382,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6383,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6384,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6385,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6386,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6387,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6388,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6389,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6390,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6391,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }, {"
      },
      {
        "lineNumber": 6392,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1330\","
      },
      {
        "lineNumber": 6393,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"dancing\","
      },
      {
        "lineNumber": 6394,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"333\""
      },
      {
        "lineNumber": 6395,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 6396,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 6397,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 6398,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  } ]"
      },
      {
        "lineNumber": 6399,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 6399
    }
  },
  {
    "path": "src/test/data/JsonSerializableMyFitnessBuddyTest/duplicatePersonMyFitnessBuddy.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  \"persons\" : [ {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Sample Person\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"2103\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"170\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"60\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-09-30\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-10-11\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"110\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"Laksa\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"800\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1800\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"Run\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"200\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-10-12\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"120\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Sample Person\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"2103\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"170\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"60\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-09-30\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-10-11\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"110\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"Laksa\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"800\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1800\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"Run\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"200\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-10-12\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"120\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  } ]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 65
    }
  },
  {
    "path": "src/test/data/JsonSerializableMyFitnessBuddyTest/invalidPersonMyFitnessBuddy.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  \"persons\" : [ {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Sample Person\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"2103\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"170\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"60\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-09-30\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-10-11\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"110\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"Laksa\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"800\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1800\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"Run\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"200\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-10-12\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"120\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Sample Person 2\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"2104\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"170\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"60\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-08-29\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"11-10-2020\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"110\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1230\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"food\" : \"Laksa\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"800\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"time\" : \"1800\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"exercise\" : \"Run\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          \"calorieCount\" : \"200\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        } ]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-10-12\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"120\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  } ]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 65
    }
  },
  {
    "path": "src/test/data/JsonSerializableMyFitnessBuddyTest/typicalPersonsMyFitnessBuddy.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  \"persons\" : [ {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"First\","
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1111\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"171\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"61\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-01-01\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Second\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1112\","
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"172\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"62\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-02-02\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Third\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1113\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"173\","
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"63\","
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-03-03\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Fourth\","
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1114\","
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"174\","
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"64\","
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-04-04\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Fifth\","
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1115\","
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"175\","
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"65\","
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-05-05\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  }, {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"profile\" : {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"name\" : \"Sixth\","
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"id\" : \"1116\","
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"height\" : \"176\","
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"targetWeight\" : \"66\","
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"startingDate\" : \"2020-06-06\""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    },"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    \"days\" : [ {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2019-12-25\","
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"73\","
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-13\","
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"66\","
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-01-23\","
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"75\","
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-03-01\","
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"51\","
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-05-12\","
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-09-12\","
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"42\","
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }, {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"date\" : \"2020-11-23\","
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"weight\" : \"45\","
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      \"calorieManager\" : {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"inputList\" : [ ],"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        \"outputList\" : [ ]"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "      }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    } ]"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  } ]"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 351
    }
  },
  {
    "path": "src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \"guiSettings\" : {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \"windowWidth\" : 1000.0,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \"windowHeight\" : 500.0,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \"extra\" : \"some value \","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \"windowCoordinates\" : {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "      \"x\" : 300,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \"y\" : 100,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "      \"z\" : 99"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  \"myFitnessBuddyFilePath\" : \"data\\\\myfitnessbuddy.json\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "-": 12
    }
  },
  {
    "path": "src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \"guiSettings\" : {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \"windowWidth\" : 1000.0,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \"windowHeight\" : 500.0,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \"windowCoordinates\" : {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      \"x\" : 300,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "      \"y\" : 100"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "  \"myFitnessBuddyFilePath\" : \"data\\\\myfitnessbuddy.json\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "-": 10
    }
  },
  {
    "path": "src/test/java/seedu/address/commons/util/AppUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class AppUtilTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getImage_exitingImage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertNotNull(AppUtil.getImage(\"/images/MyFitnessBuddy_icon.png\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getImage_nullGiven_throwsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_true_nothingHappens() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        AppUtil.checkArgument(true, \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String errorMessage \u003d \"error message\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 35,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/LogicManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DAY_DISPLAYED_INDEX;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.MDAY1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.storage.JsonMyFitnessBuddyStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.testutil.DayBuilder;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.testutil.TypicalProfiles;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManagerTest {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path temporaryFolder;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonMyFitnessBuddyStorage addressBookStorage \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                new JsonMyFitnessBuddyStorage(temporaryFolder.resolve(\"addressBook.json\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidCommandFormat_throwsParseException() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidCommand \u003d \"uicfhmowqewca\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_commandExecutionError_throwsCommandException() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        String deleteCommand \u003d \"delete 9\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertCommandException(deleteCommand, MESSAGE_INVALID_DAY_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_validCommand_success() throws Exception {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        String listCommand \u003d ListCommand.COMMAND_WORD;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    // error: im not too sure...?"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_storageThrowsIoException_throwsCommandException() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonMyFitnessBuddyStorage addressBookStorage \u003d"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                new JsonMyFitnessBuddyIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        // Execute add command"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String addCommand \u003d AddCommand.COMMAND_WORD + DATE_DESC_1 + WEIGHT_DESC_1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Day expectedDay \u003d new DayBuilder(MDAY1).build();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        expectedModel.setProfile(TypicalProfiles.PROFILE1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        expectedModel.addDay(expectedDay);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void getFilteredDayList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredDayList().remove(0));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and confirms that"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * - no exceptions are thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandSuccess(String inputCommand, String expectedMessage,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            Model expectedModel) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult result \u003d logic.execute(inputCommand);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedMessage, result.getFeedbackToUser());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that a ParseException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertParseException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that a CommandException is thrown and that the result message is correct."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandException(String inputCommand, String expectedMessage) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command, confirms that the exception is thrown and that the result message is correct."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandFailure(String, Class, String, Model)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            String expectedMessage) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and confirms that"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the {@code expectedException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see #assertCommandSuccess(String, String, Model)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            String expectedMessage, Model expectedModel) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     * A stub class to throw an {@code IOException} when the save method is called."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static class JsonMyFitnessBuddyIoExceptionThrowingStub extends JsonMyFitnessBuddyStorage {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        private JsonMyFitnessBuddyIoExceptionThrowingStub(Path filePath) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            super(filePath);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        public void saveFitnessBuddy(ReadOnlyMyFitnessBuddy myFitnessBuddy, Path filePath) throws IOException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            throw DUMMY_IO_EXCEPTION;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 8,
      "ethanso56": 9,
      "-": 135,
      "jiaax": 8,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.getTypicalMyFitnessBuddy;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model) for {@code AddCommand}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandIntegrationTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        model \u003d new ModelManager(getTypicalMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void execute_newDay_success() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day validDay \u003d new DayBuilder().build();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        expectedModel.addDay(validDay);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertCommandSuccess(new AddCommand(validDay), model,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                String.format(AddCommand.MESSAGE_SUCCESS, validDay), expectedModel);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "*/"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePerson_throwsCommandException() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Day dayInList \u003d model.getMyFitnessBuddy().getPerson().getDayList().get(0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertCommandFailure(new AddCommand(dayInList), model, AddCommand.MESSAGE_DUPLICATE_DAY);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 3,
      "ethanso56": 7,
      "-": 31,
      "wayne987": 2,
      "jiaax": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.testutil.DayBuilder;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void constructor_nullDay_throwsNullPointerException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void execute_dayAcceptedByModel_addSuccessful() throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ModelStubAcceptingDayAdded modelStub \u003d new ModelStubAcceptingDayAdded();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day validDay \u003d new DayBuilder().build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        CommandResult commandResult \u003d new AddCommand(validDay).execute(modelStub);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e new AddCommand(validDay).execute(modelStub));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validDay), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(Arrays.asList(validDay), modelStub.daysAdded);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void execute_duplicateDay_throwsCommandException() throws Exception {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day validDay \u003d new DayBuilder().build();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        MyFitnessBuddy p \u003d new MyFitnessBuddy();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(validDay);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ModelStub modelStub \u003d new ModelStubWithDay(validDay);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_DAY, () -\u003e addCommand.execute(modelStub));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Day alice \u003d new DayBuilder().withDate(\"2020-06-09\").build();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Day bob \u003d new DayBuilder().withDate(\"2020-09-06\").build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommand \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addBobCommand \u003d new AddCommand(bob);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommand));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommandCopy));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(1));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(null));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // different day -\u003e returns false"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(addBobCommand));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        public Path getMyFitnessBuddyFilePath() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        public void setMyFitnessBuddyFilePath(Path myFitnessBuddyFilePath) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void addDay(Day day) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        public void setMyFitnessBuddy(ReadOnlyMyFitnessBuddy myFitnessBuddy) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        public ReadOnlyMyFitnessBuddy getMyFitnessBuddy() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public boolean hasDay(Day day) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public boolean hasDay(LocalDate date) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public Day getDay(LocalDate date) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void deleteDay(Day target) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void setDay(Day target, Day editedDay) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public ObservableList\u003cDay\u003e getFilteredDayList() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void updateFilteredDayList(Predicate\u003cDay\u003e predicate) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        public void setProfile(Profile profile) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         * Checks if the current data {@code MyFitnessBuddy} has a profile."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        public boolean isDefaultProfile() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void setCurrentPerson(Person toSet) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public boolean hasPerson(Person toCheck) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void updateDay() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void addPerson(Person toAdd) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void resetPersons() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * A Model stub that contains a single day."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private class ModelStubWithDay extends ModelStub {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        private final Day day;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ModelStubWithDay(Day day) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            requireNonNull(day);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.day \u003d day;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public boolean hasDay(Day day) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            requireNonNull(day);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return this.day.isSameDay(day);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * A Model stub that always accept the day being added."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private class ModelStubAcceptingDayAdded extends ModelStub {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        final ArrayList\u003cDay\u003e daysAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public boolean hasDay(Day day) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            requireNonNull(day);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return daysAdded.stream().anyMatch(day::isSameDay);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public void addDay(Day day) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            requireNonNull(day);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            daysAdded.add(day);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        public boolean isDefaultProfile() {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        public ReadOnlyMyFitnessBuddy getMyFitnessBuddy() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return new MyFitnessBuddy();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 14,
      "-": 161,
      "wayne987": 56,
      "jiaax": 31
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CalorieCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.INPUT_A;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.INPUT_B;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.getAnotherMyFitnessBuddy;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.testutil.TypicalDays;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class CalorieCommandTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private static final Profile validProfile \u003d TypicalDays.DEFAULT_PROFILE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_nullDay_throwsNullPointerException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new CalorieCommand(null, null, null));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void execute_duplicateTime_throwsCommandException() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Model model \u003d new ModelManager(getAnotherMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String date \u003d \"2020-11-23\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieCommand calorieCommand \u003d new CalorieCommand(INPUT_A, false, date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(CommandException.class, CalorieCommand.DUPLICATE_TIME, () -\u003e calorieCommand.execute(model));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void execute_noAvailableDay_throwsCommandException() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Model model \u003d new ModelManager(getAnotherMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String date \u003d \"2020-12-31\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieCommand calorieCommand \u003d new CalorieCommand(INPUT_A, false, date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(CommandException.class, CalorieCommand.NO_AVAILABLE_DAY, () -\u003e calorieCommand.execute(model));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void getDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String date \u003d \"2020-12-31\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String invalidDate \u003d \"2020-13-31\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieCommand calorieCommand \u003d new CalorieCommand(INPUT_A, false, date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(CommandException.class, CalorieCommand.INVALID_DATE , ()-\u003e calorieCommand.getDate(invalidDate));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String empty \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            assertEquals(LocalDate.now() , calorieCommand.getDate(empty));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (CommandException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            assertEquals(LocalDate.parse(date) , calorieCommand.getDate(date));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (CommandException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieCommand testA \u003d new CalorieCommand(INPUT_A, true, \"2020-10-10\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieCommand testB \u003d new CalorieCommand(INPUT_B, true, \"2020-10-10\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(testA.equals(testA), true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(testA.equals(testB), false);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "wayne987": 76
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ClearCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static seedu.address.testutil.TypicalDays.getTypicalMyFitnessBuddy;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class ClearCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//    public void execute_emptyMyFitnessBuddy_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        CommandResult expectedCommandResult \u003d new CommandResult(ClearCommand.MESSAGE_SUCCESS, false, false,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//                false, false, false, true, false, 0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        assertCommandSuccess(new ClearCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//    public void execute_overloadedConstructorSuccess() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        CommandResult expectedCommandResult \u003d new CommandResult(ClearCommand.MESSAGE_SUCCESS, true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        assertCommandSuccess(new ClearCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//    public void execute_nonEmptyMyFitnessBuddy_success() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        Model model \u003d new ModelManager(getTypicalMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        Model expectedModel \u003d new ModelManager(getTypicalMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        expectedModel.setMyFitnessBuddy(new MyFitnessBuddy());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        CommandResult expectedCommandResult \u003d new CommandResult(ClearCommand.MESSAGE_SUCCESS, false, false,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//                false, false, false, true, false, 0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//        assertCommandSuccess(new ClearCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "wayne987": 35
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CommandResultTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResultTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                false, false, false, false, false, 0,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 0, false)));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(commandResult.equals(commandResult));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(0.5f));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        // different feedbackToUser value -\u003e returns false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"different\")));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        // different showHelp value -\u003e returns false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                false, false, false, false, false, 0,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 0, false)));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        // different exit value -\u003e returns false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                false, false, false, false, false, 0,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 0, false)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //different showAllStats value -\u003e returns false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                true, false, false, false, false, 0,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 0, false)));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //different showCalorieStats value -\u003e returns false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                false, true, false, false, false, 0,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 0, false)));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //different showWeightStats value -\u003e returns false"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                false, false, true, false, false, 0,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 0, false)));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //different clear value -\u003e returns false"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                false, false, false, true, false, 0,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 0, false)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //different delete value -\u003e returns false"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                false, false, false, false, true, 1,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 0, false)));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //different indexDelete value -\u003e return false"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                false, false, false, false, false, 1,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 0, false)));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //different view value -\u003e return false"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                false, false, false, false, false, 0,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, true, 0, false)));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //different indexView value -\u003e return false"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                false, false, false, false, false, 0,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 1, false)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hashcode() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns same hashcode"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        // different feedbackToUser value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        // different showHelp value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertNotEquals(commandResult.hashCode(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(\"feedback\", true, false, false,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        false, false, false, false, 0,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, 0, false).hashCode());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        // different exit value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertNotEquals(commandResult.hashCode(),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(\"feedback\", false, true, false,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        false, false, false, false, 0,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, 0, false).hashCode());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //different showAllStats value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertNotEquals(commandResult.hashCode(),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(\"feedback\", false, false, true,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        false, false, false, false, 0,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, 0, false).hashCode());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //different showCalorieStats value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertNotEquals(commandResult.hashCode(),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(\"feedback\", false, false, false,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        true, false, false, false, 0,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, 0, false).hashCode());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //different showWeightStats value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertNotEquals(commandResult.hashCode(),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(\"feedback\", false, false, false,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        false, true, false, false, 0,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, 0, false).hashCode());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //different clear value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertNotEquals(commandResult.hashCode(),"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(\"feedback\", false, false, false,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        false, false, true, false, 0,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, 0, false).hashCode());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //different delete value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertNotEquals(commandResult.hashCode(),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(\"feedback\", false, false, false,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        false, false, false, true, 0,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, 0, false).hashCode());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //different indexDelete value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertNotEquals(commandResult.hashCode(),"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(\"feedback\", false, false, false,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        false, false, false, false, 1,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, 0, false).hashCode());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //different view value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertNotEquals(commandResult.hashCode(),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(\"feedback\", false, false, false,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        false, false, false, false, 0,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, true, 0, false).hashCode());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //different indexView value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertNotEquals(commandResult.hashCode(),"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(\"feedback\", false, false, false,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        false, false, false, false, 0,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, 1, false).hashCode());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 65,
      "-": 49,
      "junhui-phoon": 41
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CommandTestUtil.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.testutil.EditDayDescriptorBuilder;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains helper methods for testing commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandTestUtil {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String VALID_DATE_1 \u003d \"2019-12-23\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String VALID_DATE_2 \u003d \"2020-10-11\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String VALID_WEIGHT_1 \u003d \"45\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String VALID_WEIGHT_2 \u003d \"95\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String DATE_DESC_1 \u003d \" \" + PREFIX_DATE + VALID_DATE_1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String DATE_DESC_2 \u003d \" \" + PREFIX_DATE + VALID_DATE_2;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String WEIGHT_DESC_1 \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final String WEIGHT_DESC_2 \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_2;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String INVALID_DATE_DESC \u003d \"2020-10\u002614\"; // \u0027\u0026\u0027 not allowed in dates"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String INVALID_WEIGHT_DESC \u003d \" \" + PREFIX_WEIGHT + \"91a\"; // \u0027a\u0027 not allowed in weight"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final EditCommand.EditDayDescriptor DESC_1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final EditCommand.EditDayDescriptor DESC_2;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        DESC_1 \u003d new EditDayDescriptorBuilder().withDate(VALID_DATE_1)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                .withWeight(VALID_WEIGHT_1)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                 .build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        DESC_2 \u003d new EditDayDescriptorBuilder().withDate(VALID_DATE_2)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                .withWeight(VALID_WEIGHT_2)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the {@code actualModel} matches {@code expectedModel}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            Model expectedModel) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult result \u003d command.execute(actualModel);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedCommandResult, result);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedModel, actualModel);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException ce) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"Execution of command should not fail.\", ce);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * that takes a string {@code expectedMessage}."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            Model expectedModel) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * - a {@code CommandException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * - My Fitness Buddy, filtered day list and selected day in {@code actualModel} remain unchanged"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        // we are unable to defensively copy the model for comparison later, so we can"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        // only do so by copying its components."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        MyFitnessBuddy myFitnessBuddy \u003d new MyFitnessBuddy(actualModel.getMyFitnessBuddy());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        List\u003cDay\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredDayList());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(myFitnessBuddy, actualModel.getMyFitnessBuddy());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(expectedFilteredList, actualModel.getFilteredDayList());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //error due to refactoring"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //     * Updates {@code model}\u0027s filtered list to show only the day at the given {@code targetIndex} in the"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //     * {@code model}\u0027s My Fitness Buddy records."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    public static void showDayAtIndex(Model model, Index targetIndex) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredDayList().size());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        Day day \u003d model.getFilteredDayList().get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        final String[] splitDate \u003d day.getDate().value.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        model.updateFilteredDayList(new NameContainsKeywordsPredicate(Arrays.asList(splitDate[0])));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        //assertEquals(1, model.getFilteredDayList().size());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 2,
      "ethanso56": 17,
      "-": 63,
      "wayne987": 19,
      "junhui-phoon": 3,
      "jiaax": 6
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CreateCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.getTypicalMyFitnessBuddy;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Height;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.testutil.TypicalProfiles;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "class CreateCommandTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Profile JON \u003d TypicalProfiles.PROFILE1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private static Profile defaultProfile \u003d TypicalProfiles.DEFAULT_PROFILE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor_nullDay_throwsNullPointerException() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new CreateCommand(null));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void execute_createProfile_createSuccessful() throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        model.setProfile(defaultProfile);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        CreateCommand createCommand \u003d new CreateCommand(JON);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String expectedMessage \u003d String.format(CreateCommand.MESSAGE_SUCCESS, JON);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //assertCommandSuccess(createCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void execute_createExistingProfileFail_throwsCommandException() throws Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Profile validProfile \u003d TypicalProfiles.PROFILE1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        CreateCommand createCommand \u003d new CreateCommand(validProfile);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        expectedModel.setCurrentPerson(new Person(validProfile));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e createCommand.execute(expectedModel));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Profile alice \u003d new Profile(new Name(\"John\"), new ID(\"1219\"), new Height(\"170\"), new Weight(\"68\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Profile bob \u003d new Profile(new Name(\"Johnny\"), new ID(\"1318\"), new Height(\"170\"), new Weight(\"68\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        CreateCommand addAliceCommand \u003d new CreateCommand(alice);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        CreateCommand addBobCommand \u003d new CreateCommand(bob);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommand));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        CreateCommand addAliceCommandCopy \u003d new CreateCommand(alice);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommandCopy));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(addAliceCommand.equals(1));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(addAliceCommand.equals(null));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // different day -\u003e returns false"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(addAliceCommand.equals(addBobCommand));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 3,
      "wayne987": 4,
      "jiaax": 69,
      "junhui-phoon": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/DeleteCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.showDayAtIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.getTypicalMyFitnessBuddy;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_DAY;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " * {@code DeleteCommand}."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //error due to refactoring: filtered days of expectedModel and actualModel, day 0 and 1 positions are swapped"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    // which is why there is error but idk how to resolve"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_validIndexUnfilteredList_success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day dayToDelete \u003d model.getFilteredDayList().get(INDEX_FIRST_DAY.getZeroBased());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_DAY_SUCCESS, dayToDelete);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        ModelManager expectedModel \u003d new ModelManager(model.getMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        expectedModel.deleteDay(dayToDelete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidIndexUnfilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDayList().size() + 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_DAY_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //error due to refactoring-- error msg: the day index provided is invalid"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_validIndexFilteredList_success() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        showDayAtIndex(model, INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        Day dayToDelete \u003d model.getFilteredDayList().get(INDEX_FIRST_DAY.getZeroBased());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_DAY_SUCCESS, dayToDelete);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        Model expectedModel \u003d new ModelManager(model.getMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        expectedModel.deleteDay(dayToDelete);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        showNoPerson(expectedModel);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        //assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //    public void execute_invalidIndexFilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        showDayAtIndex(model, INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        Index outOfBoundIndex \u003d INDEX_SECOND_DAY;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // ensures that outOfBoundIndex is still in bounds of address book list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertTrue(outOfBoundIndex.getZeroBased()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //          \u003c model.getMyFitnessBuddy().getPerson().getDayList().size());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_DAY_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //    public void equals() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_DAY);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // same object -\u003e returns true"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // same values -\u003e returns true"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // different types -\u003e returns false"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertFalse(deleteFirstCommand.equals(1));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // null -\u003e returns false"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertFalse(deleteFirstCommand.equals(null));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // different day -\u003e returns false"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //         * Updates {@code model}\u0027s filtered list to show no one."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //         */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //    private void showNoPerson(Model model) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        model.updateFilteredDayList(p -\u003e false);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertTrue(model.getFilteredDayList().isEmpty());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        showDayAtIndex(model, INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        Day dayToDelete \u003d model.getFilteredDayList().get(INDEX_FIRST_DAY.getZeroBased());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_DAY_SUCCESS, dayToDelete);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        Model expectedModel \u003d new ModelManager(model.getMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        expectedModel.deleteDay(dayToDelete);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        showNoPerson(expectedModel);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    public void execute_invalidIndexFilteredList_throwsCommandException() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        showDayAtIndex(model, INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        Index outOfBoundIndex \u003d INDEX_SECOND_DAY;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        // ensures that outOfBoundIndex is still in bounds of address book list"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getMyFitnessBuddy().getPerson().getDayList().size());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_DAY_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_DAY);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        // same object -\u003e returns true"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        // same values -\u003e returns true"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        // different types -\u003e returns false"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertFalse(deleteFirstCommand.equals(1));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        // null -\u003e returns false"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertFalse(deleteFirstCommand.equals(null));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        // different day -\u003e returns false"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //     * Updates {@code model}\u0027s filtered list to show no one."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    private void showNoPerson(Model model) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        model.updateFilteredDayList(p -\u003e false);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertTrue(model.getFilteredDayList().isEmpty());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "ethanso56": 7,
      "-": 41,
      "wayne987": 117,
      "jiaax": 8
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/EditCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_2;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_2;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.showDayAtIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_DAY;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.getTypicalMyFitnessBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.logic.commands.EditCommand.EditDayDescriptor;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.testutil.DayBuilder;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.testutil.EditDayDescriptorBuilder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for EditCommand."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandTest {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_allFieldsSpecifiedUnfilteredList_success() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day editedDay \u003d new DayBuilder().build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditCommand.EditDayDescriptor descriptor \u003d new EditDayDescriptorBuilder(editedDay).build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_DAY, descriptor);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_DAY_SUCCESS, editedDay);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new MyFitnessBuddy(model.getMyFitnessBuddy()), new UserPrefs());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        expectedModel.setDay(model.getFilteredDayList().get(0), editedDay);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_someFieldsSpecifiedUnfilteredList_success() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredDayList().size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day lastDay \u003d model.getFilteredDayList().get(indexLastPerson.getZeroBased());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        DayBuilder personInList \u003d new DayBuilder(lastDay);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day editedDay \u003d personInList.withDate(VALID_DATE_2).withWeight(VALID_WEIGHT_2)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_HUSBAND).build();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditCommand.EditDayDescriptor descriptor \u003d new EditDayDescriptorBuilder().withDate(VALID_DATE_2)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                .withWeight(VALID_WEIGHT_2).withTags(VALID_TAG_HUSBAND).build();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_DAY_SUCCESS, editedDay);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        expectedModel.setDay(lastDay, editedDay);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_noFieldSpecifiedUnfilteredList_success() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_DAY, new EditCommand.EditDayDescriptor());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day editedDay \u003d model.getFilteredDayList().get(INDEX_FIRST_DAY.getZeroBased());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_DAY_SUCCESS, editedDay);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new MyFitnessBuddy(model.getMyFitnessBuddy()), new UserPrefs());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_filteredList_success() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        showDayAtIndex(model, INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day dayInFilteredList \u003d model.getFilteredDayList().get(INDEX_FIRST_DAY.getZeroBased());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day editedDay \u003d new DayBuilder(dayInFilteredList).withDate(VALID_DATE_2).build();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_DAY,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new EditDayDescriptorBuilder().withDate(VALID_DATE_2).build());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_DAY_SUCCESS, editedDay);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        expectedModel.setDay(model.getFilteredDayList().get(0), editedDay);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePersonUnfilteredList_failure() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day firstDay \u003d model.getFilteredDayList().get(INDEX_FIRST_DAY.getZeroBased());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditDayDescriptor descriptor \u003d new EditDayDescriptorBuilder(firstDay).build();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_DAY, descriptor);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_DAY);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    public void execute_duplicatePersonFilteredList_failure() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        showDayAtIndex(model, INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        // edit day in filtered list into a duplicate in address book"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        Day dayInList \u003d model.getMyFitnessBuddy().getPerson().getDayList().get(INDEX_SECOND_DAY.getZeroBased());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_DAY,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //                new EditDayDescriptorBuilder(dayInList).build());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_DAY);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidPersonIndexUnfilteredList_failure() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDayList().size() + 1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditDayDescriptor descriptor \u003d new EditDayDescriptorBuilder().withDate(VALID_DATE_2).build();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_DAY_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     * Edit filtered list where index is larger than size of filtered list,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     * but smaller than size of address book"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    public void execute_invalidPersonIndexFilteredList_failure() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        showDayAtIndex(model, INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        Index outOfBoundIndex \u003d INDEX_SECOND_DAY;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        // ensures that outOfBoundIndex is still in bounds of address book list"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getMyFitnessBuddy().getPerson().getDayList().size());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //                new EditDayDescriptorBuilder().withDate(VALID_DATE_2).build());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_DAY_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_DAY, DESC_1);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditCommand.EditDayDescriptor copyDescriptor \u003d new EditCommand.EditDayDescriptor(DESC_1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_DAY, copyDescriptor);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(standardCommand.equals(commandWithSameValues));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(standardCommand.equals(standardCommand));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(null));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(new ClearCommand()));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        // different index -\u003e returns false"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_DAY, DESC_1)));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        // different descriptor -\u003e returns false"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_DAY, DESC_2)));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 5,
      "ethanso56": 44,
      "-": 90,
      "wayne987": 28,
      "jiaax": 4
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/EditDayDescriptorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_2;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_2;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.logic.commands.EditCommand.EditDayDescriptor;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.testutil.EditDayDescriptorBuilder;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class EditDayDescriptorTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditDayDescriptor descriptorWithSameValues \u003d new EditDayDescriptor(DESC_1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertTrue(DESC_1.equals(descriptorWithSameValues));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertTrue(DESC_1.equals(DESC_1));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(DESC_1.equals(null));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(DESC_1.equals(5));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        // different values -\u003e returns false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(DESC_1.equals(DESC_2));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditDayDescriptor editedAmy \u003d new EditDayDescriptorBuilder(DESC_1).withDate(VALID_DATE_2).build();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(DESC_1.equals(editedAmy));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        // different weight -\u003e returns false"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        editedAmy \u003d new EditDayDescriptorBuilder(DESC_1).withWeight(VALID_WEIGHT_2).build();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(DESC_1.equals(editedAmy));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 17,
      "-": 25,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ExitCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_exit_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, false, false, 0,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, 0, false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void execute_exitOverloadedConstructor_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "-": 21,
      "junhui-phoon": 8
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/FindCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//import static seedu.address.testutil.TypicalDays.CARL;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//import static seedu.address.testutil.TypicalDays.ELLE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//import static seedu.address.testutil.TypicalDays.FIONA;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.getTypicalMyFitnessBuddy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model) for {@code FindCommand}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindCommandTest {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Model expectedModel \u003d new ModelManager(getTypicalMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate firstPredicate \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate secondPredicate \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommand));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(findFirstCommand.equals(findFirstCommandCopy));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(findFirstCommand.equals(1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(findFirstCommand.equals(null));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // different day -\u003e returns false"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(findFirstCommand.equals(findSecondCommand));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    public void execute_zeroKeywords_noPersonFound() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        FindCommand command \u003d new FindCommand(predicate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        expectedModel.updateFilteredDayList(predicate);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //        assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertEquals(Collections.emptyList(), model.getFilteredDayList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //error due to refactoring"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        public void execute_multipleKeywords_multiplePersonsFound() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //            String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //            NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"2020-01-23 2020-09-12 2020-03-01\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //            FindCommand command \u003d new FindCommand(predicate);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //            expectedModel.updateFilteredDayList(predicate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //            //assertCommandSuccess(command, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //            //assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredDayList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private NameContainsKeywordsPredicate preparePredicate(String userInput) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "ethanso56": 1,
      "-": 54,
      "wayne987": 22,
      "jiaax": 6
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/HelpCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_help_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                false, false, false, false, false, 0,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                false, false, 0, false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void execute_helpOverloadedConstructor_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new CommandResult(SHOWING_HELP_MESSAGE, true, false);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 2,
      "-": 21,
      "junhui-phoon": 6
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ListCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.showDayAtIndex;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.getTypicalMyFitnessBuddy;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model) and unit tests for ListCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        model \u003d new ModelManager(getTypicalMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        expectedModel \u003d new ModelManager(model.getMyFitnessBuddy(), new UserPrefs());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_listIsNotFiltered_showsSameList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    //    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    public void execute_listIsFiltered_showsEverything() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        showDayAtIndex(model, INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "-": 29,
      "wayne987": 7,
      "jiaax": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/StatsCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.commands.StatsCommand.SHOWING_ALL_STATS_MESSAGE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.commands.StatsCommand.SHOWING_CALORIE_STATS_MESSAGE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.commands.StatsCommand.SHOWING_COMMANDER_STATS_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.commands.StatsCommand.SHOWING_WEIGHT_STATS_MESSAGE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class StatsCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void execute_viewBothStats_success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new CommandResult(SHOWING_ALL_STATS_MESSAGE, false, false, true,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                        false, false, false, false, 0,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, 0, false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertCommandSuccess(new StatsCommand(true, true, false), model,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void execute_viewBothStatsOverloadedConstructor_success() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new CommandResult(SHOWING_ALL_STATS_MESSAGE, true, false, false, false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertCommandSuccess(new StatsCommand(true, true, false), model,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void execute_viewCalorieStats_success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new CommandResult(SHOWING_CALORIE_STATS_MESSAGE, false, false, false,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        true, false, false, false, 0, false, false, 0, false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertCommandSuccess(new StatsCommand(true, false, false), model,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void execute_viewCalorieStatsOverloadedConstructor_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new CommandResult(SHOWING_CALORIE_STATS_MESSAGE, false, true, false, false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertCommandSuccess(new StatsCommand(true, false, false), model,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void execute_viewWeightStats_success() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new CommandResult(SHOWING_WEIGHT_STATS_MESSAGE, false, false, false,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, true, false, false, 0, false, false, 0, false);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertCommandSuccess(new StatsCommand(false, true, false), model,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void execute_viewWeightStatsOverloadedConstructor_success() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new CommandResult(SHOWING_WEIGHT_STATS_MESSAGE, false, false, true, false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertCommandSuccess(new StatsCommand(false, true, false), model,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void execute_viewCommanderStats_success() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new CommandResult(SHOWING_COMMANDER_STATS_MESSAGE, false, false, false,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                        false, false, false, false, 0, false, false, 0, true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertCommandSuccess(new StatsCommand(false, false, true), model,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void execute_viewCommanderStatsOverloadedConstructor_success() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                new CommandResult(SHOWING_COMMANDER_STATS_MESSAGE, false, false, false, true);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertCommandSuccess(new StatsCommand(false, false, true), model,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "                expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 2,
      "junhui-phoon": 85
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ViewCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_DAY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Contains unit tests for {@code ViewCommand}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class ViewCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_DAY);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertTrue(viewFirstCommand.equals(viewFirstCommand));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_DAY);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(viewFirstCommand.equals(1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(viewFirstCommand.equals(null));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // different day -\u003e returns false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(viewFirstCommand.equals(viewSecondCommand));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 36
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/AddCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_1;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_2;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEIGHT_DESC;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_2;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_2;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.MDAY1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.MDAY2;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.testutil.DayBuilder;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandParserTest {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private AddCommandParser parser \u003d new AddCommandParser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_allFieldsPresent_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Day expectedDay \u003d new DayBuilder(MDAY2).build();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // whitespace only preamble"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertParseSuccess(parser, PREAMBLE_WHITESPACE + DATE_DESC_2 + WEIGHT_DESC_2, new AddCommand(expectedDay));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //  not allowing multiple dates"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // multiple dates - last date accepted"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertParseSuccess(parser, DATE_DESC_1 + DATE_DESC_2 + WEIGHT_DESC_2"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //                + TAG_DESC_FRIEND, new AddCommand(expectedDay));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // multiple field not allowed"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // multiple weights - last weight accepted"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertParseSuccess(parser, DATE_DESC_2 + WEIGHT_DESC_1 + WEIGHT_DESC_2"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //                + TAG_DESC_FRIEND, new AddCommand(expectedDay));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_optionalFieldsMissing_success() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        // zero tags"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Day expectedDay \u003d new DayBuilder(MDAY1).build();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseSuccess(parser, DATE_DESC_1 + WEIGHT_DESC_1,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                new AddCommand(expectedDay));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_compulsoryFieldMissing_failure() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // missing date prefix"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseFailure(parser, VALID_DATE_2 + WEIGHT_DESC_2,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        // missing weight prefix"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseFailure(parser, DATE_DESC_2 + VALID_WEIGHT_2,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        // all prefixes missing"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseFailure(parser, VALID_DATE_2 + VALID_WEIGHT_2,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidValue_failure() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // invalid date"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //assertParseFailure(parser, INVALID_DATE_DESC + WEIGHT_DESC_2 + TAG_DESC_HUSBAND"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        //        + TAG_DESC_FRIEND, Date.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        // invalid weight"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertParseFailure(parser, DATE_DESC_2 + INVALID_WEIGHT_DESC, Weight.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        // two invalid values, only first invalid value reported"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //assertParseFailure(parser, INVALID_DATE_DESC + WEIGHT_DESC_2 + EMAIL_DESC_2 + INVALID_ADDRESS_DESC,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //                Date.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        // non-empty preamble"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertParseFailure(parser, PREAMBLE_NON_EMPTY + DATE_DESC_2 + WEIGHT_DESC_2,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 5,
      "ethanso56": 11,
      "-": 52,
      "wayne987": 12,
      "junhui-phoon": 10,
      "jiaax": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class ArgumentTokenizerTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Prefix pSlash \u003d new Prefix(\"p/\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Prefix dashT \u003d new Prefix(\"-t\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Prefix hatQ \u003d new Prefix(\"^Q\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void tokenize_emptyArgsString_noValues() throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        String argsString \u003d \"  \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertPreambleEmpty(argMultimap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArgumentAbsent(argMultimap, pSlash);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedPreamble, argMultimap.getPreamble());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(argMultimap.getPreamble().isEmpty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        // Verify the last value is returned"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        // Verify the number of values returned is as expected"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // Verify all values returned are as expected and in order"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c expectedValues.length; i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(argMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void tokenize_noPrefixes_allTakenAsPreamble() throws ParseException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // Same string expected as preamble, but leading/trailing spaces should be trimmed"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertPreamblePresent(argMultimap, argsString.trim());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void tokenize_oneArgument() throws ParseException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        // Preamble present"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        String argsString \u003d \"  Some preamble string p/ Argument value \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        assertPreamblePresent(argMultimap, \"Some preamble string\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        // No preamble"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        argsString \u003d \" p/   Argument value \";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertPreambleEmpty(argMultimap);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void tokenize_multipleArguments() throws ParseException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        // Only two arguments are present"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        assertPreamblePresent(argMultimap, \"SomePreambleString\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArgumentAbsent(argMultimap, hatQ);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        // All three arguments are present"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        assertPreamblePresent(argMultimap, \"Different Preamble String\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArgumentPresent(argMultimap, hatQ, \"111\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Also covers: Reusing of the tokenizer multiple times */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // (i.e. no stale values from the previous tokenizing remain)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        argsString \u003d \"\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        assertPreambleEmpty(argMultimap);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArgumentAbsent(argMultimap, pSlash);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Also covers: testing for prefixes not specified as a prefix */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prefixes not previously given to the tokenizer should not return any values"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        argsString \u003d unknownPrefix + \"some value\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        assertArgumentAbsent(argMultimap, unknownPrefix);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    not allowing multiple arguments repeat"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    public void tokenize_multipleArgumentsWithRepeats() throws ParseException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        // Two arguments repeated, some have empty values"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertPreamblePresent(argMultimap, \"SomePreambleString\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    Not allowing multiple arguments"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    public void tokenize_multipleArgumentsJoined() throws ParseException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertArgumentAbsent(argMultimap, pSlash);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //        assertArgumentAbsent(argMultimap, hatQ);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equalsMethod() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        Prefix aaa \u003d new Prefix(\"aaa\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(aaa, aaa);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(aaa, new Prefix(\"aaa\"));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(aaa, \"aaa\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(aaa, new Prefix(\"aab\"));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 126,
      "wayne987": 28
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/CalorieCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.CalorieCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.testutil.CalorieBuilder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class CalorieCommandParserTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private CalorieCommandParser parser \u003d new CalorieCommandParser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void parse_allFieldsPresent_success() throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Output calorie \u003d new CalorieBuilder().withTime(\"1234\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                             .withExercise(\"running\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                             .withCalorieCount(\"1234\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                             .buildOutput();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Input calorie2 \u003d new CalorieBuilder().withTime(\"1234\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                            .withFood(\"laksa\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                            .withCalorieCount(\"1234\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                            .buildInput();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String date \u003d LocalDate.now().toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // whitespace only preamble"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertParseSuccess(parser, \"    d/2020-10-10 tp/out t/1234 e/running c/1234\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                new CalorieCommand(calorie, true, \"2020-10-10\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // no date - current date"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertParseSuccess(parser, \" tp/in t/1234 f/laksa c/1234\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                new CalorieCommand(calorie2, false, date));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void parse_compulsoryFieldMissing_failure() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CalorieCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // missing type prefix"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertParseFailure(parser, \"e/running c/1234\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // missing activity prefix"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertParseFailure(parser, \"tp/out c/1234\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // missing calorie count prefix"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertParseFailure(parser, \"tp/out e/running\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // double field"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertParseFailure(parser, \"tp/out e/running f/asdf c/123 t/1234\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                expectedMessage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void parse_invalidValue_failure() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // wrong type value"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertParseFailure(parser, \" tp/asdf t/1234 e/running c/123\","
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                \"type can only be either in/out\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // wrong type value"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertParseFailure(parser, \" tp/out t/123 e/running c/123\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                Time.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // wrong activity prefix"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertParseFailure(parser, \" tp/out t/1230 f/laksa c/123\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CalorieCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // wrong activity prefix"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertParseFailure(parser, \" tp/out t/1230 f/running c/123\","
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CalorieCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 86
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * As we are only doing white-box testing, our test cases do not cover path variations"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * same path through the DeleteCommand, and therefore we test only one of them."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The path variation for those two cases occur inside the ParserUtil, and"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * therefore should be covered by the ParserUtilTest."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommandParserTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private DeleteCommandParser parser \u003d new DeleteCommandParser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_validArgs_returnsDeleteCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_DAY));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidArgs_throwsParseException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 2,
      "-": 30
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/EditCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_1;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEIGHT_DESC;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_1;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_2;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_2;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_DAY;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_DAY;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.logic.commands.EditCommand.EditDayDescriptor;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.testutil.EditDayDescriptorBuilder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandParserTest {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_INVALID_FORMAT \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_missingParts_failure() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        // no index specified"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // assertParseFailure(parser, \"VALID_DATE_1\", MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        // no field specified"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        // no index and no field specified"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidPreamble_failure() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        // negative index"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertParseFailure(parser, \"-5\" + DATE_DESC_1, MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        // zero index"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertParseFailure(parser, \"0\" + DATE_DESC_1, MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid arguments being parsed as preamble"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // invalid prefix being parsed as preamble"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidValue_failure() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC, Date.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // invalid date"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_WEIGHT_DESC, Weight.MESSAGE_CONSTRAINTS); // invalid weight"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // invalid weight"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertParseFailure(parser, \"1\" + INVALID_WEIGHT_DESC, Weight.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        // valid weight followed by invalid weight. The test case for invalid weight followed by valid weight"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertParseFailure(parser, \"1\" + WEIGHT_DESC_2 + INVALID_WEIGHT_DESC, Weight.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Day} being edited,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        // parsing it together with a valid tag results in error"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "*/"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        // multiple invalid values, but only the first invalid value is captured"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        + INVALID_EMAIL_DESC + VALID_ADDRESS_1 + VALID_WEIGHT_1,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //                Date.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_allFieldsSpecified_success() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Index targetIndex \u003d INDEX_SECOND_DAY;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + WEIGHT_DESC_2"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                + DATE_DESC_1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditDayDescriptor descriptor \u003d new EditDayDescriptorBuilder().withDate(VALID_DATE_1)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                .withWeight(VALID_WEIGHT_2)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        System.out.println(userInput);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_someFieldsSpecified_success() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Index targetIndex \u003d INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + WEIGHT_DESC_2;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditDayDescriptor descriptor \u003d new EditDayDescriptorBuilder().withWeight(VALID_WEIGHT_2)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "              .build();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_oneFieldSpecified_success() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // date"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Index targetIndex \u003d INDEX_THIRD_DAY;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_1;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditDayDescriptor descriptor \u003d new EditDayDescriptorBuilder().withDate(VALID_DATE_1).build();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        // weight"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + WEIGHT_DESC_1;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        descriptor \u003d new EditDayDescriptorBuilder().withWeight(VALID_WEIGHT_1).build();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_multipleRepeatedFields_acceptsLast() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Index targetIndex \u003d INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + WEIGHT_DESC_1"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                + WEIGHT_DESC_1"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                + WEIGHT_DESC_2;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditDayDescriptor descriptor \u003d new EditDayDescriptorBuilder().withWeight(VALID_WEIGHT_2)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parse_invalidValueFollowedByValidValue_success() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        // no other valid values specified"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Index targetIndex \u003d INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + INVALID_WEIGHT_DESC + WEIGHT_DESC_2;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        EditDayDescriptor descriptor \u003d new EditDayDescriptorBuilder().withWeight(VALID_WEIGHT_2).build();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        // other valid values specified"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + INVALID_WEIGHT_DESC"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                + WEIGHT_DESC_2;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        descriptor \u003d new EditDayDescriptorBuilder().withWeight(VALID_WEIGHT_2)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "               .build();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 8,
      "ethanso56": 40,
      "-": 104,
      "wayne987": 8,
      "junhui-phoon": 5
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/MyFitnessBuddyParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ClearCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.logic.commands.EditCommand.EditDayDescriptor;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.logic.commands.StatsCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.testutil.DayBuilder;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.testutil.DayUtil;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.testutil.EditDayDescriptorBuilder;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class MyFitnessBuddyParserTest {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final MyFitnessBuddyParser parser \u003d new MyFitnessBuddyParser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //error due to refactoring"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_add() throws Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Day day \u003d new DayBuilder().build();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        AddCommand command \u003d (AddCommand) parser.parseCommand(DayUtil.getAddCommand(day));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(new AddCommand(day), command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_clear() throws Exception {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_delete() throws Exception {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_DAY.getOneBased());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(new DeleteCommand(INDEX_FIRST_DAY), command);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_edit() throws Exception {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Day day \u003d new DayBuilder().build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        EditDayDescriptor descriptor \u003d new EditDayDescriptorBuilder(day).build();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                + INDEX_FIRST_DAY.getOneBased() + \" \" + DayUtil.getEditDayDescriptorDetails(descriptor));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(new EditCommand(INDEX_FIRST_DAY, descriptor), command);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_exit() throws Exception {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_find() throws Exception {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand command \u003d (FindCommand) parser.parseCommand("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_help() throws Exception {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_list() throws Exception {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unrecognisedInput_throwsParseException() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            -\u003e parser.parseCommand(\"\"));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unknownCommand_throwsParseException() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parseCommand_stats() throws Exception {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        StatsCommand command \u003d (StatsCommand) parser.parseCommand(StatsCommand.COMMAND_WORD + \" v/all\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertEquals(new StatsCommand(true, true, false), command);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 83,
      "jiaax": 20,
      "junhui-phoon": 7
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/ParserUtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserUtilTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private static final String INVALID_DATE \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final String INVALID_WEIGHT \u003d \"4a5\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_TAG \u003d \"#friend\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private static final String VALID_DATE \u003d \"2019-10-13\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final String VALID_WEIGHT \u003d \"45\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_TAG_1 \u003d \"friend\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_TAG_2 \u003d \"neighbour\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String WHITESPACE \u003d \" \\t\\r\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseIndex_invalidInput_throwsParseException() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseIndex_outOfRangeInput_throwsParseException() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseIndex_validInput_success() throws Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        // No whitespaces"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(INDEX_FIRST_DAY, ParserUtil.parseIndex(\"1\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // Leading and trailing whitespaces"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(INDEX_FIRST_DAY, ParserUtil.parseIndex(\"  1  \"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void parseDate_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate((String) null));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void parseDate_invalidValue_throwsParseException() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Date expectedDate \u003d new Date(VALID_DATE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Date expectedDate \u003d new Date(VALID_DATE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Date actualDate \u003d ParserUtil.parseDate(dateWithWhitespace);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(expectedDate, actualDate);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parseWeight_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseWeight((String) null));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parseWeight_invalidValue_throwsParseException() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWeight(INVALID_WEIGHT));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parseWeight_validValueWithoutWhitespace_returnsWeight() throws Exception {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Weight expectedWeight \u003d new Weight(VALID_WEIGHT);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertEquals(expectedWeight, ParserUtil.parseWeight(VALID_WEIGHT));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parseWeight_validValueWithWhitespace_returnsTrimmedWeight() throws Exception {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String weightWithWhitespace \u003d WHITESPACE + VALID_WEIGHT + WHITESPACE;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Weight expectedWeight \u003d new Weight(VALID_WEIGHT);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        Weight actualWeight \u003d ParserUtil.parseWeight(weightWithWhitespace);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertEquals(expectedWeight, actualWeight);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 1,
      "ethanso56": 16,
      "-": 60,
      "wayne987": 2,
      "junhui-phoon": 15
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/StatsCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.logic.commands.StatsCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class StatsCommandParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private StatsCommandParser parser \u003d new StatsCommandParser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parse_viewAllStats_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String userInput \u003d \" v/all\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        StatsCommand expectedCommand \u003d new StatsCommand(true, true, false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parse_viewCalorieStats_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String userInput \u003d \" v/calorie\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        StatsCommand expectedCommand \u003d new StatsCommand(true, false, false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parse_viewWeightStats_success() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String userInput \u003d \" v/weight\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        StatsCommand expectedCommand \u003d new StatsCommand(false, true, false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parse_viewCommanderStats_success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String userInput \u003d \" v/commander\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        StatsCommand expectedCommand \u003d new StatsCommand(false, false, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parse_noParameter_failure() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String userInput \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatsCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseFailure(parser, userInput, expectedMessage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parse_missingParameter_failure() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String userInput \u003d \" v/\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatsCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseFailure(parser, userInput, expectedMessage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void parse_incorrectParameter_failure() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String userInput \u003d \" v/both\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatsCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertParseFailure(parser, userInput, expectedMessage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 64
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DAY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.logic.commands.ViewCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * As we are only doing white-box testing, our test cases do not cover path variations"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * outside of the ViewCommand code. For example, inputs \"1\" and \"1 abc\" take the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * same path through the ViewCommand, and therefore we test only one of them."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * The path variation for those two cases occur inside the ParserUtil, and"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * therefore should be covered by the ParserUtilTest."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class ViewCommandParserTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private ViewCommandParser parser \u003d new ViewCommandParser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void parse_validArgs_returnsViewCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_DAY));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void parse_invalidArgs_throwsParseException() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 33
    }
  },
  {
    "path": "src/test/java/seedu/address/model/ModelManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DAYS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.DAY1;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.DAY2;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.testutil.MyFitnessBuddyBuilder;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManagerTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new UserPrefs(), modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new GuiSettings(), modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(new MyFitnessBuddy(), new MyFitnessBuddy(modelManager.getMyFitnessBuddy()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        userPrefs.setMyFitnessBuddyFilePath(Paths.get(\"address/book/file/path\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.setUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(userPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        // Modifying userPrefs should not modify modelManager\u0027s userPrefs"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        userPrefs.setMyFitnessBuddyFilePath(Paths.get(\"new/address/book/file/path\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(oldUserPrefs, modelManager.getUserPrefs());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings_validGuiSettings_setsGuiSettings() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(guiSettings, modelManager.getGuiSettings());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setMyFitnessBuddyFilePath_nullPath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.setMyFitnessBuddyFilePath(null));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setMyFitnessBuddyFilePath_validPath_setsMyFitnessBuddyFilePath() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        Path path \u003d Paths.get(\"address/book/file/path\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        modelManager.setMyFitnessBuddyFilePath(path);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(path, modelManager.getMyFitnessBuddyFilePath());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void hasDay_nullDay_throwsNullPointerException() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.hasDay((Day) null));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void hasDay_nullDate_throwsNullPointerException() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e modelManager.hasDay((LocalDate) null));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void hasDay_dayNotInDayList_returnsFalse() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(modelManager.hasDay(DAY1));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void hasDay_dayInMyFitnessBuddy_returnsTrue() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        modelManager.addDay(DAY1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(modelManager.hasDay(DAY1));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void getFilteredDayList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredDayList().remove(0));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        MyFitnessBuddy myFitnessBuddy \u003d new MyFitnessBuddyBuilder().withDay(DAY1).withDay(DAY2).build();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        MyFitnessBuddy differentFitnessBuddy \u003d new MyFitnessBuddy();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        modelManager \u003d new ModelManager(myFitnessBuddy, userPrefs);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        ModelManager modelManagerCopy \u003d new ModelManager(myFitnessBuddy, userPrefs);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.equals(modelManagerCopy));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.equals(modelManager));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.equals(null));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.equals(5));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // different myFitnessBuddy -\u003e returns false"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(modelManager.equals(new ModelManager(differentFitnessBuddy, userPrefs)));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        // different filteredList -\u003e returns false"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        String[] keywords \u003d DAY1.getDate().value.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        modelManager.updateFilteredDayList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertFalse(modelManager.equals(new ModelManager(myFitnessBuddy, userPrefs)));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        // resets modelManager to initial state for upcoming tests"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        modelManager.updateFilteredDayList(PREDICATE_SHOW_ALL_DAYS);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        // different userPrefs -\u003e returns false"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs differentUserPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        differentUserPrefs.setMyFitnessBuddyFilePath(Paths.get(\"differentFilePath\"));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(modelManager.equals(new ModelManager(myFitnessBuddy, differentUserPrefs)));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 5,
      "-": 97,
      "wayne987": 13,
      "jiaax": 24
    }
  },
  {
    "path": "src/test/java/seedu/address/model/MyFitnessBuddyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.DAY1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.DEFAULT_PROFILE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.getTypicalMyFitnessBuddy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.testutil.DayBuilder;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class MyFitnessBuddyTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final MyFitnessBuddy myFitnessBuddy \u003d new MyFitnessBuddy();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final Person person \u003d new PersonBuilder().withProfile(DEFAULT_PROFILE).build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(person, myFitnessBuddy.getPerson());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void resetData_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e myFitnessBuddy.resetData(null));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void resetData_withValidReadOnlyMyFitnessBuddy_replacesData() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        MyFitnessBuddy newData \u003d getTypicalMyFitnessBuddy();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        myFitnessBuddy.resetData(newData);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(newData, myFitnessBuddy);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    //error due to refactoring"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void resetData_withDuplicateDays_throwsDuplicateDayException() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // Two days with the same identity fields"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Day editedAlice \u003d new DayBuilder(DAY1)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        List\u003cDay\u003e newDays \u003d Arrays.asList(DAY1, editedAlice);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        MyFitnessBuddyStub newData \u003d new MyFitnessBuddyStub(newDays, person);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //assertThrows(DuplicateDayException.class, () -\u003e myFitnessBuddy.resetData(newData));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void hasDay_nullDay_throwsNullPointerException() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e myFitnessBuddy.getPerson().hasDay((Day) null));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void hasDay_dayNotInMyFitnessBuddy_returnsFalse() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(myFitnessBuddy.getPerson().hasDay(DAY1));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void hasDay_dayInMyFitnessBuddy_returnsTrue() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        myFitnessBuddy.addDay(DAY1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(myFitnessBuddy.getPerson().hasDay(DAY1));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void hasDay_dayWithSameIdentityFieldsInMyFitnessBuddy_returnsTrue() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        myFitnessBuddy.addDay(DAY1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Day editedAlice \u003d new DayBuilder(DAY1)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(myFitnessBuddy.getPerson().hasDay(editedAlice));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void getDayList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e myFitnessBuddy.getPerson().getDayList().remove(0));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * A stub ReadOnlyMyFitnessBuddy whose days list can violate interface constraints."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private static class MyFitnessBuddyStub implements ReadOnlyMyFitnessBuddy {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        private final ObservableList\u003cDay\u003e personList \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        private Person person;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        MyFitnessBuddyStub(Collection\u003cDay\u003e personList, Person person) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            this.person \u003d person;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            this.personList.setAll(personList);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         * Returns an unmodifiable view of the days list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         * This list will not contain any duplicate persons."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        public ObservableList\u003cDay\u003e getDayList() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return person.getDayList();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public ObservableList\u003cPerson\u003e getPersonList() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return persons;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         * Returns the profile of a person in My Fitness Buddy."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        public Profile getProfile() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return person.getProfile();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        public Person getPerson() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return person;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        public ObservableList\u003cPerson\u003e getPersons() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 3,
      "wayne987": 13,
      "jiaax": 117
    }
  },
  {
    "path": "src/test/java/seedu/address/model/UserPrefsTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPref \u003d new UserPrefs();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void setMyFitnessBuddyFilePath_nullPath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e userPrefs.setMyFitnessBuddyFilePath(null));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "jiaax": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/model/calorie/CalorieCountTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class CalorieCountTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new CalorieCount(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_invalidCalorieCount_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String invalidCalorieCount \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new CalorieCount(invalidCalorieCount));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void isValidCalorieCount() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // null CalorieCount"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e CalorieCount.isValidCalorieCount(null));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // invalid CalorieCount"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(CalorieCount.isValidCalorieCount(\"\")); // empty string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(CalorieCount.isValidCalorieCount(\" \")); // spaces only"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(CalorieCount.isValidCalorieCount(\"123a\")); // contains alphabet"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(CalorieCount.isValidCalorieCount(\"123$\")); // contains special character"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(CalorieCount.isValidCalorieCount(\"abc$%^\")); // contains both alphabet and special character"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // valid CalorieCount"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(CalorieCount.isValidCalorieCount(\"123455\")); // numbers only"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 37
    }
  },
  {
    "path": "src/test/java/seedu/address/model/calorie/CalorieManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.INPUT_A;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.INPUT_B;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.INPUT_C;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.OUTPUT_A;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.OUTPUT_B;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.OUTPUT_C;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.testutil.TypicalCalories;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class CalorieManagerTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void addTotalCalorieOutput() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addTotalCalorieOut(OUTPUT_A.getCalorieCount());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addTotalCalorieOut(OUTPUT_B.getCalorieCount());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addTotalCalorieOut(OUTPUT_C.getCalorieCount());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(666, calorieManager.getTotalOutputCalorie());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void addTotalCalorieInput() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addTotalCalorieInput(INPUT_A.getCalorieCount());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addTotalCalorieInput(INPUT_B.getCalorieCount());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addTotalCalorieInput(INPUT_C.getCalorieCount());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(603, calorieManager.getTotalInputCalorie());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void getCalorieInputList() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(calorieManager.getCalorieInputList(), new ArrayList\u003cInput\u003e());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(calorieManager.getCalorieInputList().isEmpty());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_A);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_B);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_C);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(TypicalCalories.getTypicalInputList(), calorieManager.getCalorieInputList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void getCalorieOutputList() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(calorieManager.getCalorieOutputList(), new ArrayList\u003cOutput\u003e());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(calorieManager.getCalorieOutputList().isEmpty());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_A);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_B);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_C);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(calorieManager.getCalorieOutputList(), TypicalCalories.getTypicalOutputList());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void getTotalInputCalorie() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_A);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_B);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_C);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(calorieManager.getTotalInputCalorie(), 603);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void getTotalOutputCalorie() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_A);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_B);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_C);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(calorieManager.getTotalOutputCalorie(), 666);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void updateTotalCalorieCounts() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.updateTotalCalorieCounts(TypicalCalories.getTypicalInputList(),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                                TypicalCalories.getTypicalOutputList());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(calorieManager.getTotalInputCalorie(), 603);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(calorieManager.getTotalOutputCalorie(), 666);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void getCalorie() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_A);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_B);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_C);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_A);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_B);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_C);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            assertEquals(calorieManager.getCalorie(false, Index.fromOneBased(2)), INPUT_B);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (CommandException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            assertEquals(calorieManager.getCalorie(true, Index.fromOneBased(2)), OUTPUT_B);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } catch (CommandException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void removeCalorie() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        CalorieManager calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_A);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_B);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(OUTPUT_C);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_A);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_B);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(INPUT_C);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.removeCalorie(false, Index.fromOneBased(2));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(402, calorieManager.getTotalInputCalorie());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.removeCalorie(true, Index.fromOneBased(2));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(444, calorieManager.getTotalOutputCalorie());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 135
    }
  },
  {
    "path": "src/test/java/seedu/address/model/calorie/ExerciseTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class ExerciseTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Exercise(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_invalidExercise_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String invalidExercise \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Exercise(invalidExercise));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void isValidExercise() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // invalid Exercise"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Exercise.isValidExercise(\"\")); // empty string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Exercise.isValidExercise(\" \")); // spaces only"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // valid Exercise"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Exercise.isValidExercise(\"running\")); // alphabets only"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Exercise.isValidExercise(\"running@stadium\")); // contains special character"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Exercise.isValidExercise(\"run for 5km\")); // contains number and space"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Exercise.isValidExercise(\"run for 5km @ track\")); // contains number, alphabet and special char"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/model/calorie/FoodTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class FoodTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Food(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_invalidFood_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String invalidFood \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Exercise(invalidFood));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void isValidFood() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // invalid Food"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Food.isValidFood(\"\")); // empty string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Food.isValidFood(\" \")); // spaces only"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // valid Food"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Food.isValidFood(\"laksa\")); // alphabets only"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Food.isValidFood(\"laksa@nus\")); // contains special character"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Food.isValidFood(\"5 bowls of laksa\")); // contains number and space"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Food.isValidFood(\"5 bowls of laksa @ nus\")); //contains number, alphabet and special char"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 33
    }
  },
  {
    "path": "src/test/java/seedu/address/model/calorie/InputTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "class InputTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final String invalidInput \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final Food food \u003d new Food(\"Laksa\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final Time time \u003d new Time(\"1200\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final CalorieCount calorieCount \u003d new CalorieCount(\"400\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Input(null, null, null));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor_invalidTime_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Input(new Time(invalidInput), food, calorieCount));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor_invalidFood_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Input(time, new Food(invalidInput), calorieCount));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor_invalidCalorieCount_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Input(time, food, new CalorieCount(invalidInput)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void getFood() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Food validFood \u003d new Food(\"Laksa\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Input input \u003d new Input(new Time(\"1200\"), validFood, new CalorieCount(\"200\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(validFood, input.getFood());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 1,
      "jiaax": 41
    }
  },
  {
    "path": "src/test/java/seedu/address/model/calorie/Output.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "class OutputTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final String invalidInput \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final Exercise exercise \u003d new Exercise(\"Running\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final Time time \u003d new Time(\"1200\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private final CalorieCount calorieCount \u003d new CalorieCount(\"400\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Output(null, null, null));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_invalidTime_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Output(new Time(invalidInput), exercise, calorieCount));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_invalidFood_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Output(time, new Exercise(invalidInput), calorieCount));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_invalidCalorieCount_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Output(time, exercise, new CalorieCount(invalidInput)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    void getFood() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Exercise validExercise \u003d new Exercise(\"running\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Output output \u003d new Output(new Time(\"1200\"), validExercise, new CalorieCount(\"200\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertEquals(validExercise, output.getExercise());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 42
    }
  },
  {
    "path": "src/test/java/seedu/address/model/calorie/TimeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.model.calorie;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class TimeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Time(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void constructor_invalidTime_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        String invalidTime \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Time(invalidTime));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public void isValidTime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // null Time"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e Time.isValidTime(null));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // invalid Time"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\"\")); // empty string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\" \")); // spaces only"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\"123\")); // less than 4 digits"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\"12345\")); // more than 5 digits"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\"9930\")); // hour greater than 23"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\"2399\")); // min greater than 59"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\"2460\")); // both time and min out of range"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\"23ab\")); // contains alphabet"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\"23$%\")); // contains special character"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\"ab$%\")); // no digit"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\"12 30\")); // contains space"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertFalse(Time.isValidTime(\"12 0\")); // contains space"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        // valid Time"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Time.isValidTime(\"2359\")); // alphabets only"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Time.isValidTime(\"0000\")); // alphabets only"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Time.isValidTime(\"1230\")); // alphabets only"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 46
    }
  },
  {
    "path": "src/test/java/seedu/address/model/day/DateTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.model.day;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DateTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Date(null));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void constructor_invalidDate_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String invalidDate \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void isValidDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // null date"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // invalid date"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(Date.isValidDate(\"\")); // empty string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertFalse(Date.isValidDate(\" \")); // spaces only"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // valid date"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertTrue(Date.isValidDate(\"2020-06-09\")); // numbers only"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 33,
      "wayne987": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/model/day/DayTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.model.day;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_2;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_2;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "//import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.DAY1;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.MDAY2;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieCount;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Exercise;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Food;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.testutil.DayBuilder;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DayTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Time TIME \u003d new Time(\"1200\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Exercise EXERCISE \u003d new Exercise(\"run\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Food FOOD \u003d new Food(\"Laksa\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final CalorieCount CALORIE_COUNT \u003d new CalorieCount(\"300\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Input INPUT \u003d new Input(TIME, FOOD, CALORIE_COUNT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Output OUTPUT \u003d new Output(TIME, EXERCISE, CALORIE_COUNT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void asObservableList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day day \u003d new DayBuilder().build();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e day.getTags().remove(0));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void isSameDay() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(DAY1.isSameDay(DAY1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(DAY1.isSameDay(null));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        // different weight and email -\u003e returns false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Day editedAlice \u003d new DayBuilder(DAY1).withWeight(VALID_WEIGHT_2).build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        //assertFalse(ALICE.isSameDay(editedAlice));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // different date -\u003e returns false"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        editedAlice \u003d new DayBuilder(DAY1).withDate(VALID_DATE_2).build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(DAY1.isSameDay(editedAlice));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // same date, same weight, different attributes -\u003e returns true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        editedAlice \u003d new DayBuilder(DAY1)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "               .build();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(DAY1.isSameDay(editedAlice));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // same date, same email, different attributes -\u003e returns true"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        editedAlice \u003d new DayBuilder(DAY1).withWeight(VALID_WEIGHT_2)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "              .build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(DAY1.isSameDay(editedAlice));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // same date, same weight, same email, different attributes -\u003e returns true"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        editedAlice \u003d new DayBuilder(DAY1).build();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(DAY1.isSameDay(editedAlice));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Day aliceCopy \u003d new DayBuilder(DAY1).build();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(DAY1.equals(aliceCopy));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(DAY1.equals(DAY1));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(DAY1.equals(null));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        // different type -\u003e returns false"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(DAY1.equals(5));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // different day -\u003e returns false"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(DAY1.equals(MDAY2));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // different date -\u003e returns false"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Day editedAlice \u003d new DayBuilder(DAY1).withDate(VALID_DATE_2).build();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(DAY1.equals(editedAlice));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 7,
      "ethanso56": 14,
      "-": 36,
      "wayne987": 6,
      "jiaax": 28,
      "junhui-phoon": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/model/day/NameContainsKeywordsPredicateTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.model.day;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "//import seedu.address.testutil.DayBuilder;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class NameContainsKeywordsPredicateTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"010120\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"010120\", \"020120\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(firstPredicate.equals(firstPredicate));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(firstPredicate.equals(firstPredicateCopy));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(firstPredicate.equals(1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(firstPredicate.equals(null));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // different day -\u003e returns false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(firstPredicate.equals(secondPredicate));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    //    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void test_nameContainsKeywords_returnsTrue() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        // One keyword"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //                Collections.singletonList(\"2020-06-09\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertTrue(predicate.test(new DayBuilder().withDate(\"2020-06-09\").build()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // Multiple keywords"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"2020-06-09\", \"2020-07-09\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertTrue(predicate.test(new DayBuilder().withDate(\"2020-06-09\").build()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // Only one matching keyword"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"2020-07-09\", \"2020-07-09\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertTrue(predicate.test(new DayBuilder().withDate(\"2020-07-09\").build()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //        // Mixed-case keywords"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        //        assertTrue(predicate.test(new DayBuilder().withDate(\"Alice Bob\").build()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public void test_nameDoesNotContainKeywords_returnsFalse() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // Zero keywords"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertFalse(predicate.test(new DayBuilder().withDate(\"2020-06-09\").build()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // Non-matching keyword"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"2020-06-09\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertFalse(predicate.test(new DayBuilder().withDate(\"2020-07-09\").build()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        // Keywords match phone, email and address, but does not match name"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        predicate \u003d new NameContainsKeywordsPredicate"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        (Arrays.asList(\"42\", \"alice@email.com\", \"Main\", \"Street\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //        assertFalse(predicate.test(new DayBuilder().withDate(\"2020-06-09\").withWeight(\"42\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //              .build()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 7,
      "-": 44,
      "wayne987": 27
    }
  },
  {
    "path": "src/test/java/seedu/address/model/day/UniqueDayListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.model.day;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.DAY1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.MDAY2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.exceptions.DayNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.exceptions.DuplicateDayException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class UniqueDayListTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private final UniqueDayList uniqueDayList \u003d new UniqueDayList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void contains_nullDay_throwsNullPointerException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        Day day \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueDayList.contains(day));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void contains_dayNotInList_returnsFalse() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(uniqueDayList.contains(DAY1));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void contains_dayInList_returnsTrue() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        uniqueDayList.add(DAY1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(uniqueDayList.contains(DAY1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void contains_dayWithSameIdentityFieldsInList_returnsTrue() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        uniqueDayList.add(ALICE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day editedAlice \u003d new DayBuilder(ALICE).withAddress(VALID_ADDRESS_2).withTags(VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertTrue(uniqueDayList.contains(editedAlice));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void add_nullDay_throwsNullPointerException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueDayList.add(null));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void add_duplicateDay_throwsDuplicateDayException() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        uniqueDayList.add(ALICE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(DuplicateDayException.class, () -\u003e uniqueDayList.add(ALICE));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDay_nullTargetDay_throwsNullPointerException() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueDayList.setDay(null, DAY1));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDay_nullEditedDay_throwsNullPointerException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueDayList.setDay(DAY1, null));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDay_targetDayNotInList_throwsDayNotFoundException() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(DayNotFoundException.class, () -\u003e uniqueDayList.setDay(DAY1, DAY1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDay_editedDayIsSameDay_success() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        uniqueDayList.add(DAY1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        uniqueDayList.setDay(DAY1, DAY1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        UniqueDayList expectedUniqueDayList \u003d new UniqueDayList();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        expectedUniqueDayList.add(DAY1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(expectedUniqueDayList, uniqueDayList);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDay_editedDayHasSameIdentity_success() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        uniqueDayList.add(ALICE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Day editedAlice \u003d new DayBuilder(ALICE).withAddress(VALID_ADDRESS_2).withTags(VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        uniqueDayList.setDay(ALICE, editedAlice);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        UniqueDayList expectedUniqueDayList \u003d new UniqueDayList();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        expectedUniqueDayList.add(editedAlice);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(expectedUniqueDayList, uniqueDayList);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDay_editedDayHasDifferentIdentity_success() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        uniqueDayList.add(DAY1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        uniqueDayList.setDay(DAY1, MDAY2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        UniqueDayList expectedUniqueDayList \u003d new UniqueDayList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        expectedUniqueDayList.add(MDAY2);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(expectedUniqueDayList, uniqueDayList);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDay_editedDayHasNonUniqueIdentity_throwsDuplicateDayException() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        uniqueDayList.add(ALICE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        uniqueDayList.add(BOB);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(DuplicateDayException.class, () -\u003e uniqueDayList.setDay(ALICE, BOB));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void remove_nullDay_throwsNullPointerException() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueDayList.remove(null));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void remove_dayDoesNotExist_throwsDayNotFoundException() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(DayNotFoundException.class, () -\u003e uniqueDayList.remove(DAY1));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void remove_existingDay_removesDay() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        uniqueDayList.add(DAY1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        uniqueDayList.remove(DAY1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        UniqueDayList expectedUniqueDayList \u003d new UniqueDayList();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(expectedUniqueDayList, uniqueDayList);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDays_nullUniqueDayList_throwsNullPointerException() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueDayList.setDays((UniqueDayList) null));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDays_uniqueDayList_replacesOwnListWithProvidedUniqueDayList() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        uniqueDayList.add(DAY1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        UniqueDayList expectedUniqueDayList \u003d new UniqueDayList();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        expectedUniqueDayList.add(MDAY2);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        uniqueDayList.setDays(expectedUniqueDayList);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(expectedUniqueDayList, uniqueDayList);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDays_nullList_throwsNullPointerException() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e uniqueDayList.setDays((List\u003cDay\u003e) null));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDays_list_replacesOwnListWithProvidedList() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        uniqueDayList.add(DAY1);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        List\u003cDay\u003e dayList \u003d Collections.singletonList(MDAY2);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        uniqueDayList.setDays(dayList);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        UniqueDayList expectedUniqueDayList \u003d new UniqueDayList();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        expectedUniqueDayList.add(MDAY2);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(expectedUniqueDayList, uniqueDayList);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDays_listWithDuplicateDays_throwsDuplicateDayException() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        List\u003cDay\u003e listWithDuplicateDays \u003d Arrays.asList(DAY1, DAY1);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(DuplicateDayException.class, () -\u003e uniqueDayList.setDays(listWithDuplicateDays));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, ()"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            -\u003e uniqueDayList.asUnmodifiableObservableList().remove(0));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 8,
      "ethanso56": 140,
      "wayne987": 2,
      "jiaax": 23
    }
  },
  {
    "path": "src/test/java/seedu/address/model/day/WeightTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "package seedu.address.model.day;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "public class WeightTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Weight(null));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void constructor_invalidWeight_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String invalidWeight \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Weight(invalidWeight));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void isValidWeight() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        // null phone number"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e Weight.isValidWeight(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        // invalid weight numbers"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertFalse(Weight.isValidWeight(\"\")); // empty string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertFalse(Weight.isValidWeight(\" \")); // spaces only"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertFalse(Weight.isValidWeight(\"phone\")); // non-numeric"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertFalse(Weight.isValidWeight(\"9p1\")); // alphabets within digits"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertFalse(Weight.isValidWeight(\"9 1\")); // spaces within digits"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        // valid weight numbers"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertTrue(Weight.isValidWeight(\"70\")); // exactly 2 digits"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        assertTrue(Weight.isValidWeight(\"120\")); // exactly 3 digits"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhui-phoon": 38
    }
  },
  {
    "path": "src/test/java/seedu/address/model/person/HeightTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "class HeightTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Height(null));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void isValidHeight() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e Height.isValidHeight(null));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(Height.isValidHeight(\"170\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(Height.isValidHeight(\"200\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(Height.isValidHeight(\"1700\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(Height.isValidHeight(\"17\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(Height.isValidHeight(\" \"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 27
    }
  },
  {
    "path": "src/test/java/seedu/address/model/person/IdTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "class IdTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new ID(null));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor_invalidID_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String invalidID \u003d \"    \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new ID(invalidID));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void isValidId() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // null Id"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e ID.isValidId(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // invalid Id"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(ID.isValidId(\"    \")); // spaces only"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(ID.isValidId(\"abc1\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(ID.isValidId(\"ab 1\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // invalid first 2 digits"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(ID.isValidId(\"0111\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(ID.isValidId(\"1011\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(ID.isValidId(\"0011\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(ID.isValidId(\"5411\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(ID.isValidId(\"4511\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // invalid last 2 digits"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(ID.isValidId(\"1234\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(ID.isValidId(\"1200\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(ID.isValidId(\"1221\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // valid Id"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(ID.isValidId(\"1101\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(ID.isValidId(\"1120\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(ID.isValidId(\"4120\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(ID.isValidId(\"4420\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(ID.isValidId(\"4401\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 52
    }
  },
  {
    "path": "src/test/java/seedu/address/model/person/NameTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "class NameTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Name(null));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_invalidName_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        String invalidName \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void isValidName() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // null Name"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e Name.isValidName(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // invalid Name"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(Name.isValidName(\"\")); // empty string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(Name.isValidName(\" \")); // spaces only"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(Name.isValidName(\"jonny@nus\")); // contains special character"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        // valid Name"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(Name.isValidName(\"jonny\")); // alphabets only"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(Name.isValidName(\"jonny no 1\")); // contains number and space"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(Name.isValidName(\"jonny the man\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 26,
      "jiaax": 13
    }
  },
  {
    "path": "src/test/java/seedu/address/model/person/PersonTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.DAY1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.testutil.DayBuilder;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.testutil.TypicalProfiles;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private final Person person \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(Collections.emptyList(), person.getDayList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Person(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Person(null, null));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Person(TypicalProfiles.PROFILE1, null));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void hasDay_nullDay_throwsNullPointerException() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e person.hasDay((Day) null));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void hasDay_dayNotInPerson_returnsFalse() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(person.hasDay(DAY1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void hasDay_dayInPerson_returnsTrue() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        person.addDay(DAY1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(person.hasDay(DAY1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(person.hasDay(DAY1.getDate().get()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void hasDay_dayWithSameIdentityFieldsInPerson_returnsTrue() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        person.addDay(DAY1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Day editedAlice \u003d new DayBuilder(DAY1)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(person.hasDay(editedAlice));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(person.hasDay(editedAlice.getDate().get()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void isDefaultProfile() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Person personA \u003d new PersonBuilder().withProfile(TypicalProfiles.PROFILE1).build();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(person.isDefaultProfile());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(personA.isDefaultProfile());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void getDayList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e person.getDayList().remove(0));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void isSamePerson_returnsTrue() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Person personA \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Person personB \u003d new PersonBuilder().withProfile(TypicalProfiles.PROFILE1).build();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(personA.isSamePerson(personB));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(personA.isSamePerson(personA));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void testEquals() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Person personA \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Person personB \u003d new PersonBuilder().withProfile(TypicalProfiles.PROFILE1).build();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(personA.equals(personA));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(personA.equals(personB));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(personA.equals(TypicalProfiles.DEFAULT_PROFILE));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(personA.equals(null));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(personA.equals(5));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 5,
      "-": 28,
      "jiaax": 56
    }
  },
  {
    "path": "src/test/java/seedu/address/model/person/ProfileTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "class ProfileTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Name name \u003d new Name(\"jon\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private ID id \u003d new ID(\"1219\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Height height \u003d new Height(\"170\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Weight targetWeight \u003d new Weight(\"70\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Profile profile \u003d new Profile(name, id, height, targetWeight);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Profile(null, null, null, null));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void constructor_invalidWeight_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String invalidWeight \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new Weight(invalidWeight));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void getName() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(name.equals(profile.getName()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void getId() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(id.equals(profile.getId()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void getHeight() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(height.equals(profile.getHeight()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void getTargetWeight() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(targetWeight.equals(profile.getTargetWeight()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    void testEquals() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertTrue(profile.equals(new Profile(name, id, height, targetWeight)));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertFalse(profile.equals(targetWeight));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 54
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedCalorieManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.testutil.TypicalCalorieManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class JsonAdaptedCalorieManagerTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final CalorieManager VALID_CALORIE_MANAGER \u003d TypicalCalorieManager.CALORIE_MANAGER1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final List\u003cJsonAdaptedInput\u003e VALID_INPUT_LIST \u003d VALID_CALORIE_MANAGER.getCalorieInputList()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .stream().map(JsonAdaptedInput::new).collect(Collectors.toList());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final List\u003cJsonAdaptedOutput\u003e VALID_OUTPUT_LIST \u003d VALID_CALORIE_MANAGER.getCalorieOutputList()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .stream().map(JsonAdaptedOutput::new).collect(Collectors.toList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_validCalorieManagerDetails_returnsDay() throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedCalorieManager calorieManager \u003d new JsonAdaptedCalorieManager(VALID_CALORIE_MANAGER);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(VALID_CALORIE_MANAGER, calorieManager.toModelType());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullCalorieManager_throwsIllegalValueException() throws Exception {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedCalorieManager calorieManager \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                new JsonAdaptedCalorieManager(VALID_INPUT_LIST, VALID_OUTPUT_LIST);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(VALID_CALORIE_MANAGER, calorieManager.toModelType());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedDayTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.storage.JsonAdaptedDay.MISSING_FIELD_MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalCalorieManager.CALORIE_MANAGER1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static seedu.address.testutil.TypicalDays.DAY2;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class JsonAdaptedDayTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private static final String INVALID_DATE \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private static final String INVALID_WEIGHT \u003d \"7-0\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final CalorieManager VALID_CALORIE_MANAGER \u003d CALORIE_MANAGER1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private static final String VALID_DATE \u003d DAY2.getDate().toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private static final String VALID_WEIGHT \u003d DAY2.getWeight().toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void toModelType_validDayDetails_returnsDay() throws Exception {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        JsonAdaptedDay day \u003d new JsonAdaptedDay(DAY2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(DAY2, day.toModelType());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void toModelType_invalidDate_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        JsonAdaptedDay day \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                new JsonAdaptedDay(INVALID_DATE, VALID_WEIGHT, new JsonAdaptedCalorieManager(VALID_CALORIE_MANAGER));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, day::toModelType);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void toModelType_nullDate_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedDay day \u003d new JsonAdaptedDay(null, VALID_WEIGHT,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                new JsonAdaptedCalorieManager(VALID_CALORIE_MANAGER));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, day::toModelType);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void toModelType_invalidWeight_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        JsonAdaptedDay day \u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                new JsonAdaptedDay(VALID_DATE, INVALID_WEIGHT, new JsonAdaptedCalorieManager(VALID_CALORIE_MANAGER));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String expectedMessage \u003d Weight.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, day::toModelType);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public void toModelType_nullWeight_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedDay day \u003d new JsonAdaptedDay(VALID_DATE, null, new JsonAdaptedCalorieManager(VALID_CALORIE_MANAGER));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, day::toModelType);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullCalorieManager_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedDay day \u003d new JsonAdaptedDay(VALID_DATE, VALID_WEIGHT, null);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, CalorieManager.class.getSimpleName());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, day::toModelType);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 16,
      "ethanso56": 14,
      "-": 27,
      "wayne987": 1,
      "jiaax": 5,
      "junhui-phoon": 6
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedInputTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.storage.JsonAdaptedInput.MISSING_FIELD_MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.CalorieCount;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.Food;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.Time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class JsonAdaptedInputTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_TIME \u003d \"TEST\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_TIME_2 \u003d \"12345\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_TIME_3 \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_TIME_4 \u003d \"9999\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_FOOD \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_CALORIES \u003d \"TEST\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_CALORIES_2 \u003d \"-1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String VALID_TIME \u003d \"1230\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String VALID_FOOD \u003d \"Bread\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String VALID_CALORIES \u003d \"123\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Input VALID_INPUT \u003d new Input(new Time(VALID_TIME), new Food(VALID_FOOD),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new CalorieCount(VALID_CALORIES));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_validDayDetails_returnsDay() throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedInput input \u003d new JsonAdaptedInput(VALID_INPUT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(VALID_INPUT, input.toModelType());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidTime_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedInput input \u003d new JsonAdaptedInput(INVALID_TIME, VALID_FOOD, VALID_CALORIES);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, input::toModelType);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidTime2_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedInput input \u003d new JsonAdaptedInput(INVALID_TIME_2, VALID_FOOD, VALID_CALORIES);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, input::toModelType);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidTime3_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedInput input \u003d new JsonAdaptedInput(INVALID_TIME_3, VALID_FOOD, VALID_CALORIES);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, input::toModelType);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidTime4_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedInput input \u003d new JsonAdaptedInput(INVALID_TIME_4, VALID_FOOD, VALID_CALORIES);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, input::toModelType);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullTime_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedInput input \u003d new JsonAdaptedInput(null, VALID_FOOD, VALID_CALORIES);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, input::toModelType);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidFood_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedInput input \u003d new JsonAdaptedInput(VALID_TIME, INVALID_FOOD, VALID_CALORIES);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Food.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, input::toModelType);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullFood_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedInput input \u003d new JsonAdaptedInput(VALID_TIME, null, VALID_CALORIES);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Food.class.getSimpleName());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, input::toModelType);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidCalorieCount_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedInput input \u003d new JsonAdaptedInput(VALID_TIME, VALID_FOOD, INVALID_CALORIES);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d CalorieCount.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, input::toModelType);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidCalorieCount2_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedInput input \u003d new JsonAdaptedInput(VALID_TIME, VALID_FOOD, INVALID_CALORIES_2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d CalorieCount.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, input::toModelType);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullCalorieCount_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedInput input \u003d new JsonAdaptedInput(VALID_TIME, VALID_FOOD, null);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, CalorieCount.class.getSimpleName());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, input::toModelType);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 107
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedOutputTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.storage.JsonAdaptedOutput.MISSING_FIELD_MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.CalorieCount;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.Exercise;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.Time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class JsonAdaptedOutputTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_TIME \u003d \"TEST\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_TIME_2 \u003d \"12345\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_TIME_3 \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_TIME_4 \u003d \"9999\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_EXERCISE \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_CALORIES \u003d \"TEST\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_CALORIES_2 \u003d \"-1\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String VALID_TIME \u003d \"1230\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String VALID_EXERCISE \u003d \"Run\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String VALID_CALORIES \u003d \"123\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Output VALID_OUTPUT \u003d new Output(new Time(VALID_TIME), new Exercise(VALID_EXERCISE),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new CalorieCount(VALID_CALORIES));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_validDayDetails_returnsDay() throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedOutput output \u003d new JsonAdaptedOutput(VALID_OUTPUT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(VALID_OUTPUT, output.toModelType());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidTime_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedOutput output \u003d new JsonAdaptedOutput(INVALID_TIME, VALID_EXERCISE, VALID_CALORIES);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, output::toModelType);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidTime2_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedOutput output \u003d new JsonAdaptedOutput(INVALID_TIME_2, VALID_EXERCISE, VALID_CALORIES);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, output::toModelType);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidTime3_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedOutput output \u003d new JsonAdaptedOutput(INVALID_TIME_3, VALID_EXERCISE, VALID_CALORIES);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, output::toModelType);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidTime4_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedOutput output \u003d new JsonAdaptedOutput(INVALID_TIME_4, VALID_EXERCISE, VALID_CALORIES);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, output::toModelType);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullTime_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedOutput output \u003d new JsonAdaptedOutput(null, VALID_EXERCISE, VALID_CALORIES);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, output::toModelType);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidExercise_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedOutput output \u003d new JsonAdaptedOutput(VALID_TIME, INVALID_EXERCISE, VALID_CALORIES);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Exercise.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, output::toModelType);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullExercise_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedOutput output \u003d new JsonAdaptedOutput(VALID_TIME, null, VALID_CALORIES);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Exercise.class.getSimpleName());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, output::toModelType);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidCalorieCount_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedOutput output \u003d new JsonAdaptedOutput(VALID_TIME, VALID_EXERCISE, INVALID_CALORIES);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d CalorieCount.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, output::toModelType);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidCalorieCount2_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedOutput output \u003d new JsonAdaptedOutput(VALID_TIME, VALID_EXERCISE, INVALID_CALORIES_2);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d CalorieCount.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, output::toModelType);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullCalorieCount_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedOutput output \u003d new JsonAdaptedOutput(VALID_TIME, VALID_EXERCISE, null);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, CalorieCount.class.getSimpleName());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, output::toModelType);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 105
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.storage.JsonAdaptedPerson.MESSAGE_DUPLICATE_DAY;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.testutil.TypicalDays;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.testutil.TypicalPerson;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.testutil.TypicalProfiles;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonAdaptedPersonTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Profile VALID_PROFILE \u003d TypicalProfiles.PROFILE1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final List\u003cJsonAdaptedDay\u003e VALID_DAYS \u003d TypicalDays.getTypicalDays().stream()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .map(JsonAdaptedDay::new).collect(Collectors.toList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Person VALID_PERSON \u003d TypicalPerson.PERSON1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final List\u003cJsonAdaptedDay\u003e INVALID_DAYS \u003d TypicalDays.getDuplicateDays().stream()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .map(JsonAdaptedDay::new).collect(Collectors.toList());;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_validPersonDetails_returnsPerson() throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_PERSON);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(VALID_PERSON, person.toModelType());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullProfile_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_DAYS);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Profile.class.getSimpleName());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullDays_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(new JsonAdaptedProfile(VALID_PROFILE), null);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Day.class.getSimpleName());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidDays_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(new JsonAdaptedProfile(VALID_PROFILE),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                INVALID_DAYS);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d MESSAGE_DUPLICATE_DAY;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 25,
      "-": 33
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedProfileTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.storage.JsonAdaptedProfile.MISSING_FIELD_MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Height;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class JsonAdaptedProfileTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String VALID_NAME \u003d \"Sample Name\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String VALID_ID \u003d \"1111\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String VALID_HEIGHT \u003d \"170\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String VALID_TARGET_WEIGHT \u003d \"70\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String VALID_STARTING_DATE \u003d \"2020-01-01\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Profile VALID_PROFILE \u003d new Profile(new Name(VALID_NAME), new ID(VALID_ID),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new Height(VALID_HEIGHT), new Weight(VALID_TARGET_WEIGHT), new Date(VALID_STARTING_DATE));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_NAME \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_NAME_2 \u003d \"\u0026%*-\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_ID \u003d \"0101\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_ID_2 \u003d \"5001\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_ID_3 \u003d \"1001\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_ID_4 \u003d \"1501\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_ID_5 \u003d \"1100\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_ID_6 \u003d \"1122\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_HEIGHT \u003d \"49\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_HEIGHT_2 \u003d \"273\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_TARGET_WEIGHT \u003d \"Test.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_TARGET_WEIGHT_2 \u003d \"70.000\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final String INVALID_STARTING_DATE \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_validProfileDetails_returnsProfile() throws Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_PROFILE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(VALID_PROFILE, profile.toModelType());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidName_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(INVALID_NAME, VALID_ID, VALID_HEIGHT,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidName2_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(INVALID_NAME_2, VALID_ID, VALID_HEIGHT,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullName_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(null, VALID_ID, VALID_HEIGHT,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidId_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, INVALID_ID, VALID_HEIGHT,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d ID.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidId2_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, INVALID_ID_2, VALID_HEIGHT,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d ID.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidId3_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, INVALID_ID_3, VALID_HEIGHT,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d ID.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidId4_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, INVALID_ID_4, VALID_HEIGHT,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d ID.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidId5_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, INVALID_ID_5, VALID_HEIGHT,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d ID.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidId6_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, INVALID_ID_6, VALID_HEIGHT,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d ID.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullId_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, null, VALID_HEIGHT,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ID.class.getSimpleName());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidHeight_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, VALID_ID, INVALID_HEIGHT,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Height.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidHeight2_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, VALID_ID, INVALID_HEIGHT_2,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Height.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullHeight_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, VALID_ID, null,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Height.class.getSimpleName());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidWeight_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, VALID_ID, VALID_HEIGHT,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                INVALID_TARGET_WEIGHT, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Weight.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidWeight2_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, VALID_ID, VALID_HEIGHT,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                INVALID_TARGET_WEIGHT_2, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Weight.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullWeight_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, VALID_ID, VALID_HEIGHT,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                null, VALID_STARTING_DATE);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_invalidDate_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, VALID_ID, VALID_HEIGHT,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, INVALID_STARTING_DATE);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_nullDate_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonAdaptedProfile profile \u003d new JsonAdaptedProfile(VALID_NAME, VALID_ID, VALID_HEIGHT,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                VALID_TARGET_WEIGHT, null);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, profile::toModelType);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 192
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonMyFitnessBuddyStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.PERSON7;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.PERSON8;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.getTypicalMyFitnessBuddy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class JsonMyFitnessBuddyStorageTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonMyFitnessBuddyStorageTest\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void readMyFitnessBuddy_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e readMyFitnessBuddy(null));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private java.util.Optional\u003cReadOnlyMyFitnessBuddy\u003e readMyFitnessBuddy(String filePath) throws Exception {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return new JsonMyFitnessBuddyStorage(Paths.get(filePath))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                .readFitnessBuddy(addToTestDataPathIfNotNull(filePath));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return prefsFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                : null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_missingFile_emptyResult() throws Exception {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertFalse(readMyFitnessBuddy(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void read_notJsonFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(DataConversionException.class, () -\u003e readMyFitnessBuddy(\"notJsonFormatMyFitnessBuddy.json\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void readMyFitnessBuddy_invalidDayMyFitnessBuddy_throwDataConversionException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(DataConversionException.class, () -\u003e readMyFitnessBuddy(\"invalidPersonMyFitnessBuddy.json\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void readMyFitnessBuddy_invalidAndValidDayMyFitnessBuddy_throwDataConversionException() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(DataConversionException.class, () -\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                readMyFitnessBuddy(\"invalidAndValidPersonMyFitnessBuddy.json\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void readAndSaveMyFitnessBuddy_allInOrder_success() throws Exception {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Path filePath \u003d testFolder.resolve(\"TempMyFitnessBuddy.json\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        MyFitnessBuddy original \u003d getTypicalMyFitnessBuddy();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonMyFitnessBuddyStorage jsonMyFitnessBuddyStorage \u003d new JsonMyFitnessBuddyStorage(filePath);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        // Save in new file and read back"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        jsonMyFitnessBuddyStorage.saveFitnessBuddy(original, filePath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        ReadOnlyMyFitnessBuddy readBack \u003d jsonMyFitnessBuddyStorage.readFitnessBuddy(filePath).get();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(original, new MyFitnessBuddy(readBack));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        //Modify data, overwrite exiting file, and read back"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        original.addPerson(PERSON7);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        jsonMyFitnessBuddyStorage.saveFitnessBuddy(original, filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        readBack \u003d jsonMyFitnessBuddyStorage.readFitnessBuddy(filePath).get();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(original, new MyFitnessBuddy(readBack));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        // Save and read without specifying file path"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        original.addPerson(PERSON8);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        jsonMyFitnessBuddyStorage.saveFitnessBuddy(original); // file path not specified"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        readBack \u003d jsonMyFitnessBuddyStorage.readFitnessBuddy().get(); // file path not specified"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(original, new MyFitnessBuddy(readBack));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void saveMyFitnessBuddy_nullMyFitnessBuddy_throwsNullPointerException() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e saveMyFitnessBuddy(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves {@code addressBook} at the specified {@code filePath}."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private void saveMyFitnessBuddy(ReadOnlyMyFitnessBuddy addressBook, String filePath) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new JsonMyFitnessBuddyStorage(Paths.get(filePath))"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                    .saveFitnessBuddy(addressBook, addToTestDataPathIfNotNull(filePath));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void saveMyFitnessBuddy_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e saveMyFitnessBuddy(new MyFitnessBuddy(), null));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 43,
      "-": 65,
      "jiaax": 3
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonSerializableMyFitnessBuddyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.commons.util.JsonUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.testutil.TypicalPerson;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class JsonSerializableMyFitnessBuddyTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableMyFitnessBuddyTest\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Path TYPICAL_DAYS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsMyFitnessBuddy.json\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Path ANOTHER_DAYS_FILE \u003d TEST_DATA_FOLDER.resolve(\"anotherPersonsMyFitnessBuddy.json\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Path INVALID_DAY_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonMyFitnessBuddy.json\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private static final Path DUPLICATE_DAY_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonMyFitnessBuddy.json\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void toModelType_typicalDaysFile_success() throws Exception {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonSerializableMyFitnessBuddy dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_DAYS_FILE,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                JsonSerializableMyFitnessBuddy.class).get();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        MyFitnessBuddy myFitnessBuddyFromFile \u003d dataFromFile.toModelType();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        MyFitnessBuddy typicalPersonsMyFitnessBuddy \u003d TypicalPerson.getTypicalMyFitnessBuddy();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(myFitnessBuddyFromFile, typicalPersonsMyFitnessBuddy);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void toModelType_anotherDaysFile_success() throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonSerializableMyFitnessBuddy dataFromFile \u003d JsonUtil.readJsonFile(ANOTHER_DAYS_FILE,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "               JsonSerializableMyFitnessBuddy.class).get();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        MyFitnessBuddy myFitnessBuddyFromFile \u003d dataFromFile.toModelType();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        MyFitnessBuddy anotherPersonsMyFitnessBuddy \u003d TypicalPerson.getAnotherMyFitnessBuddy();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(myFitnessBuddyFromFile, anotherPersonsMyFitnessBuddy);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void toModelType_invalidDayFile_throwsIllegalValueException() throws Exception {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonSerializableMyFitnessBuddy dataFromFile \u003d JsonUtil.readJsonFile(INVALID_DAY_FILE,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                JsonSerializableMyFitnessBuddy.class).get();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, dataFromFile::toModelType);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void toModelType_duplicateDays_throwsIllegalValueException() throws Exception {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonSerializableMyFitnessBuddy dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_DAY_FILE,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                JsonSerializableMyFitnessBuddy.class).get();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertThrows(IllegalValueException.class, JsonSerializableMyFitnessBuddy.MESSAGE_DUPLICATE_PERSON,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                dataFromFile::toModelType);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 34,
      "ethanso56": 3,
      "-": 19,
      "wayne987": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonUserPrefsStorageTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_notJsonFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefsFileInTestDataFolder !\u003d null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                : null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs expected \u003d getTypicalUserPrefs();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new UserPrefs(), actual);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs expected \u003d getTypicalUserPrefs();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private UserPrefs getTypicalUserPrefs() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        userPrefs.setMyFitnessBuddyFilePath(Paths.get(\"data\\\\myfitnessbuddy.json\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void savePrefs_nullPrefs_throwsNullPointerException() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                    .saveUserPrefs(userPrefs);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"There should not be an error writing to the file\", ioe);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Path actual \u003d jsonUserPrefsStorage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Path expected \u003d testFolder.resolve(\"TempPrefs.json\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(actual, expected);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs original \u003d new UserPrefs();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try writing when the file doesn\u0027t exist"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        jsonUserPrefsStorage.saveUserPrefs(original);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        //Try saving when the file exists"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        jsonUserPrefsStorage.saveUserPrefs(original);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, readBack);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 10,
      "-": 121
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/StorageManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalPerson.getTypicalMyFitnessBuddy;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.ReadOnlyMyFitnessBuddy;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManagerTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path testFolder;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        JsonMyFitnessBuddyStorage addressBookStorage \u003d new JsonMyFitnessBuddyStorage(getTempFilePath(\"ab\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path getTempFilePath(String fileName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return testFolder.resolve(fileName);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void prefsReadSave() throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "         * Note: This is an integration test that verifies the StorageManager is properly wired to the"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "         * {@link JsonUserPrefsStorage} class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs original \u003d new UserPrefs();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        storageManager.saveUserPrefs(original);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(original, retrieved);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void getUserPrefsFilePath() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Path actual \u003d storageManager.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        Path expected \u003d testFolder.resolve(\"prefs\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(actual, expected);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void myFitnessBuddyReadSave() throws Exception {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "         * Note: This is an integration test that verifies the StorageManager is properly wired to the"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "         * {@link JsonMyFitnessBuddyStorage} class."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "         * More extensive testing of UserPref saving/reading is done in {@link JsonMyFitnessBuddyStorageTest} class."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        MyFitnessBuddy original \u003d getTypicalMyFitnessBuddy();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        storageManager.saveFitnessBuddy(original);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        ReadOnlyMyFitnessBuddy retrieved \u003d storageManager.readFitnessBuddy().get();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertEquals(original, new MyFitnessBuddy(retrieved));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public void getMyFitnessBuddyFilePath() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        assertNotNull(storageManager.getMyFitnessBuddyFilePath());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 17,
      "-": 56,
      "jiaax": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/CalorieBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Calorie;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieCount;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Exercise;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Food;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class CalorieBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String DEFAULT_TIME \u003d \"1130\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String DEFAULT_CALORIE_COUNT \u003d \"123\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String DEFAULT_EXERCISE \u003d \"running\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String DEFAULT_FOOD \u003d \"laksa\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final boolean INPUT \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final boolean OUTPUT \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Time time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private CalorieCount calorieCount;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Exercise exercise;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private Food food;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Creates a {@code CalorieBuilder} with the default details."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieBuilder() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.time \u003d new Time(DEFAULT_TIME);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorieCount \u003d new CalorieCount(DEFAULT_CALORIE_COUNT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.food \u003d new Food(DEFAULT_FOOD);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.exercise \u003d new Exercise(DEFAULT_EXERCISE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Initializes the CalorieBuilder with the data of {@code calorieToCopy}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieBuilder(Calorie calorieToCopy, Boolean type) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.time \u003d new Time(DEFAULT_TIME);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorieCount \u003d new CalorieCount(DEFAULT_CALORIE_COUNT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        //INPUT"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        if (type) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.food \u003d ((Input) calorieToCopy).getFood();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.exercise \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            //OUTPUT"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.exercise \u003d ((Output) calorieToCopy).getExercise();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            this.food \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Sets the {@code Time} of the {@code Calorie} that we are building."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieBuilder withTime(String time) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.time \u003d new Time(time);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Sets the {@code CalorieCount} of the {@code Calorie} that we are building."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieBuilder withCalorieCount(String calorieCount) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.calorieCount \u003d new CalorieCount(calorieCount);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Sets the {@code Exericse} of the {@code Calorie} that we are building."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieBuilder withExercise(String exercise) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.exercise \u003d new Exercise(exercise);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     * Sets the {@code Exericse} of the {@code Calorie} that we are building."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wayne987"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public CalorieBuilder withFood(String food) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        this.food \u003d new Food(food);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Input buildInput() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Input(time, food, calorieCount);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public Output buildOutput() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new Output(time, exercise, calorieCount);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 96
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/CalorieManagerBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class CalorieManagerBuilder {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    private CalorieManager calorieManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Creates a {@code CalorieManagerBuilder}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public CalorieManagerBuilder() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Adds an {@code Input} to the {@code CalorieManager} that we are building."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public CalorieManagerBuilder addInput(Input input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        calorieManager.addCalorieInput(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Adds an {@code Output} to the {@code CalorieManager} that we are building."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public CalorieManagerBuilder addOutput(Output output) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        calorieManager.addCalorieOutput(output);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public CalorieManager build() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return calorieManager;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 37
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/DayBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "//import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * A utility class to help with building Day objects."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DayBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final String DEFAULT_DATE \u003d \"2020-01-02\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    public static final String DEFAULT_WEIGHT \u003d \"42\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "    private Weight weight;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    private CalorieManager calorieManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Creates a {@code DayBuilder} with the default details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DayBuilder() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        date \u003d new Date(DEFAULT_DATE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        weight \u003d new Weight(DEFAULT_WEIGHT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager \u003d new CalorieManager();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Initializes the DayBuilder with the data of {@code dayToCopy}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DayBuilder(Day dayToCopy) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        date \u003d dayToCopy.getDate();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        weight \u003d dayToCopy.getWeight();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager \u003d dayToCopy.getCalorieManager();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieOutput(new CalorieBuilder().buildOutput());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        calorieManager.addCalorieInput(new CalorieBuilder().buildInput());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Sets the {@code Date} of the {@code Day} that we are building."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DayBuilder withDate(String date) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "     * Sets the {@code Weight} of the {@code Day} that we are building."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DayBuilder withWeight(String weight) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        this.weight \u003d new Weight(weight);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Day build() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return new Day(date, weight, calorieManager);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 2,
      "ethanso56": 16,
      "-": 30,
      "wayne987": 8,
      "junhui-phoon": 7
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/DayUtil.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * A utility class for Day."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DayUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Returns an add command string for adding the {@code day}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static String getAddCommand(Day day) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return AddCommand.COMMAND_WORD + \" \" + getDayDetails(day);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Returns the part of command string for the given {@code day}\u0027s details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static String getDayDetails(Day day) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        sb.append(PREFIX_DATE + day.getDate().value + \" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        sb.append(PREFIX_WEIGHT + day.getWeight().value + \" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Returns the part of command string for the given {@code EditDayDescriptor}\u0027s details."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static String getEditDayDescriptorDetails(EditCommand.EditDayDescriptor descriptor) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        descriptor.getDate().ifPresent(date -\u003e sb.append(PREFIX_DATE).append(date.value).append(\" \"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhui-phoon"
        },
        "content": "        descriptor.getWeight().ifPresent(weight -\u003e sb.append(PREFIX_WEIGHT).append(weight.value).append(\" \"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 14,
      "-": 24,
      "junhui-phoon": 3
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/EditDayDescriptorBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * A utility class to help with building EditDayDescriptor objects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class EditDayDescriptorBuilder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private EditCommand.EditDayDescriptor descriptor;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public EditDayDescriptorBuilder() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        descriptor \u003d new EditCommand.EditDayDescriptor();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public EditDayDescriptorBuilder(EditCommand.EditDayDescriptor descriptor) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.descriptor \u003d new EditCommand.EditDayDescriptor(descriptor);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Returns an {@code EditDayDescriptor} with fields containing {@code day}\u0027s details"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public EditDayDescriptorBuilder(Day day) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        descriptor \u003d new EditCommand.EditDayDescriptor();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        descriptor.setDate(day.getDate());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        descriptor.setWeight(day.getWeight());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Sets the {@code Date} of the {@code EditDayDescriptor} that we are building."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public EditDayDescriptorBuilder withDate(String date) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        descriptor.setDate(new Date(date));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Sets the {@code Weight} of the {@code EditDayDescriptor} that we are building."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public EditDayDescriptorBuilder withWeight(String weight) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        descriptor.setWeight(new Weight(weight));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public EditCommand.EditDayDescriptor build() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return descriptor;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 51
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/MyFitnessBuddyBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * A utility class to help with building MyFitnessBuddy objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Example usage: \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": " *     {@code MyFitnessBuddy ab \u003d new MyFitnessBuddyBuilder().withPerson(\"John\", \"Doe\").build();}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class MyFitnessBuddyBuilder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private MyFitnessBuddy myFitnessBuddy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public MyFitnessBuddyBuilder() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        myFitnessBuddy \u003d new MyFitnessBuddy();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public MyFitnessBuddyBuilder(MyFitnessBuddy myFitnessBuddy) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.myFitnessBuddy \u003d myFitnessBuddy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Adds a new {@code Day} to the {@code myFitnessBuddy} that we are building."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public MyFitnessBuddyBuilder withDay(Day day) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        myFitnessBuddy.addDay(day);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public MyFitnessBuddy build() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return myFitnessBuddy;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/PersonBuilder.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class to help with building Person objects."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Example usage: \u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": " *     {@code Person ab \u003d new PersonBuilder().withProfile(profile).build();}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Person person;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        person \u003d new Person();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public PersonBuilder(Person person) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.person \u003d person;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Adds a new {@code Profile} to the {@code MyFitnessBuddy} that we are building."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public PersonBuilder withProfile(Profile profile) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        person.setProfile(profile);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Builds a person with specified days."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public PersonBuilder withDays(List\u003cDay\u003e days) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        for (Day day: days) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            person.addDay(day);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public Person build() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return person;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 3,
      "-": 30,
      "jiaax": 14
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TestUtil.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class for test cases."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class TestUtil {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Folder used for temp files created during testing. Ignored by Git."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Appends {@code fileName} to the sandbox folder path and returns the resulting path."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the sandbox folder if it doesn\u0027t exist."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Path getFilePathInSandboxFolder(String fileName) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.createDirectories(SANDBOX_FOLDER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return SANDBOX_FOLDER.resolve(fileName);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Returns the middle index of the day in the {@code model}\u0027s day list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index getMidIndex(Model model) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return Index.fromOneBased(model.getFilteredDayList().size() / 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Returns the last index of the day in the {@code model}\u0027s day list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index getLastIndex(Model model) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return Index.fromOneBased(model.getFilteredDayList().size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Returns the day in the {@code model}\u0027s day list at {@code index}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static Day getDay(Model model, Index index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return model.getFilteredDayList().get(index.getZeroBased());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 8,
      "-": 47
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalCalorieManager.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.INPUT_A;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.INPUT_B;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.OUTPUT_A;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import static seedu.address.testutil.TypicalCalories.OUTPUT_B;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.calorie.CalorieManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class TypicalCalorieManager {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final CalorieManager CALORIE_MANAGER1 \u003d new CalorieManagerBuilder().addInput(INPUT_A)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .addInput(INPUT_B).addOutput(OUTPUT_A).addOutput(OUTPUT_B).build();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 14
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalCalories.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wayne987"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wayne987"
        },
        "content": "import seedu.address.model.calorie.Output;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wayne987"
        },
        "content": "public class TypicalCalories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Input INPUT_A \u003d new CalorieBuilder().withTime(\"1130\").withFood(\"laksa\").withCalorieCount(\"100\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            .buildInput();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Input INPUT_B \u003d new CalorieBuilder().withTime(\"1230\").withFood(\"rice\").withCalorieCount(\"201\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            .buildInput();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Input INPUT_C \u003d new CalorieBuilder().withTime(\"1330\").withFood(\"noodle\").withCalorieCount(\"302\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            .buildInput();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Input INPUT_D \u003d new CalorieBuilder().withTime(\"0030\").withFood(\"burger\").withCalorieCount(\"403\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            .buildInput();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Input INPUT_E \u003d new CalorieBuilder().withTime(\"0930\").withFood(\"beer\").withCalorieCount(\"555\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wayne987"
        },
        "content": "            .buildInput();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Output OUTPUT_A \u003d new CalorieBuilder().withTime(\"1130\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                              .withExercise(\"running\").withCalorieCount(\"111\").buildOutput();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Output OUTPUT_B \u003d new CalorieBuilder().withTime(\"1230\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                              .withExercise(\"swimming\").withCalorieCount(\"222\").buildOutput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Output OUTPUT_C \u003d new CalorieBuilder().withTime(\"1330\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                              .withExercise(\"dancing\").withCalorieCount(\"333\").buildOutput();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Output OUTPUT_D \u003d new CalorieBuilder().withTime(\"0030\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                              .withExercise(\"jumping\").withCalorieCount(\"444\").buildOutput();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Output OUTPUT_E \u003d new CalorieBuilder().withTime(\"0930\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wayne987"
        },
        "content": "                                              .withExercise(\"beer\").withCalorieCount(\"555\").buildOutput();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static List\u003cInput\u003e getTypicalInputList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(INPUT_A, INPUT_B, INPUT_C));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static List\u003cOutput\u003e getTypicalOutputList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wayne987"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(OUTPUT_A, OUTPUT_B, OUTPUT_C));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wayne987"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wayne987": 41
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalDays.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_1;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_2;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_2;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import seedu.address.model.day.Day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * A utility class containing a list of {@code Day} objects to be used in tests."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class TypicalDays {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Day DAY1 \u003d new DayBuilder().withDate(\"2020-11-23\").withWeight(\"45\").build();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Day DAY2 \u003d new DayBuilder().withDate(\"2020-05-12\").build();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Day DAY3 \u003d new DayBuilder().withDate(\"2020-01-23\").withWeight(\"75\").build();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Day DAY4 \u003d new DayBuilder().withDate(\"2020-01-13\").withWeight(\"66\").build();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Day DAY5 \u003d new DayBuilder().withDate(\"2020-09-12\").withWeight(\"42\").build();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Day DAY6 \u003d new DayBuilder().withDate(\"2020-03-01\").withWeight(\"51\").build();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Day DAY7 \u003d new DayBuilder().withDate(\"2019-12-25\").withWeight(\"73\").build();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Day HOON \u003d new DayBuilder().withDate(\"2020-06-09\").withWeight(\"56\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "           .build();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    public static final Day IDA \u003d new DayBuilder().withDate(\"2020-10-11\").withWeight(\"40\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "          .build();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    // Manually added - Day\u0027s details found in {@code CommandTestUtil}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    // MDAY stands for manually added day"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Day MDAY1 \u003d new DayBuilder().withDate(VALID_DATE_1).withWeight(VALID_WEIGHT_1)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "         .build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Day MDAY2 \u003d new DayBuilder().withDate(VALID_DATE_2).withWeight(VALID_WEIGHT_2)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static final Profile DEFAULT_PROFILE \u003d TypicalProfiles.DEFAULT_PROFILE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private TypicalDays() {} // prevents instantiation"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static List\u003cDay\u003e getTypicalDays() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(DAY1, DAY2, DAY3, DAY4, DAY5, DAY6, DAY7));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wayne987"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static List\u003cDay\u003e getDuplicateDays() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(DAY1, DAY1, DAY1, DAY2, DAY3));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wayne987"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 11,
      "ethanso56": 10,
      "-": 19,
      "wayne987": 4,
      "jiaax": 7
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalIndexes.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class containing a list of {@code Index} objects to be used in tests."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class TypicalIndexes {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final Index INDEX_FIRST_DAY \u003d Index.fromOneBased(1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final Index INDEX_SECOND_DAY \u003d Index.fromOneBased(2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static final Index INDEX_THIRD_DAY \u003d Index.fromOneBased(3);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 3,
      "-": 9
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalPerson.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.MyFitnessBuddy;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "public class TypicalPerson {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Person PERSON1 \u003d new PersonBuilder().withProfile(TypicalProfiles.PROFILE1)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .withDays(TypicalDays.getTypicalDays()).build();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Person PERSON2 \u003d new PersonBuilder().withProfile(TypicalProfiles.PROFILE2)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .withDays(TypicalDays.getTypicalDays()).build();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Person PERSON3 \u003d new PersonBuilder().withProfile(TypicalProfiles.PROFILE3)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .withDays(TypicalDays.getTypicalDays()).build();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Person PERSON4 \u003d new PersonBuilder().withProfile(TypicalProfiles.PROFILE4)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .withDays(TypicalDays.getTypicalDays()).build();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Person PERSON5 \u003d new PersonBuilder().withProfile(TypicalProfiles.PROFILE5)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .withDays(TypicalDays.getTypicalDays()).build();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Person PERSON6 \u003d new PersonBuilder().withProfile(TypicalProfiles.PROFILE6)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .withDays(TypicalDays.getTypicalDays()).build();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Person PERSON7 \u003d new PersonBuilder().withProfile(TypicalProfiles.PROFILE7)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .withDays(TypicalDays.getTypicalDays()).build();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Person PERSON8 \u003d new PersonBuilder().withProfile(TypicalProfiles.PROFILE8)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            .withDays(TypicalDays.getTypicalDays()).build();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static List\u003cPerson\u003e getTypicalPersons() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(PERSON1, PERSON2, PERSON3, PERSON4, PERSON5, PERSON6));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns an {@code MyFitnessBuddy} with all the typical persons."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static MyFitnessBuddy getTypicalMyFitnessBuddy() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        MyFitnessBuddy myFitnessBuddy \u003d new MyFitnessBuddy();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        for (Person person : getTypicalPersons()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            myFitnessBuddy.addPerson(person);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return myFitnessBuddy;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoperawr"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     * Returns an {@code getAnotherFitnessBuddy} with all the typical days and calories in them."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static MyFitnessBuddy getAnotherMyFitnessBuddy() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        MyFitnessBuddy myFitnessBuddy \u003d new MyFitnessBuddy();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        for (Person person : getTypicalPersons()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            myFitnessBuddy.addPerson(person);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        myFitnessBuddy.getPersonList().stream().forEach(x-\u003ex.getDayList().stream()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                .forEach(y-\u003ey.getCalorieManager().addCalorieInput(TypicalCalories.INPUT_A)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        myFitnessBuddy.getPersonList().stream().forEach(x-\u003ex.getDayList().stream()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                .forEach(y-\u003ey.getCalorieManager().addCalorieInput(TypicalCalories.INPUT_B)));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        myFitnessBuddy.getPersonList().stream().forEach(x-\u003ex.getDayList().stream()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                .forEach(y-\u003ey.getCalorieManager().addCalorieInput(TypicalCalories.INPUT_C)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        myFitnessBuddy.getPersonList().stream().forEach(x-\u003ex.getDayList().stream()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                .forEach(y-\u003ey.getCalorieManager().addCalorieOutput(TypicalCalories.OUTPUT_A)));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        myFitnessBuddy.getPersonList().stream().forEach(x-\u003ex.getDayList().stream()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                .forEach(y-\u003ey.getCalorieManager().addCalorieOutput(TypicalCalories.OUTPUT_B)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        myFitnessBuddy.getPersonList().stream().forEach(x-\u003ex.getDayList().stream()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "                .forEach(y-\u003ey.getCalorieManager().addCalorieOutput(TypicalCalories.OUTPUT_C)));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "        return myFitnessBuddy;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 66
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalProfiles.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "import seedu.address.model.day.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.day.Weight;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Height;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.ID;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import seedu.address.model.person.Profile;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class TypicalProfiles {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Profile DEFAULT_PROFILE \u003d new Profile(new Name(\"DEFAULT\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new ID(), new Height(), new Weight());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Profile PROFILE1 \u003d new Profile(new Name(\"First\"), new ID(\"1111\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new Height(\"171\"), new Weight(\"61\"), new Date(\"2020-01-01\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Profile PROFILE2 \u003d new Profile(new Name(\"Second\"), new ID(\"1112\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new Height(\"172\"), new Weight(\"62\"), new Date(\"2020-02-02\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Profile PROFILE3 \u003d new Profile(new Name(\"Third\"), new ID(\"1113\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new Height(\"173\"), new Weight(\"63\"), new Date(\"2020-03-03\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Profile PROFILE4 \u003d new Profile(new Name(\"Fourth\"), new ID(\"1114\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new Height(\"174\"), new Weight(\"64\"), new Date(\"2020-04-04\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Profile PROFILE5 \u003d new Profile(new Name(\"Fifth\"), new ID(\"1115\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new Height(\"175\"), new Weight(\"65\"), new Date(\"2020-05-05\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Profile PROFILE6 \u003d new Profile(new Name(\"Sixth\"), new ID(\"1116\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new Height(\"176\"), new Weight(\"66\"), new Date(\"2020-06-06\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Profile PROFILE7 \u003d new Profile(new Name(\"Seventh\"), new ID(\"1117\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new Height(\"177\"), new Weight(\"67\"), new Date(\"2020-07-07\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "    public static final Profile PROFILE8 \u003d new Profile(new Name(\"Eighth\"), new ID(\"1118\"),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoperawr"
        },
        "content": "            new Height(\"178\"), new Weight(\"68\"), new Date(\"2020-08-08\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoperawr": 19,
      "jiaax": 12
    }
  }
]
